{
  "definitions": [
    {
      "definition": {
        "name": "double",
        "id": 571523412,
        "type": {
          "name": "Double"
        },
        "base": true
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "string",
        "id": 3039325732,
        "type": {
          "name": "String"
        },
        "base": true
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "int32",
        "id": 1555641594,
        "type": {
          "name": "Int32"
        }
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "int53",
        "id": 1736558574,
        "type": {
          "name": "Int53"
        }
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "int64",
        "id": 1570690884,
        "type": {
          "name": "Int64"
        }
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "bytes",
        "id": 3912743810,
        "type": {
          "name": "Bytes"
        }
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "boolFalse",
        "id": 3162085175,
        "type": {
          "name": "Bool"
        }
      },
      "category": "type"
    },
    {
      "definition": {
        "name": "boolTrue",
        "id": 2574415285,
        "type": {
          "name": "Bool"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An object of this type can be returned on every function call, in case of an error"
        },
        {
          "name": "code",
          "value": "Error code; subject to future changes. If the error code is 406, the error message must not be processed in any way and must not be displayed to the user"
        },
        {
          "name": "message",
          "value": "Error message; subject to future changes"
        }
      ],
      "definition": {
        "name": "error",
        "id": 2614988570,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Error"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An object of this type is returned on a successful function call for certain functions"
        }
      ],
      "definition": {
        "name": "ok",
        "id": 3572350569,
        "type": {
          "name": "Ok"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains parameters for TDLib initialization"
        },
        {
          "name": "use_test_dc",
          "value": "If set to true, the Telegram test environment will be used instead of the production environment"
        },
        {
          "name": "database_directory",
          "value": "The path to the directory for the persistent database; if empty, the current working directory will be used"
        },
        {
          "name": "files_directory",
          "value": "The path to the directory for storing files; if empty, database_directory will be used"
        },
        {
          "name": "use_file_database",
          "value": "If set to true, information about downloaded and uploaded files will be saved between application restarts"
        },
        {
          "name": "use_chat_info_database",
          "value": "If set to true, the library will maintain a cache of users, basic groups, supergroups, channels and secret chats. Implies use_file_database"
        },
        {
          "name": "use_message_database",
          "value": "If set to true, the library will maintain a cache of chats and messages. Implies use_chat_info_database"
        },
        {
          "name": "use_secret_chats",
          "value": "If set to true, support for secret chats will be enabled"
        },
        {
          "name": "api_id",
          "value": "Application identifier for Telegram API access, which can be obtained at https://my.telegram.org"
        },
        {
          "name": "api_hash",
          "value": "Application identifier hash for Telegram API access, which can be obtained at https://my.telegram.org"
        },
        {
          "name": "system_language_code",
          "value": "IETF language tag of the user's operating system language; must be non-empty"
        },
        {
          "name": "device_model",
          "value": "Model of the device the application is being run on; must be non-empty"
        },
        {
          "name": "system_version",
          "value": "Version of the operating system the application is being run on. If empty, the version is automatically detected by TDLib"
        },
        {
          "name": "application_version",
          "value": "Application version; must be non-empty"
        },
        {
          "name": "enable_storage_optimizer",
          "value": "If set to true, old files will automatically be deleted"
        },
        {
          "name": "ignore_file_names",
          "value": "If set to true, original file names will be ignored. Otherwise, downloaded files will be saved under names as close as possible to the original name"
        }
      ],
      "definition": {
        "name": "tdlibParameters",
        "id": 3533446523,
        "params": [
          {
            "name": "use_test_dc",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "database_directory",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "files_directory",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "use_file_database",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_chat_info_database",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_message_database",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_secret_chats",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "api_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "api_hash",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "system_language_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "device_model",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "system_version",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "application_version",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "enable_storage_optimizer",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "ignore_file_names",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "TdlibParameters"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An authentication code is delivered via a private Telegram message, which can be viewed from another active session"
        },
        {
          "name": "length",
          "value": "Length of the code"
        }
      ],
      "definition": {
        "name": "authenticationCodeTypeTelegramMessage",
        "id": 2079628074,
        "params": [
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An authentication code is delivered via an SMS message to the specified phone number"
        },
        {
          "name": "length",
          "value": "Length of the code"
        }
      ],
      "definition": {
        "name": "authenticationCodeTypeSms",
        "id": 962650760,
        "params": [
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An authentication code is delivered via a phone call to the specified phone number"
        },
        {
          "name": "length",
          "value": "Length of the code"
        }
      ],
      "definition": {
        "name": "authenticationCodeTypeCall",
        "id": 1636265063,
        "params": [
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An authentication code is delivered by an immediately cancelled call to the specified phone number. The number from which the call was made is the code"
        },
        {
          "name": "pattern",
          "value": "Pattern of the phone number from which the call will be made"
        }
      ],
      "definition": {
        "name": "authenticationCodeTypeFlashCall",
        "id": 1395882402,
        "params": [
          {
            "name": "pattern",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Information about the authentication code that was sent"
        },
        {
          "name": "phone_number",
          "value": "A phone number that is being authenticated"
        },
        {
          "name": "type",
          "value": "Describes the way the code was sent to the user"
        },
        {
          "name": "next_type",
          "value": "Describes the way the next code will be sent to the user; may be null"
        },
        {
          "name": "timeout",
          "value": "Timeout before the code should be re-sent, in seconds"
        }
      ],
      "definition": {
        "name": "authenticationCodeInfo",
        "id": 3434621880,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "AuthenticationCodeType"
            }
          },
          {
            "name": "next_type",
            "type": {
              "name": "AuthenticationCodeType"
            }
          },
          {
            "name": "timeout",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Information about the email address authentication code that was sent"
        },
        {
          "name": "email_address_pattern",
          "value": "Pattern of the email address to which an authentication code was sent"
        },
        {
          "name": "length",
          "value": "Length of the code; 0 if unknown"
        }
      ],
      "definition": {
        "name": "emailAddressAuthenticationCodeInfo",
        "id": 1151066659,
        "params": [
          {
            "name": "email_address_pattern",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "EmailAddressAuthenticationCodeInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a part of the text that needs to be formatted in some unusual way"
        },
        {
          "name": "offset",
          "value": "Offset of the entity, in UTF-16 code units"
        },
        {
          "name": "length",
          "value": "Length of the entity, in UTF-16 code units"
        },
        {
          "name": "type",
          "value": "Type of the entity"
        }
      ],
      "definition": {
        "name": "textEntity",
        "id": 2343279016,
        "params": [
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "TextEntityType"
            }
          }
        ],
        "type": {
          "name": "TextEntity"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of text entities"
        },
        {
          "name": "entities",
          "value": "List of text entities"
        }
      ],
      "definition": {
        "name": "textEntities",
        "id": 3481911896,
        "params": [
          {
            "name": "entities",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "textEntity",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TextEntities"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text with some entities"
        },
        {
          "name": "text",
          "value": "The text"
        },
        {
          "name": "entities",
          "value": "Entities contained in the text. Entities can be nested, but must not mutually intersect with each other."
        }
      ],
      "definition": {
        "name": "formattedText",
        "id": 2743941614,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "entities",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "textEntity",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "FormattedText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains Telegram terms of service"
        },
        {
          "name": "text",
          "value": "Text of the terms of service"
        },
        {
          "name": "min_user_age",
          "value": "The minimum age of a user to be able to accept the terms; 0 if any"
        },
        {
          "name": "show_popup",
          "value": "True, if a blocking popup with terms of service must be shown to the user"
        }
      ],
      "definition": {
        "name": "termsOfService",
        "id": 739422597,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "min_user_age",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "show_popup",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "TermsOfService"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib needs TdlibParameters for initialization"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitTdlibParameters",
        "id": 904720988,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib needs an encryption key to decrypt the local database"
        },
        {
          "name": "is_encrypted",
          "value": "True, if the database is currently encrypted"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitEncryptionKey",
        "id": 612103496,
        "params": [
          {
            "name": "is_encrypted",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib needs the user's phone number to authorize. Call `setAuthenticationPhoneNumber` to provide the phone number, or use `requestQrCodeAuthentication`, or `checkAuthenticationBotToken` for other authentication options"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitPhoneNumber",
        "id": 306402531,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib needs the user's authentication code to authorize"
        },
        {
          "name": "code_info",
          "value": "Information about the authorization code that was sent"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitCode",
        "id": 52643073,
        "params": [
          {
            "name": "code_info",
            "type": {
              "name": "authenticationCodeInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user needs to confirm authorization on another logged in device by scanning a QR code with the provided link"
        },
        {
          "name": "link",
          "value": "A tg:// URL for the QR code. The link will be updated frequently"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitOtherDeviceConfirmation",
        "id": 860166378,
        "params": [
          {
            "name": "link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is unregistered and need to accept terms of service and enter their first name and last name to finish registration"
        },
        {
          "name": "terms_of_service",
          "value": "Telegram terms of service"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitRegistration",
        "id": 550350511,
        "params": [
          {
            "name": "terms_of_service",
            "type": {
              "name": "termsOfService",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has been authorized, but needs to enter a password to start using the application"
        },
        {
          "name": "password_hint",
          "value": "Hint for the password; may be empty"
        },
        {
          "name": "has_recovery_email_address",
          "value": "True, if a recovery email address has been set up"
        },
        {
          "name": "recovery_email_address_pattern",
          "value": "Pattern of the email address to which the recovery email was sent; empty until a recovery email has been sent"
        }
      ],
      "definition": {
        "name": "authorizationStateWaitPassword",
        "id": 187548796,
        "params": [
          {
            "name": "password_hint",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "has_recovery_email_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "recovery_email_address_pattern",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has been successfully authorized. TDLib is now ready to answer queries"
        }
      ],
      "definition": {
        "name": "authorizationStateReady",
        "id": 2460095559,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is currently logging out"
        }
      ],
      "definition": {
        "name": "authorizationStateLoggingOut",
        "id": 154449270,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib is closing, all subsequent queries will be answered with the error 500. Note that closing TDLib can take a while. All resources will be freed only after authorizationStateClosed has been received"
        }
      ],
      "definition": {
        "name": "authorizationStateClosing",
        "id": 445855311,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "TDLib client is in its final state. All databases are closed and all resources are released. No other updates will be received after this. All queries will be responded to"
        }
      ],
      "definition": {
        "name": "authorizationStateClosed",
        "id": 1526047584,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents the current state of 2-step verification"
        },
        {
          "name": "has_password",
          "value": "True, if a 2-step verification password is set"
        },
        {
          "name": "password_hint",
          "value": "Hint for the password; may be empty"
        },
        {
          "name": "has_recovery_email_address",
          "value": "True, if a recovery email is set"
        },
        {
          "name": "has_passport_data",
          "value": "True, if some Telegram Passport elements were saved"
        },
        {
          "name": "recovery_email_address_code_info",
          "value": "Information about the recovery email address to which the confirmation email was sent; may be null"
        }
      ],
      "definition": {
        "name": "passwordState",
        "id": 3140169565,
        "params": [
          {
            "name": "has_password",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "password_hint",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "has_recovery_email_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_passport_data",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "recovery_email_address_code_info",
            "type": {
              "name": "emailAddressAuthenticationCodeInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about the current recovery email address"
        },
        {
          "name": "recovery_email_address",
          "value": "Recovery email address"
        }
      ],
      "definition": {
        "name": "recoveryEmailAddress",
        "id": 1290526187,
        "params": [
          {
            "name": "recovery_email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RecoveryEmailAddress"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about the availability of a temporary password, which can be used for payments"
        },
        {
          "name": "has_password",
          "value": "True, if a temporary password is available"
        },
        {
          "name": "valid_for",
          "value": "Time left before the temporary password expires, in seconds"
        }
      ],
      "definition": {
        "name": "temporaryPasswordState",
        "id": 939837410,
        "params": [
          {
            "name": "has_password",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "valid_for",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TemporaryPasswordState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a local file"
        },
        {
          "name": "path",
          "value": "Local path to the locally available file part; may be empty"
        },
        {
          "name": "can_be_downloaded",
          "value": "True, if it is possible to try to download or generate the file"
        },
        {
          "name": "can_be_deleted",
          "value": "True, if the file can be deleted"
        },
        {
          "name": "is_downloading_active",
          "value": "True, if the file is currently being downloaded (or a local copy is being generated by some other means)"
        },
        {
          "name": "is_downloading_completed",
          "value": "True, if the local copy is fully available"
        },
        {
          "name": "download_offset",
          "value": "Download will be started from this offset. downloaded_prefix_size is calculated from this offset"
        },
        {
          "name": "downloaded_prefix_size",
          "value": "If is_downloading_completed is false, then only some prefix of the file starting from download_offset is ready to be read. downloaded_prefix_size is the size of that prefix"
        },
        {
          "name": "downloaded_size",
          "value": "Total downloaded file bytes. Should be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage"
        }
      ],
      "definition": {
        "name": "localFile",
        "id": 3128566979,
        "params": [
          {
            "name": "path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "can_be_downloaded",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_deleted",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_downloading_active",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_downloading_completed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "download_offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "downloaded_prefix_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "downloaded_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LocalFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a remote file"
        },
        {
          "name": "id",
          "value": "Remote file identifier; may be empty. Can be used by the current user across application restarts or even from other devices. Uniquely identifies a file, but a file can have a lot of different valid identifiers."
        },
        {
          "name": "unique_id",
          "value": "Unique file identifier; may be empty if unknown. The unique file identifier which is the same for the same file even for different users and is persistent over time"
        },
        {
          "name": "is_uploading_active",
          "value": "True, if the file is currently being uploaded (or a remote copy is being generated by some other means)"
        },
        {
          "name": "is_uploading_completed",
          "value": "True, if a remote copy is fully available"
        },
        {
          "name": "uploaded_size",
          "value": "Size of the remote available part of the file; 0 if unknown"
        }
      ],
      "definition": {
        "name": "remoteFile",
        "id": 2472824274,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "unique_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_uploading_active",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_uploading_completed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "uploaded_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RemoteFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a file"
        },
        {
          "name": "id",
          "value": "Unique file identifier"
        },
        {
          "name": "size",
          "value": "File size; 0 if unknown"
        },
        {
          "name": "expected_size",
          "value": "Expected file size in case the exact file size is unknown, but an approximate size is known. Can be used to show download/upload progress"
        },
        {
          "name": "local",
          "value": "Information about the local copy of the file"
        },
        {
          "name": "remote",
          "value": "Information about the remote copy of the file"
        }
      ],
      "definition": {
        "name": "file",
        "id": 766337656,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "expected_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "local",
            "type": {
              "name": "localFile",
              "bare": true
            }
          },
          {
            "name": "remote",
            "type": {
              "name": "remoteFile",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A file defined by its unique ID"
        },
        {
          "name": "id",
          "value": "Unique file identifier"
        }
      ],
      "definition": {
        "name": "inputFileId",
        "id": 1788906253,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A file defined by its remote ID. The remote ID is guaranteed to be usable only if the corresponding file is still accessible to the user and known to TDLib."
        },
        {
          "name": "id",
          "value": "Remote file identifier"
        }
      ],
      "definition": {
        "name": "inputFileRemote",
        "id": 4187392830,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A file defined by a local path"
        },
        {
          "name": "path",
          "value": "Local path to the file"
        }
      ],
      "definition": {
        "name": "inputFileLocal",
        "id": 2056030919,
        "params": [
          {
            "name": "path",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A file generated by the application"
        },
        {
          "name": "original_path",
          "value": "Local path to a file from which the file is generated; may be empty if there is no such file"
        },
        {
          "name": "conversion",
          "value": "String specifying the conversion applied to the original file; should be persistent across application restarts. Conversions beginning with '#' are reserved for internal TDLib usage"
        },
        {
          "name": "expected_size",
          "value": "Expected size of the generated file; 0 if unknown"
        }
      ],
      "definition": {
        "name": "inputFileGenerated",
        "id": 2513615411,
        "params": [
          {
            "name": "original_path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "conversion",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "expected_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an image in JPEG format"
        },
        {
          "name": "type",
          "value": "Image type (see https://core.telegram.org/constructor/photoSize)"
        },
        {
          "name": "photo",
          "value": "Information about the image file"
        },
        {
          "name": "width",
          "value": "Image width"
        },
        {
          "name": "height",
          "value": "Image height"
        },
        {
          "name": "progressive_sizes",
          "value": "Sizes of progressive JPEG file prefixes, which can be used to preliminarily show the image"
        }
      ],
      "definition": {
        "name": "photoSize",
        "id": 417688889,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "progressive_sizes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PhotoSize"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Thumbnail image of a very poor quality and low resolution"
        },
        {
          "name": "width",
          "value": "Thumbnail width, usually doesn't exceed 40"
        },
        {
          "name": "height",
          "value": "Thumbnail height, usually doesn't exceed 40"
        },
        {
          "name": "data",
          "value": "The thumbnail in JPEG format"
        }
      ],
      "definition": {
        "name": "minithumbnail",
        "id": 3966426538,
        "params": [
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Minithumbnail"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in JPEG format"
        }
      ],
      "definition": {
        "name": "thumbnailFormatJpeg",
        "id": 3641463944,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in PNG format. It will be used only for background patterns"
        }
      ],
      "definition": {
        "name": "thumbnailFormatPng",
        "id": 1577490421,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in WEBP format. It will be used only for some stickers"
        }
      ],
      "definition": {
        "name": "thumbnailFormatWebp",
        "id": 4241378322,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in static GIF format. It will be used only for some bot inline results"
        }
      ],
      "definition": {
        "name": "thumbnailFormatGif",
        "id": 1252205962,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in TGS format. It will be used only for animated sticker sets"
        }
      ],
      "definition": {
        "name": "thumbnailFormatTgs",
        "id": 1315522642,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The thumbnail is in MPEG4 format. It will be used only for some animations and videos"
        }
      ],
      "definition": {
        "name": "thumbnailFormatMpeg4",
        "id": 278616062,
        "type": {
          "name": "ThumbnailFormat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a thumbnail"
        },
        {
          "name": "format",
          "value": "Thumbnail format"
        },
        {
          "name": "width",
          "value": "Thumbnail width"
        },
        {
          "name": "height",
          "value": "Thumbnail height"
        },
        {
          "name": "file",
          "value": "The thumbnail"
        }
      ],
      "definition": {
        "name": "thumbnail",
        "id": 1243275371,
        "params": [
          {
            "name": "format",
            "type": {
              "name": "ThumbnailFormat"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "file",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Thumbnail"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mask should be placed relatively to the forehead"
        }
      ],
      "definition": {
        "name": "maskPointForehead",
        "id": 1027512005,
        "type": {
          "name": "MaskPoint"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mask should be placed relatively to the eyes"
        }
      ],
      "definition": {
        "name": "maskPointEyes",
        "id": 1748310861,
        "type": {
          "name": "MaskPoint"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mask should be placed relatively to the mouth"
        }
      ],
      "definition": {
        "name": "maskPointMouth",
        "id": 411773406,
        "type": {
          "name": "MaskPoint"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mask should be placed relatively to the chin"
        }
      ],
      "definition": {
        "name": "maskPointChin",
        "id": 534995335,
        "type": {
          "name": "MaskPoint"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Position on a photo where a mask should be placed"
        },
        {
          "name": "point",
          "value": "Part of the face, relative to which the mask should be placed"
        },
        {
          "name": "x_shift",
          "value": "Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. (For example, -1.0 will place the mask just to the left of the default mask position)"
        },
        {
          "name": "y_shift",
          "value": "Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. (For example, 1.0 will place the mask just below the default mask position)"
        },
        {
          "name": "scale",
          "value": "Mask scaling coefficient. (For example, 2.0 means a doubled size)"
        }
      ],
      "definition": {
        "name": "maskPosition",
        "id": 2197534270,
        "params": [
          {
            "name": "point",
            "type": {
              "name": "MaskPoint"
            }
          },
          {
            "name": "x_shift",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "y_shift",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "scale",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MaskPosition"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes one answer option of a poll"
        },
        {
          "name": "text",
          "value": "Option text, 1-100 characters"
        },
        {
          "name": "voter_count",
          "value": "Number of voters for this option, available only for closed or voted polls"
        },
        {
          "name": "vote_percentage",
          "value": "The percentage of votes for this option, 0-100"
        },
        {
          "name": "is_chosen",
          "value": "True, if the option was chosen by the user"
        },
        {
          "name": "is_being_chosen",
          "value": "True, if the option is being chosen by a pending setPollAnswer request"
        }
      ],
      "definition": {
        "name": "pollOption",
        "id": 1473893797,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "voter_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "vote_percentage",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_chosen",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_being_chosen",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PollOption"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A regular poll"
        },
        {
          "name": "allow_multiple_answers",
          "value": "True, if multiple answer options can be chosen simultaneously"
        }
      ],
      "definition": {
        "name": "pollTypeRegular",
        "id": 641265698,
        "params": [
          {
            "name": "allow_multiple_answers",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PollType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A poll in quiz mode, which has exactly one correct answer option and can be answered only once"
        },
        {
          "name": "correct_option_id",
          "value": "0-based identifier of the correct answer option; -1 for a yet unanswered poll"
        },
        {
          "name": "explanation",
          "value": "Text that is shown when the user chooses an incorrect answer or taps on the lamp icon, 0-200 characters with at most 2 line feeds; empty for a yet unanswered poll"
        }
      ],
      "definition": {
        "name": "pollTypeQuiz",
        "id": 657013913,
        "params": [
          {
            "name": "correct_option_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "explanation",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PollType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an animation file. The animation must be encoded in GIF or MPEG4 format"
        },
        {
          "name": "duration",
          "value": "Duration of the animation, in seconds; as defined by the sender"
        },
        {
          "name": "width",
          "value": "Width of the animation"
        },
        {
          "name": "height",
          "value": "Height of the animation"
        },
        {
          "name": "file_name",
          "value": "Original name of the file; as defined by the sender"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the file, usually \"image/gif\" or \"video/mp4\""
        },
        {
          "name": "has_stickers",
          "value": "True, if stickers were added to the animation. The list of corresponding sticker set can be received using getAttachedStickerSets"
        },
        {
          "name": "minithumbnail",
          "value": "Animation minithumbnail; may be null"
        },
        {
          "name": "thumbnail",
          "value": "Animation thumbnail in JPEG or MPEG4 format; may be null"
        },
        {
          "name": "animation",
          "value": "File containing the animation"
        }
      ],
      "definition": {
        "name": "animation",
        "id": 3422608190,
        "params": [
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "has_stickers",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "animation",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Animation"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an audio file. Audio is usually in MP3 or M4A format"
        },
        {
          "name": "duration",
          "value": "Duration of the audio, in seconds; as defined by the sender"
        },
        {
          "name": "title",
          "value": "Title of the audio; as defined by the sender"
        },
        {
          "name": "performer",
          "value": "Performer of the audio; as defined by the sender"
        },
        {
          "name": "file_name",
          "value": "Original name of the file; as defined by the sender"
        },
        {
          "name": "mime_type",
          "value": "The MIME type of the file; as defined by the sender"
        },
        {
          "name": "album_cover_minithumbnail",
          "value": "The minithumbnail of the album cover; may be null"
        },
        {
          "name": "album_cover_thumbnail",
          "value": "The thumbnail of the album cover in JPEG format; as defined by the sender. The full size thumbnail should be extracted from the downloaded file; may be null"
        },
        {
          "name": "audio",
          "value": "File containing the audio"
        }
      ],
      "definition": {
        "name": "audio",
        "id": 3115632606,
        "params": [
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "performer",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "album_cover_minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "album_cover_thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "audio",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Audio"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a document of any type"
        },
        {
          "name": "file_name",
          "value": "Original name of the file; as defined by the sender"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the file; as defined by the sender"
        },
        {
          "name": "minithumbnail",
          "value": "Document minithumbnail; may be null"
        },
        {
          "name": "thumbnail",
          "value": "Document thumbnail in JPEG or PNG format (PNG will be used only for background patterns); as defined by the sender; may be null"
        },
        {
          "name": "document",
          "value": "File containing the document"
        }
      ],
      "definition": {
        "name": "document",
        "id": 2937696216,
        "params": [
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "document",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Document"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a photo"
        },
        {
          "name": "has_stickers",
          "value": "True, if stickers were added to the photo. The list of corresponding sticker sets can be received using getAttachedStickerSets"
        },
        {
          "name": "minithumbnail",
          "value": "Photo minithumbnail; may be null"
        },
        {
          "name": "sizes",
          "value": "Available variants of the photo, in different sizes"
        }
      ],
      "definition": {
        "name": "photo",
        "id": 274335369,
        "params": [
          {
            "name": "has_stickers",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "sizes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "photoSize",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Photo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a sticker"
        },
        {
          "name": "set_id",
          "value": "The identifier of the sticker set to which the sticker belongs; 0 if none"
        },
        {
          "name": "width",
          "value": "Sticker width; as defined by the sender"
        },
        {
          "name": "height",
          "value": "Sticker height; as defined by the sender"
        },
        {
          "name": "emoji",
          "value": "Emoji corresponding to the sticker"
        },
        {
          "name": "is_animated",
          "value": "True, if the sticker is an animated sticker in TGS format"
        },
        {
          "name": "is_mask",
          "value": "True, if the sticker is a mask"
        },
        {
          "name": "mask_position",
          "value": "Position where the mask should be placed; may be null"
        },
        {
          "name": "thumbnail",
          "value": "Sticker thumbnail in WEBP or JPEG format; may be null"
        },
        {
          "name": "sticker",
          "value": "File containing the sticker"
        }
      ],
      "definition": {
        "name": "sticker",
        "id": 3602825359,
        "params": [
          {
            "name": "set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_animated",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_mask",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "mask_position",
            "type": {
              "name": "maskPosition",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Sticker"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a video file"
        },
        {
          "name": "duration",
          "value": "Duration of the video, in seconds; as defined by the sender"
        },
        {
          "name": "width",
          "value": "Video width; as defined by the sender"
        },
        {
          "name": "height",
          "value": "Video height; as defined by the sender"
        },
        {
          "name": "file_name",
          "value": "Original name of the file; as defined by the sender"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the file; as defined by the sender"
        },
        {
          "name": "has_stickers",
          "value": "True, if stickers were added to the video. The list of corresponding sticker sets can be received using getAttachedStickerSets"
        },
        {
          "name": "supports_streaming",
          "value": "True, if the video should be tried to be streamed"
        },
        {
          "name": "minithumbnail",
          "value": "Video minithumbnail; may be null"
        },
        {
          "name": "thumbnail",
          "value": "Video thumbnail in JPEG or MPEG4 format; as defined by the sender; may be null"
        },
        {
          "name": "video",
          "value": "File containing the video"
        }
      ],
      "definition": {
        "name": "video",
        "id": 832856268,
        "params": [
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "has_stickers",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "supports_streaming",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "video",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Video"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a video note. The video must be equal in width and height, cropped to a circle, and stored in MPEG4 format"
        },
        {
          "name": "duration",
          "value": "Duration of the video, in seconds; as defined by the sender"
        },
        {
          "name": "length",
          "value": "Video width and height; as defined by the sender"
        },
        {
          "name": "minithumbnail",
          "value": "Video minithumbnail; may be null"
        },
        {
          "name": "thumbnail",
          "value": "Video thumbnail in JPEG format; as defined by the sender; may be null"
        },
        {
          "name": "video",
          "value": "File containing the video"
        }
      ],
      "definition": {
        "name": "videoNote",
        "id": 4223232570,
        "params": [
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "video",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "VideoNote"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a voice note. The voice note must be encoded with the Opus codec, and stored inside an OGG container. Voice notes can have only a single audio channel"
        },
        {
          "name": "duration",
          "value": "Duration of the voice note, in seconds; as defined by the sender"
        },
        {
          "name": "waveform",
          "value": "A waveform representation of the voice note in 5-bit format"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the file; as defined by the sender"
        },
        {
          "name": "voice",
          "value": "File containing the voice note"
        }
      ],
      "definition": {
        "name": "voiceNote",
        "id": 2228955238,
        "params": [
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "waveform",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "voice",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "VoiceNote"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a user contact"
        },
        {
          "name": "phone_number",
          "value": "Phone number of the user"
        },
        {
          "name": "first_name",
          "value": "First name of the user; 1-255 characters in length"
        },
        {
          "name": "last_name",
          "value": "Last name of the user"
        },
        {
          "name": "vcard",
          "value": "Additional data about the user in a form of vCard; 0-2048 bytes in length"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user, if known; otherwise 0"
        }
      ],
      "definition": {
        "name": "contact",
        "id": 2811964756,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "vcard",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Contact"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a location on planet Earth"
        },
        {
          "name": "latitude",
          "value": "Latitude of the location in degrees; as defined by the sender"
        },
        {
          "name": "longitude",
          "value": "Longitude of the location, in degrees; as defined by the sender"
        },
        {
          "name": "horizontal_accuracy",
          "value": "The estimated horizontal accuracy of the location, in meters; as defined by the sender. 0 if unknown"
        }
      ],
      "definition": {
        "name": "location",
        "id": 3851575155,
        "params": [
          {
            "name": "latitude",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "longitude",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "horizontal_accuracy",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Location"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a venue"
        },
        {
          "name": "location",
          "value": "Venue location; as defined by the sender"
        },
        {
          "name": "title",
          "value": "Venue name; as defined by the sender"
        },
        {
          "name": "address",
          "value": "Venue address; as defined by the sender"
        },
        {
          "name": "provider",
          "value": "Provider of the venue database; as defined by the sender. Currently only \"foursquare\" and \"gplaces\" (Google Places) need to be supported"
        },
        {
          "name": "id",
          "value": "Identifier of the venue in the provider database; as defined by the sender"
        },
        {
          "name": "type",
          "value": "Type of the venue in the provider database; as defined by the sender"
        }
      ],
      "definition": {
        "name": "venue",
        "id": 1070406393,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "address",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "provider",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Venue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a game"
        },
        {
          "name": "id",
          "value": "Game ID"
        },
        {
          "name": "short_name",
          "value": "Game short name. To share a game use the URL https://t.me/{bot_username}?game={game_short_name}"
        },
        {
          "name": "title",
          "value": "Game title"
        },
        {
          "name": "text",
          "value": "Game text, usually containing scoreboards for a game"
        },
        {
          "name": "param_description",
          "value": "Game description"
        },
        {
          "name": "photo",
          "value": "Game photo"
        },
        {
          "name": "animation",
          "value": "Game animation; may be null"
        }
      ],
      "definition": {
        "name": "game",
        "id": 2729369544,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "short_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Game"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a poll"
        },
        {
          "name": "id",
          "value": "Unique poll identifier"
        },
        {
          "name": "question",
          "value": "Poll question, 1-300 characters"
        },
        {
          "name": "options",
          "value": "List of poll answer options"
        },
        {
          "name": "total_voter_count",
          "value": "Total number of voters, participating in the poll"
        },
        {
          "name": "recent_voter_user_ids",
          "value": "User identifiers of recent voters, if the poll is non-anonymous"
        },
        {
          "name": "is_anonymous",
          "value": "True, if the poll is anonymous"
        },
        {
          "name": "type",
          "value": "Type of the poll"
        },
        {
          "name": "open_period",
          "value": "Amount of time the poll will be active after creation, in seconds"
        },
        {
          "name": "close_date",
          "value": "Point in time (Unix timestamp) when the poll will be automatically closed"
        },
        {
          "name": "is_closed",
          "value": "True, if the poll is closed"
        }
      ],
      "definition": {
        "name": "poll",
        "id": 591977438,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "question",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "options",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "pollOption",
                "bare": true
              }
            }
          },
          {
            "name": "total_voter_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "recent_voter_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "is_anonymous",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "PollType"
            }
          },
          {
            "name": "open_period",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "close_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_closed",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Poll"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a user profile photo"
        },
        {
          "name": "id",
          "value": "Photo identifier; 0 for an empty photo. Can be used to find a photo in a list of user profile photos"
        },
        {
          "name": "small",
          "value": "A small (160x160) user profile photo. The file can be downloaded only before the photo is changed"
        },
        {
          "name": "big",
          "value": "A big (640x640) user profile photo. The file can be downloaded only before the photo is changed"
        },
        {
          "name": "has_animation",
          "value": "True, if the photo has animated variant"
        }
      ],
      "definition": {
        "name": "profilePhoto",
        "id": 1270562457,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "small",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "big",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "has_animation",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ProfilePhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains basic information about the photo of a chat"
        },
        {
          "name": "small",
          "value": "A small (160x160) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed"
        },
        {
          "name": "big",
          "value": "A big (640x640) chat photo variant in JPEG format. The file can be downloaded only before the photo is changed"
        },
        {
          "name": "has_animation",
          "value": "True, if the photo has animated variant"
        }
      ],
      "definition": {
        "name": "chatPhotoInfo",
        "id": 404510091,
        "params": [
          {
            "name": "small",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "big",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "has_animation",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatPhotoInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A regular user"
        }
      ],
      "definition": {
        "name": "userTypeRegular",
        "id": 3696322971,
        "type": {
          "name": "UserType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A deleted user or deleted bot. No information on the user besides the user identifier is available. It is not possible to perform any active actions on this type of user"
        }
      ],
      "definition": {
        "name": "userTypeDeleted",
        "id": 2487237924,
        "type": {
          "name": "UserType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A bot (see https://core.telegram.org/bots)"
        },
        {
          "name": "can_join_groups",
          "value": "True, if the bot can be invited to basic group and supergroup chats"
        },
        {
          "name": "can_read_all_group_messages",
          "value": "True, if the bot can read all messages in basic group or supergroup chats and not just those addressed to the bot. In private and channel chats a bot can always read all messages"
        },
        {
          "name": "is_inline",
          "value": "True, if the bot supports inline queries"
        },
        {
          "name": "inline_query_placeholder",
          "value": "Placeholder for inline queries (displayed on the application input field)"
        },
        {
          "name": "need_location",
          "value": "True, if the location of the user should be sent with every inline query to this bot"
        }
      ],
      "definition": {
        "name": "userTypeBot",
        "id": 1262387765,
        "params": [
          {
            "name": "can_join_groups",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_read_all_group_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_inline",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "inline_query_placeholder",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "need_location",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "UserType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "No information on the user besides the user identifier is available, yet this user has not been deleted. This object is extremely rare and must be handled like a deleted user. It is not possible to perform any actions on users of this type"
        }
      ],
      "definition": {
        "name": "userTypeUnknown",
        "id": 3570426173,
        "type": {
          "name": "UserType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a command supported by a bot"
        },
        {
          "name": "command",
          "value": "Text of the bot command"
        },
        {
          "name": "param_description",
          "value": "Description of the bot command"
        }
      ],
      "definition": {
        "name": "botCommand",
        "id": 3262826695,
        "params": [
          {
            "name": "command",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BotCommand"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Provides information about a bot and its supported commands"
        },
        {
          "name": "param_description",
          "value": "Long description shown on the user info page"
        },
        {
          "name": "commands",
          "value": "A list of commands supported by the bot"
        }
      ],
      "definition": {
        "name": "botInfo",
        "id": 1240121035,
        "params": [
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "commands",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "botCommand",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "BotInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a location to which a chat is connected"
        },
        {
          "name": "location",
          "value": "The location"
        },
        {
          "name": "address",
          "value": "Location address; 1-64 characters, as defined by the chat owner"
        }
      ],
      "definition": {
        "name": "chatLocation",
        "id": 2728103713,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatLocation"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Animated variant of a chat photo in MPEG4 format"
        },
        {
          "name": "length",
          "value": "Animation width and height"
        },
        {
          "name": "file",
          "value": "Information about the animation file"
        },
        {
          "name": "main_frame_timestamp",
          "value": "Timestamp of the frame, used as a static chat photo"
        }
      ],
      "definition": {
        "name": "animatedChatPhoto",
        "id": 191994926,
        "params": [
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "file",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "main_frame_timestamp",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AnimatedChatPhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a chat or user profile photo"
        },
        {
          "name": "id",
          "value": "Unique photo identifier"
        },
        {
          "name": "added_date",
          "value": "Point in time (Unix timestamp) when the photo has been added"
        },
        {
          "name": "minithumbnail",
          "value": "Photo minithumbnail; may be null"
        },
        {
          "name": "sizes",
          "value": "Available variants of the photo in JPEG format, in different size"
        },
        {
          "name": "animation",
          "value": "Animated variant of the photo in MPEG4 format; may be null"
        }
      ],
      "definition": {
        "name": "chatPhoto",
        "id": 1998024258,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "added_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "minithumbnail",
            "type": {
              "name": "minithumbnail",
              "bare": true
            }
          },
          {
            "name": "sizes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "photoSize",
                "bare": true
              }
            }
          },
          {
            "name": "animation",
            "type": {
              "name": "animatedChatPhoto",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatPhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of chat or user profile photos"
        },
        {
          "name": "total_count",
          "value": "Total number of photos"
        },
        {
          "name": "photos",
          "value": "List of photos"
        }
      ],
      "definition": {
        "name": "chatPhotos",
        "id": 2313958632,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "photos",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatPhoto",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatPhotos"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A previously used profile photo of the current user"
        },
        {
          "name": "chat_photo_id",
          "value": "Identifier of the profile photo to reuse"
        }
      ],
      "definition": {
        "name": "inputChatPhotoPrevious",
        "id": 23128529,
        "params": [
          {
            "name": "chat_photo_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputChatPhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A static photo in JPEG format"
        },
        {
          "name": "photo",
          "value": "Photo to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed"
        }
      ],
      "definition": {
        "name": "inputChatPhotoStatic",
        "id": 1979179699,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "InputChatPhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animation in MPEG4 format; must be square, at most 10 seconds long, have width between 160 and 800 and be at most 2MB in size"
        },
        {
          "name": "animation",
          "value": "Animation to be set as profile photo. Only inputFileLocal and inputFileGenerated are allowed"
        },
        {
          "name": "main_frame_timestamp",
          "value": "Timestamp of the frame, which will be used as static chat photo"
        }
      ],
      "definition": {
        "name": "inputChatPhotoAnimation",
        "id": 90846242,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "main_frame_timestamp",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputChatPhoto"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a user"
        },
        {
          "name": "id",
          "value": "User identifier"
        },
        {
          "name": "first_name",
          "value": "First name of the user"
        },
        {
          "name": "last_name",
          "value": "Last name of the user"
        },
        {
          "name": "username",
          "value": "Username of the user"
        },
        {
          "name": "phone_number",
          "value": "Phone number of the user"
        },
        {
          "name": "status",
          "value": "Current online status of the user"
        },
        {
          "name": "profile_photo",
          "value": "Profile photo of the user; may be null"
        },
        {
          "name": "is_contact",
          "value": "The user is a contact of the current user"
        },
        {
          "name": "is_mutual_contact",
          "value": "The user is a contact of the current user and the current user is a contact of the user"
        },
        {
          "name": "is_verified",
          "value": "True, if the user is verified"
        },
        {
          "name": "is_support",
          "value": "True, if the user is Telegram support account"
        },
        {
          "name": "restriction_reason",
          "value": "If non-empty, it contains a human-readable description of the reason why access to this user must be restricted"
        },
        {
          "name": "is_scam",
          "value": "True, if many users reported this user as a scam"
        },
        {
          "name": "have_access",
          "value": "If false, the user is inaccessible, and the only information known about the user is inside this class. It can't be passed to any method except GetUser"
        },
        {
          "name": "type",
          "value": "Type of the user"
        },
        {
          "name": "language_code",
          "value": "IETF language tag of the user's language; only available to bots"
        }
      ],
      "definition": {
        "name": "user",
        "id": 3470195799,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "UserStatus"
            }
          },
          {
            "name": "profile_photo",
            "type": {
              "name": "profilePhoto",
              "bare": true
            }
          },
          {
            "name": "is_contact",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_mutual_contact",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_verified",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_support",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "restriction_reason",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_scam",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "have_access",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "UserType"
            }
          },
          {
            "name": "language_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "User"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains full information about a user"
        },
        {
          "name": "photo",
          "value": "User profile photo; may be null"
        },
        {
          "name": "is_blocked",
          "value": "True, if the user is blocked by the current user"
        },
        {
          "name": "can_be_called",
          "value": "True, if the user can be called"
        },
        {
          "name": "supports_video_calls",
          "value": "True, if a video call can be created with the user"
        },
        {
          "name": "has_private_calls",
          "value": "True, if the user can't be called due to their privacy settings"
        },
        {
          "name": "need_phone_number_privacy_exception",
          "value": "True, if the current user needs to explicitly allow to share their phone number with the user when the method addContact is used"
        },
        {
          "name": "bio",
          "value": "A short user bio"
        },
        {
          "name": "share_text",
          "value": "For bots, the text that is included with the link when users share the bot"
        },
        {
          "name": "group_in_common_count",
          "value": "Number of group chats where both the other user and the current user are a member; 0 for the current user"
        },
        {
          "name": "bot_info",
          "value": "If the user is a bot, information about the bot; may be null"
        }
      ],
      "definition": {
        "name": "userFullInfo",
        "id": 3584311392,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          },
          {
            "name": "is_blocked",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_called",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "supports_video_calls",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_private_calls",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_phone_number_privacy_exception",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "bio",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "share_text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "group_in_common_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "bot_info",
            "type": {
              "name": "botInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "UserFullInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of users"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of users found"
        },
        {
          "name": "user_ids",
          "value": "A list of user identifiers"
        }
      ],
      "definition": {
        "name": "users",
        "id": 2598566767,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Users"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a chat administrator"
        },
        {
          "name": "user_id",
          "value": "User identifier of the administrator"
        },
        {
          "name": "custom_title",
          "value": "Custom title of the administrator"
        },
        {
          "name": "is_owner",
          "value": "True, if the user is the owner of the chat"
        }
      ],
      "definition": {
        "name": "chatAdministrator",
        "id": 487220942,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "custom_title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_owner",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatAdministrator"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of chat administrators"
        },
        {
          "name": "administrators",
          "value": "A list of chat administrators"
        }
      ],
      "definition": {
        "name": "chatAdministrators",
        "id": 1363266081,
        "params": [
          {
            "name": "administrators",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatAdministrator",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatAdministrators"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes actions that a user is allowed to take in a chat"
        },
        {
          "name": "can_send_messages",
          "value": "True, if the user can send text messages, contacts, locations, and venues"
        },
        {
          "name": "can_send_media_messages",
          "value": "True, if the user can send audio files, documents, photos, videos, video notes, and voice notes. Implies can_send_messages permissions"
        },
        {
          "name": "can_send_polls",
          "value": "True, if the user can send polls. Implies can_send_messages permissions"
        },
        {
          "name": "can_send_other_messages",
          "value": "True, if the user can send animations, games, stickers, and dice and use inline bots. Implies can_send_messages permissions"
        },
        {
          "name": "can_add_web_page_previews",
          "value": "True, if the user may add a web page preview to their messages. Implies can_send_messages permissions"
        },
        {
          "name": "can_change_info",
          "value": "True, if the user can change the chat title, photo, and other settings"
        },
        {
          "name": "can_invite_users",
          "value": "True, if the user can invite new users to the chat"
        },
        {
          "name": "can_pin_messages",
          "value": "True, if the user can pin messages"
        }
      ],
      "definition": {
        "name": "chatPermissions",
        "id": 1584650463,
        "params": [
          {
            "name": "can_send_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_send_media_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_send_polls",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_send_other_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_add_web_page_previews",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_change_info",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_invite_users",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_pin_messages",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatPermissions"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is the owner of a chat and has all the administrator privileges"
        },
        {
          "name": "custom_title",
          "value": "A custom title of the owner; 0-16 characters without emojis; applicable to supergroups only"
        },
        {
          "name": "is_anonymous",
          "value": "True, if the creator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only"
        },
        {
          "name": "is_member",
          "value": "True, if the user is a member of the chat"
        }
      ],
      "definition": {
        "name": "chatMemberStatusCreator",
        "id": 4134947582,
        "params": [
          {
            "name": "custom_title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_anonymous",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_member",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is a member of a chat and has some additional privileges. In basic groups, administrators can edit and delete messages sent by others, add new members, and ban unprivileged members. In supergroups and channels, there are more detailed options for administrator privileges"
        },
        {
          "name": "custom_title",
          "value": "A custom title of the administrator; 0-16 characters without emojis; applicable to supergroups only"
        },
        {
          "name": "can_be_edited",
          "value": "True, if the current user can edit the administrator privileges for the called user"
        },
        {
          "name": "can_change_info",
          "value": "True, if the administrator can change the chat title, photo, and other settings"
        },
        {
          "name": "can_post_messages",
          "value": "True, if the administrator can create channel posts; applicable to channels only"
        },
        {
          "name": "can_edit_messages",
          "value": "True, if the administrator can edit messages of other users and pin messages; applicable to channels only"
        },
        {
          "name": "can_delete_messages",
          "value": "True, if the administrator can delete messages of other users"
        },
        {
          "name": "can_invite_users",
          "value": "True, if the administrator can invite new users to the chat"
        },
        {
          "name": "can_restrict_members",
          "value": "True, if the administrator can restrict, ban, or unban chat members"
        },
        {
          "name": "can_pin_messages",
          "value": "True, if the administrator can pin messages; applicable to groups only"
        },
        {
          "name": "can_promote_members",
          "value": "True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that were directly or indirectly promoted by them"
        },
        {
          "name": "is_anonymous",
          "value": "True, if the administrator isn't shown in the chat member list and sends messages anonymously; applicable to supergroups only"
        }
      ],
      "definition": {
        "name": "chatMemberStatusAdministrator",
        "id": 222495835,
        "params": [
          {
            "name": "custom_title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "can_be_edited",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_change_info",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_post_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_edit_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_delete_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_invite_users",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_restrict_members",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_pin_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_promote_members",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_anonymous",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is a member of a chat, without any additional privileges or restrictions"
        }
      ],
      "definition": {
        "name": "chatMemberStatusMember",
        "id": 844723285,
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is under certain restrictions in the chat. Not supported in basic groups and channels"
        },
        {
          "name": "is_member",
          "value": "True, if the user is a member of the chat"
        },
        {
          "name": "restricted_until_date",
          "value": "Point in time (Unix timestamp) when restrictions will be lifted from the user; 0 if never. If the user is restricted for more than 366 days or for less than 30 seconds from the current time, the user is considered to be restricted forever"
        },
        {
          "name": "permissions",
          "value": "User permissions in the chat"
        }
      ],
      "definition": {
        "name": "chatMemberStatusRestricted",
        "id": 1661432998,
        "params": [
          {
            "name": "is_member",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "restricted_until_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is not a chat member"
        }
      ],
      "definition": {
        "name": "chatMemberStatusLeft",
        "id": 4289152037,
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user was banned (and hence is not a member of the chat). Implies the user can't return to the chat or view messages"
        },
        {
          "name": "banned_until_date",
          "value": "Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever"
        }
      ],
      "definition": {
        "name": "chatMemberStatusBanned",
        "id": 2641448630,
        "params": [
          {
            "name": "banned_until_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMemberStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A user with information about joining/leaving a chat"
        },
        {
          "name": "user_id",
          "value": "User identifier of the chat member"
        },
        {
          "name": "inviter_user_id",
          "value": "Identifier of a user that invited/promoted/banned this member in the chat; 0 if unknown"
        },
        {
          "name": "joined_chat_date",
          "value": "Point in time (Unix timestamp) when the user joined the chat"
        },
        {
          "name": "status",
          "value": "Status of the member in the chat"
        },
        {
          "name": "bot_info",
          "value": "If the user is a bot, information about the bot; may be null. Can be null even for a bot if the bot is not the chat member"
        }
      ],
      "definition": {
        "name": "chatMember",
        "id": 3488830220,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "inviter_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "joined_chat_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "ChatMemberStatus"
            }
          },
          {
            "name": "bot_info",
            "type": {
              "name": "botInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMember"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of chat members"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of chat members found"
        },
        {
          "name": "members",
          "value": "A list of chat members"
        }
      ],
      "definition": {
        "name": "chatMembers",
        "id": 149732132,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "members",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatMember",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatMembers"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns contacts of the user"
        }
      ],
      "definition": {
        "name": "chatMembersFilterContacts",
        "id": 1774485671,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the owner and administrators"
        }
      ],
      "definition": {
        "name": "chatMembersFilterAdministrators",
        "id": 3028073500,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all chat members, including restricted chat members"
        }
      ],
      "definition": {
        "name": "chatMembersFilterMembers",
        "id": 670504342,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users which can be mentioned in the chat"
        },
        {
          "name": "message_thread_id",
          "value": "If non-zero, the identifier of the current message thread"
        }
      ],
      "definition": {
        "name": "chatMembersFilterMention",
        "id": 856419831,
        "params": [
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users under certain restrictions in the chat; can be used only by administrators in a supergroup"
        }
      ],
      "definition": {
        "name": "chatMembersFilterRestricted",
        "id": 1256282813,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users banned from the chat; can be used only by administrators in a supergroup or in a channel"
        }
      ],
      "definition": {
        "name": "chatMembersFilterBanned",
        "id": 2431864648,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns bot members of the chat"
        }
      ],
      "definition": {
        "name": "chatMembersFilterBots",
        "id": 2872400008,
        "type": {
          "name": "ChatMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns recently active users in reverse chronological order"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterRecent",
        "id": 1178199509,
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns contacts of the user, which are members of the supergroup or channel"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterContacts",
        "id": 3012056440,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the owner and administrators"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterAdministrators",
        "id": 2197587031,
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Used to search for supergroup or channel members via a (string) query"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterSearch",
        "id": 2598608827,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns restricted supergroup members; can be used only by administrators"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterRestricted",
        "id": 3187167262,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users banned from the supergroup or channel; can be used only by administrators"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterBanned",
        "id": 3084345613,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users which can be mentioned in the supergroup"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "message_thread_id",
          "value": "If non-zero, the identifier of the current message thread"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterMention",
        "id": 947915036,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns bot members of the supergroup or channel"
        }
      ],
      "definition": {
        "name": "supergroupMembersFilterBots",
        "id": 492138918,
        "type": {
          "name": "SupergroupMembersFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a basic group of 0-200 users (must be upgraded to a supergroup to accommodate more than 200 users)"
        },
        {
          "name": "id",
          "value": "Group identifier"
        },
        {
          "name": "member_count",
          "value": "Number of members in the group"
        },
        {
          "name": "status",
          "value": "Status of the current user in the group"
        },
        {
          "name": "is_active",
          "value": "True, if the group is active"
        },
        {
          "name": "upgraded_to_supergroup_id",
          "value": "Identifier of the supergroup to which this group was upgraded; 0 if none"
        }
      ],
      "definition": {
        "name": "basicGroup",
        "id": 3977128251,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "ChatMemberStatus"
            }
          },
          {
            "name": "is_active",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "upgraded_to_supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BasicGroup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains full information about a basic group"
        },
        {
          "name": "photo",
          "value": "Chat photo; may be null"
        },
        {
          "name": "param_description",
          "value": "Group description"
        },
        {
          "name": "creator_user_id",
          "value": "User identifier of the creator of the group; 0 if unknown"
        },
        {
          "name": "members",
          "value": "Group members"
        },
        {
          "name": "invite_link",
          "value": "Invite link for this group; available only after it has been generated at least once and only for the group creator"
        }
      ],
      "definition": {
        "name": "basicGroupFullInfo",
        "id": 3835254103,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "creator_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "members",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatMember",
                "bare": true
              }
            }
          },
          {
            "name": "invite_link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BasicGroupFullInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a supergroup or channel with zero or more members (subscribers in the case of channels). From the point of view of the system, a channel is a special kind of a supergroup: only administrators can post and see the list of members, and posts from all administrators use the name and photo of the channel instead of individual names and profile photos. Unlike supergroups, channels can have an unlimited number of subscribers"
        },
        {
          "name": "id",
          "value": "Supergroup or channel identifier"
        },
        {
          "name": "username",
          "value": "Username of the supergroup or channel; empty for private supergroups or channels"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the current user joined, or the point in time when the supergroup or channel was created, in case the user is not a member"
        },
        {
          "name": "status",
          "value": "Status of the current user in the supergroup or channel; custom title will be always empty"
        },
        {
          "name": "member_count",
          "value": "Number of members in the supergroup or channel; 0 if unknown. Currently it is guaranteed to be known only if the supergroup or channel was received through searchPublicChats, searchChatsNearby, getInactiveSupergroupChats, getSuitableDiscussionChats, getGroupsInCommon, or getUserPrivacySettingRules"
        },
        {
          "name": "has_linked_chat",
          "value": "True, if the channel has a discussion group, or the supergroup is the designated discussion group for a channel"
        },
        {
          "name": "has_location",
          "value": "True, if the supergroup is connected to a location, i.e. the supergroup is a location-based supergroup"
        },
        {
          "name": "sign_messages",
          "value": "True, if messages sent to the channel should contain information about the sender. This field is only applicable to channels"
        },
        {
          "name": "is_slow_mode_enabled",
          "value": "True, if the slow mode is enabled in the supergroup"
        },
        {
          "name": "is_channel",
          "value": "True, if the supergroup is a channel"
        },
        {
          "name": "is_verified",
          "value": "True, if the supergroup or channel is verified"
        },
        {
          "name": "restriction_reason",
          "value": "If non-empty, contains a human-readable description of the reason why access to this supergroup or channel must be restricted"
        },
        {
          "name": "is_scam",
          "value": "True, if many users reported this supergroup as a scam"
        }
      ],
      "definition": {
        "name": "supergroup",
        "id": 4294864205,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "ChatMemberStatus"
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "has_linked_chat",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_location",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sign_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_slow_mode_enabled",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_channel",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_verified",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "restriction_reason",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_scam",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Supergroup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains full information about a supergroup or channel"
        },
        {
          "name": "photo",
          "value": "Chat photo; may be null"
        },
        {
          "name": "param_description",
          "value": "Supergroup or channel description"
        },
        {
          "name": "member_count",
          "value": "Number of members in the supergroup or channel; 0 if unknown"
        },
        {
          "name": "administrator_count",
          "value": "Number of privileged users in the supergroup or channel; 0 if unknown"
        },
        {
          "name": "restricted_count",
          "value": "Number of restricted users in the supergroup; 0 if unknown"
        },
        {
          "name": "banned_count",
          "value": "Number of users banned from chat; 0 if unknown"
        },
        {
          "name": "linked_chat_id",
          "value": "Chat identifier of a discussion group for the channel, or a channel, for which the supergroup is the designated discussion group; 0 if none or unknown"
        },
        {
          "name": "slow_mode_delay",
          "value": "Delay between consecutive sent messages for non-administrator supergroup members, in seconds"
        },
        {
          "name": "slow_mode_delay_expires_in",
          "value": "Time left before next message can be sent in the supergroup, in seconds. An updateSupergroupFullInfo update is not triggered when value of this field changes, but both new and old values are non-zero"
        },
        {
          "name": "can_get_members",
          "value": "True, if members of the chat can be retrieved"
        },
        {
          "name": "can_set_username",
          "value": "True, if the chat username can be changed"
        },
        {
          "name": "can_set_sticker_set",
          "value": "True, if the supergroup sticker set can be changed"
        },
        {
          "name": "can_set_location",
          "value": "True, if the supergroup location can be changed"
        },
        {
          "name": "can_get_statistics",
          "value": "True, if the supergroup or channel statistics are available"
        },
        {
          "name": "is_all_history_available",
          "value": "True, if new chat members will have access to old messages. In public or discussion groups and both public and private channels, old messages are always available, so this option affects only private supergroups without a linked chat. The value of this field is only available for chat administrators"
        },
        {
          "name": "sticker_set_id",
          "value": "Identifier of the supergroup sticker set; 0 if none"
        },
        {
          "name": "location",
          "value": "Location to which the supergroup is connected; may be null"
        },
        {
          "name": "invite_link",
          "value": "Invite link for this chat"
        },
        {
          "name": "upgraded_from_basic_group_id",
          "value": "Identifier of the basic group from which supergroup was upgraded; 0 if none"
        },
        {
          "name": "upgraded_from_max_message_id",
          "value": "Identifier of the last message in the basic group from which supergroup was upgraded; 0 if none"
        }
      ],
      "definition": {
        "name": "supergroupFullInfo",
        "id": 3182638880,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "administrator_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "restricted_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "banned_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "linked_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "slow_mode_delay",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "slow_mode_delay_expires_in",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "can_get_members",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_set_username",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_set_sticker_set",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_set_location",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_get_statistics",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_all_history_available",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "chatLocation",
              "bare": true
            }
          },
          {
            "name": "invite_link",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "upgraded_from_basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "upgraded_from_max_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupFullInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The secret chat is not yet created; waiting for the other user to get online"
        }
      ],
      "definition": {
        "name": "secretChatStatePending",
        "id": 2657916540,
        "type": {
          "name": "SecretChatState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The secret chat is ready to use"
        }
      ],
      "definition": {
        "name": "secretChatStateReady",
        "id": 2683615209,
        "type": {
          "name": "SecretChatState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The secret chat is closed"
        }
      ],
      "definition": {
        "name": "secretChatStateClosed",
        "id": 2349860589,
        "type": {
          "name": "SecretChatState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a secret chat"
        },
        {
          "name": "id",
          "value": "Secret chat identifier"
        },
        {
          "name": "user_id",
          "value": "Identifier of the chat partner"
        },
        {
          "name": "state",
          "value": "State of the secret chat"
        },
        {
          "name": "is_outbound",
          "value": "True, if the chat was created by the current user; otherwise false"
        },
        {
          "name": "ttl",
          "value": "Current message Time To Live setting (self-destruct timer) for the chat, in seconds"
        },
        {
          "name": "key_hash",
          "value": "Hash of the currently used key for comparison with the hash of the chat partner's key. This is a string of 36 little-endian bytes, which must be split into groups of 2 bits, each denoting a pixel of one of 4 colors FFFFFF, D5E6F3, 2D5775, and 2F99C9."
        },
        {
          "name": "layer",
          "value": "Secret chat layer; determines features supported by the chat partner's application. Video notes are supported if the layer \u003e= 66; nested text entities and underline and strikethrough entities are supported if the layer \u003e= 101"
        }
      ],
      "definition": {
        "name": "secretChat",
        "id": 1279231629,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "state",
            "type": {
              "name": "SecretChatState"
            }
          },
          {
            "name": "is_outbound",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "key_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "layer",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SecretChat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was sent by a known user"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user that sent the message"
        }
      ],
      "definition": {
        "name": "messageSenderUser",
        "id": 1647122213,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageSender"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was sent on behalf of a chat"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat that sent the message"
        }
      ],
      "definition": {
        "name": "messageSenderChat",
        "id": 4055306545,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageSender"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of message senders"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of messages senders found"
        },
        {
          "name": "senders",
          "value": "List of message senders"
        }
      ],
      "definition": {
        "name": "messageSenders",
        "id": 4136803276,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "senders",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "MessageSender"
              }
            }
          }
        ],
        "type": {
          "name": "MessageSenders"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was originally sent by a known user"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user that originally sent the message"
        }
      ],
      "definition": {
        "name": "messageForwardOriginUser",
        "id": 2781520,
        "params": [
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageForwardOrigin"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was originally sent by an anonymous chat administrator on behalf of the chat"
        },
        {
          "name": "sender_chat_id",
          "value": "Identifier of the chat that originally sent the message"
        },
        {
          "name": "author_signature",
          "value": "Original message author signature"
        }
      ],
      "definition": {
        "name": "messageForwardOriginChat",
        "id": 1526010724,
        "params": [
          {
            "name": "sender_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "author_signature",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageForwardOrigin"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was originally sent by a user, which is hidden by their privacy settings"
        },
        {
          "name": "sender_name",
          "value": "Name of the sender"
        }
      ],
      "definition": {
        "name": "messageForwardOriginHiddenUser",
        "id": 4023709411,
        "params": [
          {
            "name": "sender_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageForwardOrigin"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message was originally a post in a channel"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat from which the message was originally forwarded"
        },
        {
          "name": "message_id",
          "value": "Message identifier of the original message; 0 if unknown"
        },
        {
          "name": "author_signature",
          "value": "Original post author signature"
        }
      ],
      "definition": {
        "name": "messageForwardOriginChannel",
        "id": 1490730723,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "author_signature",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageForwardOrigin"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a forwarded message"
        },
        {
          "name": "origin",
          "value": "Origin of a forwarded message"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the message was originally sent"
        },
        {
          "name": "public_service_announcement_type",
          "value": "The type of a public service announcement for the forwarded message"
        },
        {
          "name": "from_chat_id",
          "value": "For messages forwarded to the chat with the current user (Saved Messages), to the Replies bot chat, or to the channel's discussion group, the identifier of the chat from which the message was forwarded last time; 0 if unknown"
        },
        {
          "name": "from_message_id",
          "value": "For messages forwarded to the chat with the current user (Saved Messages), to the Replies bot chat, or to the channel's discussion group, the identifier of the original message from which the new message was forwarded last time; 0 if unknown"
        }
      ],
      "definition": {
        "name": "messageForwardInfo",
        "id": 3967666888,
        "params": [
          {
            "name": "origin",
            "type": {
              "name": "MessageForwardOrigin"
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "public_service_announcement_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "from_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "from_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageForwardInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about message replies"
        },
        {
          "name": "reply_count",
          "value": "Number of times the message was directly or indirectly replied"
        },
        {
          "name": "recent_repliers",
          "value": "Recent repliers to the message; available in channels with a discussion supergroup"
        },
        {
          "name": "last_read_inbox_message_id",
          "value": "Identifier of the last read incoming reply to the message"
        },
        {
          "name": "last_read_outbox_message_id",
          "value": "Identifier of the last read outgoing reply to the message"
        },
        {
          "name": "last_message_id",
          "value": "Identifier of the last reply to the message"
        }
      ],
      "definition": {
        "name": "messageReplyInfo",
        "id": 3518195515,
        "params": [
          {
            "name": "reply_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "recent_repliers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "MessageSender"
              }
            }
          },
          {
            "name": "last_read_inbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_read_outbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageReplyInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about interactions with a message"
        },
        {
          "name": "view_count",
          "value": "Number of times the message was viewed"
        },
        {
          "name": "forward_count",
          "value": "Number of times the message was forwarded"
        },
        {
          "name": "reply_info",
          "value": "Contains information about direct or indirect replies to the message; may be null. Currently, available only in channels with a discussion supergroup and discussion supergroups for messages, which are not replies itself"
        }
      ],
      "definition": {
        "name": "messageInteractionInfo",
        "id": 3674252330,
        "params": [
          {
            "name": "view_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "forward_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_info",
            "type": {
              "name": "messageReplyInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageInteractionInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message is being sent now, but has not yet been delivered to the server"
        }
      ],
      "definition": {
        "name": "messageSendingStatePending",
        "id": 2913163714,
        "type": {
          "name": "MessageSendingState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message failed to be sent"
        },
        {
          "name": "error_code",
          "value": "An error code; 0 if unknown"
        },
        {
          "name": "error_message",
          "value": "Error message"
        },
        {
          "name": "can_retry",
          "value": "True, if the message can be re-sent"
        },
        {
          "name": "retry_after",
          "value": "Time left before the message can be re-sent, in seconds. No update is sent when this field changes"
        }
      ],
      "definition": {
        "name": "messageSendingStateFailed",
        "id": 2054476087,
        "params": [
          {
            "name": "error_code",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "can_retry",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "retry_after",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageSendingState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a message"
        },
        {
          "name": "id",
          "value": "Message identifier; unique for the chat to which the message belongs"
        },
        {
          "name": "sender",
          "value": "The sender of the message"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "sending_state",
          "value": "Information about the sending state of the message; may be null"
        },
        {
          "name": "scheduling_state",
          "value": "Information about the scheduling state of the message; may be null"
        },
        {
          "name": "is_outgoing",
          "value": "True, if the message is outgoing"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is pinned"
        },
        {
          "name": "can_be_edited",
          "value": "True, if the message can be edited. For live location and poll messages this fields shows whether editMessageLiveLocation or stopPoll can be used with this message by the application"
        },
        {
          "name": "can_be_forwarded",
          "value": "True, if the message can be forwarded"
        },
        {
          "name": "can_be_deleted_only_for_self",
          "value": "True, if the message can be deleted only for the current user while other users will continue to see it"
        },
        {
          "name": "can_be_deleted_for_all_users",
          "value": "True, if the message can be deleted for all users"
        },
        {
          "name": "can_get_statistics",
          "value": "True, if the message statistics are available"
        },
        {
          "name": "can_get_message_thread",
          "value": "True, if the message thread info is available"
        },
        {
          "name": "is_channel_post",
          "value": "True, if the message is a channel post. All messages to channels are channel posts, all other messages are not channel posts"
        },
        {
          "name": "contains_unread_mention",
          "value": "True, if the message contains an unread mention for the current user"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the message was sent"
        },
        {
          "name": "edit_date",
          "value": "Point in time (Unix timestamp) when the message was last edited"
        },
        {
          "name": "forward_info",
          "value": "Information about the initial message sender; may be null"
        },
        {
          "name": "interaction_info",
          "value": "Information about interactions with the message; may be null"
        },
        {
          "name": "reply_in_chat_id",
          "value": "If non-zero, the identifier of the chat to which the replied message belongs; Currently, only messages in the Replies chat can have different reply_in_chat_id and chat_id"
        },
        {
          "name": "reply_to_message_id",
          "value": "If non-zero, the identifier of the message this message is replying to; can be the identifier of a deleted message"
        },
        {
          "name": "message_thread_id",
          "value": "If non-zero, the identifier of the message thread the message belongs to; unique within the chat to which the message belongs"
        },
        {
          "name": "ttl",
          "value": "For self-destructing messages, the message's TTL (Time To Live), in seconds; 0 if none. TDLib will send updateDeleteMessages or updateMessageContent once the TTL expires"
        },
        {
          "name": "ttl_expires_in",
          "value": "Time left before the message expires, in seconds"
        },
        {
          "name": "via_bot_user_id",
          "value": "If non-zero, the user identifier of the bot through which this message was sent"
        },
        {
          "name": "author_signature",
          "value": "For channel posts and anonymous administrator messages, optional author signature"
        },
        {
          "name": "media_album_id",
          "value": "Unique identifier of an album this message belongs to. Only photos and videos can be grouped together in albums"
        },
        {
          "name": "restriction_reason",
          "value": "If non-empty, contains a human-readable description of the reason why access to this message must be restricted"
        },
        {
          "name": "content",
          "value": "Content of the message"
        },
        {
          "name": "reply_markup",
          "value": "Reply markup for the message; may be null"
        }
      ],
      "definition": {
        "name": "message",
        "id": 2924830969,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "sender",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "sending_state",
            "type": {
              "name": "MessageSendingState"
            }
          },
          {
            "name": "scheduling_state",
            "type": {
              "name": "MessageSchedulingState"
            }
          },
          {
            "name": "is_outgoing",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_edited",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_forwarded",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_deleted_only_for_self",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_deleted_for_all_users",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_get_statistics",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_get_message_thread",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_channel_post",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "contains_unread_mention",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "edit_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "forward_info",
            "type": {
              "name": "messageForwardInfo",
              "bare": true
            }
          },
          {
            "name": "interaction_info",
            "type": {
              "name": "messageInteractionInfo",
              "bare": true
            }
          },
          {
            "name": "reply_in_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "ttl_expires_in",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "via_bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "author_signature",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "media_album_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "restriction_reason",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "content",
            "type": {
              "name": "MessageContent"
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of messages"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of messages found"
        },
        {
          "name": "messages",
          "value": "List of messages; messages may be null"
        }
      ],
      "definition": {
        "name": "messages",
        "id": 3008138336,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "messages",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "message",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of messages found by a search"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of messages found; -1 if unknown"
        },
        {
          "name": "messages",
          "value": "List of messages"
        },
        {
          "name": "next_offset",
          "value": "The offset for the next request. If empty, there are no more results"
        }
      ],
      "definition": {
        "name": "foundMessages",
        "id": 622196488,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "messages",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "message",
                "bare": true
              }
            }
          },
          {
            "name": "next_offset",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FoundMessages"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Notification settings applied to all private and secret chats when the corresponding chat setting has a default value"
        }
      ],
      "definition": {
        "name": "notificationSettingsScopePrivateChats",
        "id": 937446759,
        "type": {
          "name": "NotificationSettingsScope"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Notification settings applied to all basic groups and supergroups when the corresponding chat setting has a default value"
        }
      ],
      "definition": {
        "name": "notificationSettingsScopeGroupChats",
        "id": 1212142067,
        "type": {
          "name": "NotificationSettingsScope"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Notification settings applied to all channels when the corresponding chat setting has a default value"
        }
      ],
      "definition": {
        "name": "notificationSettingsScopeChannelChats",
        "id": 548013448,
        "type": {
          "name": "NotificationSettingsScope"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about notification settings for a chat"
        },
        {
          "name": "use_default_mute_for",
          "value": "If true, mute_for is ignored and the value for the relevant type of chat is used instead"
        },
        {
          "name": "mute_for",
          "value": "Time left before notifications will be unmuted, in seconds"
        },
        {
          "name": "use_default_sound",
          "value": "If true, sound is ignored and the value for the relevant type of chat is used instead"
        },
        {
          "name": "sound",
          "value": "The name of an audio file to be used for notification sounds; only applies to iOS applications"
        },
        {
          "name": "use_default_show_preview",
          "value": "If true, show_preview is ignored and the value for the relevant type of chat is used instead"
        },
        {
          "name": "show_preview",
          "value": "True, if message content should be displayed in notifications"
        },
        {
          "name": "use_default_disable_pinned_message_notifications",
          "value": "If true, disable_pinned_message_notifications is ignored and the value for the relevant type of chat is used instead"
        },
        {
          "name": "disable_pinned_message_notifications",
          "value": "If true, notifications for incoming pinned messages will be created as for an ordinary unread message"
        },
        {
          "name": "use_default_disable_mention_notifications",
          "value": "If true, disable_mention_notifications is ignored and the value for the relevant type of chat is used instead"
        },
        {
          "name": "disable_mention_notifications",
          "value": "If true, notifications for messages with mentions will be created as for an ordinary unread message"
        }
      ],
      "definition": {
        "name": "chatNotificationSettings",
        "id": 1503183218,
        "params": [
          {
            "name": "use_default_mute_for",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "mute_for",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "use_default_sound",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sound",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "use_default_show_preview",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "show_preview",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_default_disable_pinned_message_notifications",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "disable_pinned_message_notifications",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_default_disable_mention_notifications",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "disable_mention_notifications",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatNotificationSettings"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about notification settings for several chats"
        },
        {
          "name": "mute_for",
          "value": "Time left before notifications will be unmuted, in seconds"
        },
        {
          "name": "sound",
          "value": "The name of an audio file to be used for notification sounds; only applies to iOS applications"
        },
        {
          "name": "show_preview",
          "value": "True, if message content should be displayed in notifications"
        },
        {
          "name": "disable_pinned_message_notifications",
          "value": "True, if notifications for incoming pinned messages will be created as for an ordinary unread message"
        },
        {
          "name": "disable_mention_notifications",
          "value": "True, if notifications for messages with mentions will be created as for an ordinary unread message"
        }
      ],
      "definition": {
        "name": "scopeNotificationSettings",
        "id": 3868863551,
        "params": [
          {
            "name": "mute_for",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sound",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "show_preview",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "disable_pinned_message_notifications",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "disable_mention_notifications",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ScopeNotificationSettings"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a message draft"
        },
        {
          "name": "reply_to_message_id",
          "value": "Identifier of the message to reply to; 0 if none"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the draft was created"
        },
        {
          "name": "input_message_text",
          "value": "Content of the message draft; this should always be of type inputMessageText"
        }
      ],
      "definition": {
        "name": "draftMessage",
        "id": 1373050112,
        "params": [
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "input_message_text",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "DraftMessage"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An ordinary chat with a user"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "chatTypePrivate",
        "id": 1700720838,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A basic group (i.e., a chat with 0-200 other users)"
        },
        {
          "name": "basic_group_id",
          "value": "Basic group identifier"
        }
      ],
      "definition": {
        "name": "chatTypeBasicGroup",
        "id": 21815278,
        "params": [
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A supergroup (i.e. a chat with up to GetOption(\"supergroup_max_size\") other users), or channel (with unlimited members)"
        },
        {
          "name": "supergroup_id",
          "value": "Supergroup or channel identifier"
        },
        {
          "name": "is_channel",
          "value": "True, if the supergroup is a channel"
        }
      ],
      "definition": {
        "name": "chatTypeSupergroup",
        "id": 955152366,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_channel",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A secret chat with a user"
        },
        {
          "name": "secret_chat_id",
          "value": "Secret chat identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier of the secret chat peer"
        }
      ],
      "definition": {
        "name": "chatTypeSecret",
        "id": 136722563,
        "params": [
          {
            "name": "secret_chat_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a filter of user chats"
        },
        {
          "name": "title",
          "value": "The title of the filter; 1-12 characters without line feeds"
        },
        {
          "name": "icon_name",
          "value": "The icon name for short filter representation. If non-empty, must be one of \"All\", \"Unread\", \"Unmuted\", \"Bots\", \"Channels\", \"Groups\", \"Private\", \"Custom\", \"Setup\", \"Cat\", \"Crown\", \"Favorite\", \"Flower\", \"Game\", \"Home\", \"Love\", \"Mask\", \"Party\", \"Sport\", \"Study\", \"Trade\", \"Travel\", \"Work\"."
        },
        {
          "name": "pinned_chat_ids",
          "value": "The chat identifiers of pinned chats in the filtered chat list"
        },
        {
          "name": "included_chat_ids",
          "value": "The chat identifiers of always included chats in the filtered chat list"
        },
        {
          "name": "excluded_chat_ids",
          "value": "The chat identifiers of always excluded chats in the filtered chat list"
        },
        {
          "name": "exclude_muted",
          "value": "True, if muted chats need to be excluded"
        },
        {
          "name": "exclude_read",
          "value": "True, if read chats need to be excluded"
        },
        {
          "name": "exclude_archived",
          "value": "True, if archived chats need to be excluded"
        },
        {
          "name": "include_contacts",
          "value": "True, if contacts need to be included"
        },
        {
          "name": "include_non_contacts",
          "value": "True, if non-contact users need to be included"
        },
        {
          "name": "include_bots",
          "value": "True, if bots need to be included"
        },
        {
          "name": "include_groups",
          "value": "True, if basic groups and supergroups need to be included"
        },
        {
          "name": "include_channels",
          "value": "True, if channels need to be included"
        }
      ],
      "definition": {
        "name": "chatFilter",
        "id": 2591245487,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "icon_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "pinned_chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "included_chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "excluded_chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "exclude_muted",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "exclude_read",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "exclude_archived",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "include_contacts",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "include_non_contacts",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "include_bots",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "include_groups",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "include_channels",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains basic information about a chat filter"
        },
        {
          "name": "id",
          "value": "Unique chat filter identifier"
        },
        {
          "name": "title",
          "value": "The title of the filter; 1-12 characters without line feeds"
        },
        {
          "name": "icon_name",
          "value": "The icon name for short filter representation. One of \"All\", \"Unread\", \"Unmuted\", \"Bots\", \"Channels\", \"Groups\", \"Private\", \"Custom\", \"Setup\", \"Cat\", \"Crown\", \"Favorite\", \"Flower\", \"Game\", \"Home\", \"Love\", \"Mask\", \"Party\", \"Sport\", \"Study\", \"Trade\", \"Travel\", \"Work\""
        }
      ],
      "definition": {
        "name": "chatFilterInfo",
        "id": 3351246131,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "icon_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatFilterInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a recommended chat filter"
        },
        {
          "name": "filter",
          "value": "The chat filter"
        },
        {
          "name": "param_description",
          "value": "Chat filter description"
        }
      ],
      "definition": {
        "name": "recommendedChatFilter",
        "id": 36048610,
        "params": [
          {
            "name": "filter",
            "type": {
              "name": "chatFilter",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RecommendedChatFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of recommended chat filters"
        },
        {
          "name": "chat_filters",
          "value": "List of recommended chat filters"
        }
      ],
      "definition": {
        "name": "recommendedChatFilters",
        "id": 1065055603,
        "params": [
          {
            "name": "chat_filters",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "recommendedChatFilter",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "RecommendedChatFilters"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A main list of chats"
        }
      ],
      "definition": {
        "name": "chatListMain",
        "id": 3893975980,
        "type": {
          "name": "ChatList"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A list of chats usually located at the top of the main chat list. Unmuted chats are automatically moved from the Archive to the Main chat list when a new message arrives"
        }
      ],
      "definition": {
        "name": "chatListArchive",
        "id": 362770115,
        "type": {
          "name": "ChatList"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A list of chats belonging to a chat filter"
        },
        {
          "name": "chat_filter_id",
          "value": "Chat filter identifier"
        }
      ],
      "definition": {
        "name": "chatListFilter",
        "id": 2272259641,
        "params": [
          {
            "name": "chat_filter_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatList"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of chat lists"
        },
        {
          "name": "chat_lists",
          "value": "List of chat lists"
        }
      ],
      "definition": {
        "name": "chatLists",
        "id": 2462241302,
        "params": [
          {
            "name": "chat_lists",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "ChatList"
              }
            }
          }
        ],
        "type": {
          "name": "ChatLists"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is sponsored by the user's MTProxy server"
        }
      ],
      "definition": {
        "name": "chatSourceMtprotoProxy",
        "id": 394074115,
        "type": {
          "name": "ChatSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat contains a public service announcement"
        },
        {
          "name": "type",
          "value": "The type of the announcement"
        },
        {
          "name": "text",
          "value": "The text of the announcement"
        }
      ],
      "definition": {
        "name": "chatSourcePublicServiceAnnouncement",
        "id": 3966396052,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a position of a chat in a chat list"
        },
        {
          "name": "list",
          "value": "The chat list"
        },
        {
          "name": "order",
          "value": "A parameter used to determine order of the chat in the chat list. Chats must be sorted by the pair (order, chat.id) in descending order"
        },
        {
          "name": "is_pinned",
          "value": "True, if the chat is pinned in the chat list"
        },
        {
          "name": "source",
          "value": "Source of the chat in the chat list; may be null"
        }
      ],
      "definition": {
        "name": "chatPosition",
        "id": 3672409941,
        "params": [
          {
            "name": "list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "order",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "source",
            "type": {
              "name": "ChatSource"
            }
          }
        ],
        "type": {
          "name": "ChatPosition"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat. (Can be a private chat, basic group, supergroup, or secret chat)"
        },
        {
          "name": "id",
          "value": "Chat unique identifier"
        },
        {
          "name": "type",
          "value": "Type of the chat"
        },
        {
          "name": "title",
          "value": "Chat title"
        },
        {
          "name": "photo",
          "value": "Chat photo; may be null"
        },
        {
          "name": "permissions",
          "value": "Actions that non-administrator chat members are allowed to take in the chat"
        },
        {
          "name": "last_message",
          "value": "Last message in the chat; may be null"
        },
        {
          "name": "positions",
          "value": "Positions of the chat in chat lists"
        },
        {
          "name": "is_marked_as_unread",
          "value": "True, if the chat is marked as unread"
        },
        {
          "name": "is_blocked",
          "value": "True, if the chat is blocked by the current user and private messages from the chat can't be received"
        },
        {
          "name": "has_scheduled_messages",
          "value": "True, if the chat has scheduled messages"
        },
        {
          "name": "can_be_deleted_only_for_self",
          "value": "True, if the chat messages can be deleted only for the current user while other users will continue to see the messages"
        },
        {
          "name": "can_be_deleted_for_all_users",
          "value": "True, if the chat messages can be deleted for all users"
        },
        {
          "name": "can_be_reported",
          "value": "True, if the chat can be reported to Telegram moderators through reportChat"
        },
        {
          "name": "default_disable_notification",
          "value": "Default value of the disable_notification parameter, used when a message is sent to the chat"
        },
        {
          "name": "unread_count",
          "value": "Number of unread messages in the chat"
        },
        {
          "name": "last_read_inbox_message_id",
          "value": "Identifier of the last read incoming message"
        },
        {
          "name": "last_read_outbox_message_id",
          "value": "Identifier of the last read outgoing message"
        },
        {
          "name": "unread_mention_count",
          "value": "Number of unread messages with a mention/reply in the chat"
        },
        {
          "name": "notification_settings",
          "value": "Notification settings for this chat"
        },
        {
          "name": "action_bar",
          "value": "Describes actions which should be possible to do through a chat action bar; may be null"
        },
        {
          "name": "reply_markup_message_id",
          "value": "Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat"
        },
        {
          "name": "draft_message",
          "value": "A draft of a message in the chat; may be null"
        },
        {
          "name": "client_data",
          "value": "Contains application-specific data associated with the chat. (For example, the chat scroll position or local chat notification settings can be stored here.) Persistent if the message database is used"
        }
      ],
      "definition": {
        "name": "chat",
        "id": 3530337467,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ChatType"
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "chatPhotoInfo",
              "bare": true
            }
          },
          {
            "name": "permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          },
          {
            "name": "last_message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "positions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatPosition",
                "bare": true
              }
            }
          },
          {
            "name": "is_marked_as_unread",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_blocked",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_scheduled_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_deleted_only_for_self",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_deleted_for_all_users",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "can_be_reported",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "default_disable_notification",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "unread_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "last_read_inbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_read_outbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "unread_mention_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "notification_settings",
            "type": {
              "name": "chatNotificationSettings",
              "bare": true
            }
          },
          {
            "name": "action_bar",
            "type": {
              "name": "ChatActionBar"
            }
          },
          {
            "name": "reply_markup_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "draft_message",
            "type": {
              "name": "draftMessage",
              "bare": true
            }
          },
          {
            "name": "client_data",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of chats"
        },
        {
          "name": "total_count",
          "value": "Approximate total count of chats found"
        },
        {
          "name": "chat_ids",
          "value": "List of chat identifiers"
        }
      ],
      "definition": {
        "name": "chats",
        "id": 2610160619,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a chat located nearby"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "distance",
          "value": "Distance to the chat location, in meters"
        }
      ],
      "definition": {
        "name": "chatNearby",
        "id": 48120405,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "distance",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatNearby"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of chats located nearby"
        },
        {
          "name": "users_nearby",
          "value": "List of users nearby"
        },
        {
          "name": "supergroups_nearby",
          "value": "List of location-based supergroups nearby"
        }
      ],
      "definition": {
        "name": "chatsNearby",
        "id": 3430173951,
        "params": [
          {
            "name": "users_nearby",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatNearby",
                "bare": true
              }
            }
          },
          {
            "name": "supergroups_nearby",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatNearby",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatsNearby"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a chat invite link"
        },
        {
          "name": "invite_link",
          "value": "Chat invite link"
        }
      ],
      "definition": {
        "name": "chatInviteLink",
        "id": 3412894804,
        "params": [
          {
            "name": "invite_link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatInviteLink"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a chat invite link"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the invite link; 0 if the user has no access to the chat before joining"
        },
        {
          "name": "accessible_for",
          "value": "If non-zero, the remaining time for which read access is granted to the chat, in seconds"
        },
        {
          "name": "type",
          "value": "Contains information about the type of the chat"
        },
        {
          "name": "title",
          "value": "Title of the chat"
        },
        {
          "name": "photo",
          "value": "Chat photo; may be null"
        },
        {
          "name": "member_count",
          "value": "Number of members in the chat"
        },
        {
          "name": "member_user_ids",
          "value": "User identifiers of some chat members that may be known to the current user"
        },
        {
          "name": "is_public",
          "value": "True, if the chat is a public supergroup or channel, i.e. it has a username or it is a location-based supergroup"
        }
      ],
      "definition": {
        "name": "chatInviteLinkInfo",
        "id": 740796235,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "accessible_for",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ChatType"
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "chatPhotoInfo",
              "bare": true
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "member_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "is_public",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatInviteLinkInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is public, because it has username"
        }
      ],
      "definition": {
        "name": "publicChatTypeHasUsername",
        "id": 350789758,
        "type": {
          "name": "PublicChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is public, because it is a location-based supergroup"
        }
      ],
      "definition": {
        "name": "publicChatTypeIsLocationBased",
        "id": 1183735952,
        "type": {
          "name": "PublicChatType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat can be reported as spam using the method reportChat with the reason chatReportReasonSpam"
        },
        {
          "name": "can_unarchive",
          "value": "If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings"
        }
      ],
      "definition": {
        "name": "chatActionBarReportSpam",
        "id": 2982209050,
        "params": [
          {
            "name": "can_unarchive",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatActionBar"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is a location-based supergroup, which can be reported as having unrelated location using the method reportChat with the reason chatReportReasonUnrelatedLocation"
        }
      ],
      "definition": {
        "name": "chatActionBarReportUnrelatedLocation",
        "id": 758175489,
        "type": {
          "name": "ChatActionBar"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is a private or secret chat, which can be reported using the method reportChat, or the other user can be blocked using the method blockUser, or the other user can be added to the contact list using the method addContact"
        },
        {
          "name": "can_unarchive",
          "value": "If true, the chat was automatically archived and can be moved back to the main chat list using addChatToList simultaneously with setting chat notification settings to default using setChatNotificationSettings"
        },
        {
          "name": "distance",
          "value": "If non-negative, the current user was found by the peer through searchChatsNearby and this is the distance between the users"
        }
      ],
      "definition": {
        "name": "chatActionBarReportAddBlock",
        "id": 3380816877,
        "params": [
          {
            "name": "can_unarchive",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "distance",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatActionBar"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is a private or secret chat and the other user can be added to the contact list using the method addContact"
        }
      ],
      "definition": {
        "name": "chatActionBarAddContact",
        "id": 3561642001,
        "type": {
          "name": "ChatActionBar"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat is a private or secret chat with a mutual contact and the user's phone number can be shared with the other user using the method sharePhoneNumber"
        }
      ],
      "definition": {
        "name": "chatActionBarSharePhoneNumber",
        "id": 35188697,
        "type": {
          "name": "ChatActionBar"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple button, with text that should be sent when the button is pressed"
        }
      ],
      "definition": {
        "name": "keyboardButtonTypeText",
        "id": 2521930040,
        "type": {
          "name": "KeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that sends the user's phone number when pressed; available only in private chats"
        }
      ],
      "definition": {
        "name": "keyboardButtonTypeRequestPhoneNumber",
        "id": 2765731769,
        "type": {
          "name": "KeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that sends the user's location when pressed; available only in private chats"
        }
      ],
      "definition": {
        "name": "keyboardButtonTypeRequestLocation",
        "id": 4169305341,
        "type": {
          "name": "KeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that allows the user to create and send a poll when pressed; available only in private chats"
        },
        {
          "name": "force_regular",
          "value": "If true, only regular polls must be allowed to create"
        },
        {
          "name": "force_quiz",
          "value": "If true, only polls in quiz mode must be allowed to create"
        }
      ],
      "definition": {
        "name": "keyboardButtonTypeRequestPoll",
        "id": 1902435512,
        "params": [
          {
            "name": "force_regular",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "force_quiz",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "KeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a single button in a bot keyboard"
        },
        {
          "name": "text",
          "value": "Text of the button"
        },
        {
          "name": "type",
          "value": "Type of the button"
        }
      ],
      "definition": {
        "name": "keyboardButton",
        "id": 2225131124,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "KeyboardButtonType"
            }
          }
        ],
        "type": {
          "name": "KeyboardButton"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that opens a specified URL"
        },
        {
          "name": "url",
          "value": "HTTP or tg:// URL to open"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeUrl",
        "id": 1130741420,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that opens a specified URL and automatically logs in in current user if they allowed to do that"
        },
        {
          "name": "url",
          "value": "An HTTP URL to open"
        },
        {
          "name": "id",
          "value": "Unique button identifier"
        },
        {
          "name": "forward_text",
          "value": "If non-empty, new text of the button in forwarded messages"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeLoginUrl",
        "id": 281435539,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "forward_text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that sends a callback query to a bot"
        },
        {
          "name": "data",
          "value": "Data to be sent to the bot via a callback query"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeCallback",
        "id": 3167452157,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that asks for password of the current user and then sends a callback query to a bot"
        },
        {
          "name": "data",
          "value": "Data to be sent to the bot via a callback query"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeCallbackWithPassword",
        "id": 908018248,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button with a game that sends a callback query to a bot. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageGame"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeCallbackGame",
        "id": 3911537768,
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button that forces an inline query to the bot to be inserted in the input field"
        },
        {
          "name": "query",
          "value": "Inline query to be sent to the bot"
        },
        {
          "name": "in_current_chat",
          "value": "True, if the inline query should be sent from the current chat"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeSwitchInline",
        "id": 2259403989,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "in_current_chat",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A button to buy something. This button must be in the first column and row of the keyboard and can be attached only to a message with content of the type messageInvoice"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButtonTypeBuy",
        "id": 1360739440,
        "type": {
          "name": "InlineKeyboardButtonType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a single button in an inline keyboard"
        },
        {
          "name": "text",
          "value": "Text of the button"
        },
        {
          "name": "type",
          "value": "Type of the button"
        }
      ],
      "definition": {
        "name": "inlineKeyboardButton",
        "id": 3922861592,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "InlineKeyboardButtonType"
            }
          }
        ],
        "type": {
          "name": "InlineKeyboardButton"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Instructs application to remove the keyboard once this message has been received. This kind of keyboard can't be received in an incoming message; instead, UpdateChatReplyMarkup with message_id == 0 will be sent"
        },
        {
          "name": "is_personal",
          "value": "True, if the keyboard is removed only for the mentioned users or the target user of a reply"
        }
      ],
      "definition": {
        "name": "replyMarkupRemoveKeyboard",
        "id": 3603714417,
        "params": [
          {
            "name": "is_personal",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ReplyMarkup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Instructs application to force a reply to this message"
        },
        {
          "name": "is_personal",
          "value": "True, if a forced reply must automatically be shown to the current user. For outgoing messages, specify true to show the forced reply only for the mentioned users and for the target user of a reply"
        }
      ],
      "definition": {
        "name": "replyMarkupForceReply",
        "id": 1039104593,
        "params": [
          {
            "name": "is_personal",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ReplyMarkup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a custom keyboard layout to quickly reply to bots"
        },
        {
          "name": "rows",
          "value": "A list of rows of bot keyboard buttons"
        },
        {
          "name": "resize_keyboard",
          "value": "True, if the application needs to resize the keyboard vertically"
        },
        {
          "name": "one_time",
          "value": "True, if the application needs to hide the keyboard after use"
        },
        {
          "name": "is_personal",
          "value": "True, if the keyboard must automatically be shown to the current user. For outgoing messages, specify true to show the keyboard only for the mentioned users and for the target user of a reply"
        }
      ],
      "definition": {
        "name": "replyMarkupShowKeyboard",
        "id": 3312408455,
        "params": [
          {
            "name": "rows",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "vector",
                "bare": true,
                "generic_arg": {
                  "name": "keyboardButton",
                  "bare": true
                }
              }
            }
          },
          {
            "name": "resize_keyboard",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "one_time",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_personal",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ReplyMarkup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains an inline keyboard layout"
        },
        {
          "name": "rows",
          "value": "A list of rows of inline keyboard buttons"
        }
      ],
      "definition": {
        "name": "replyMarkupInlineKeyboard",
        "id": 2460749563,
        "params": [
          {
            "name": "rows",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "vector",
                "bare": true,
                "generic_arg": {
                  "name": "inlineKeyboardButton",
                  "bare": true
                }
              }
            }
          }
        ],
        "type": {
          "name": "ReplyMarkup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An HTTP url needs to be open"
        },
        {
          "name": "url",
          "value": "The URL to open"
        },
        {
          "name": "skip_confirm",
          "value": "True, if there is no need to show an ordinary open URL confirm"
        }
      ],
      "definition": {
        "name": "loginUrlInfoOpen",
        "id": 3215921876,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "skip_confirm",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "LoginUrlInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An authorization confirmation dialog needs to be shown to the user"
        },
        {
          "name": "url",
          "value": "An HTTP URL to be opened"
        },
        {
          "name": "domain",
          "value": "A domain of the URL"
        },
        {
          "name": "bot_user_id",
          "value": "User identifier of a bot linked with the website"
        },
        {
          "name": "request_write_access",
          "value": "True, if the user needs to be requested to give the permission to the bot to send them messages"
        }
      ],
      "definition": {
        "name": "loginUrlInfoRequestConfirmation",
        "id": 2533068954,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "domain",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "request_write_access",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "LoginUrlInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a message thread"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the message thread belongs"
        },
        {
          "name": "message_thread_id",
          "value": "Message thread identifier, unique within the chat"
        },
        {
          "name": "reply_info",
          "value": "Contains information about the message thread"
        },
        {
          "name": "messages",
          "value": "The messages from which the thread starts. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id)"
        },
        {
          "name": "draft_message",
          "value": "A draft of a message in the message thread; may be null"
        }
      ],
      "definition": {
        "name": "messageThreadInfo",
        "id": 4082507803,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_info",
            "type": {
              "name": "messageReplyInfo",
              "bare": true
            }
          },
          {
            "name": "messages",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "message",
                "bare": true
              }
            }
          },
          {
            "name": "draft_message",
            "type": {
              "name": "draftMessage",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageThreadInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A plain text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextPlain",
        "id": 482617702,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A bold rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextBold",
        "id": 1670844268,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An italicized rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextItalic",
        "id": 1853354047,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An underlined rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextUnderline",
        "id": 3758947724,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A strikethrough rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextStrikethrough",
        "id": 723413585,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A fixed-width rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextFixed",
        "id": 3023471047,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rich text URL link"
        },
        {
          "name": "text",
          "value": "Text"
        },
        {
          "name": "url",
          "value": "URL"
        },
        {
          "name": "is_cached",
          "value": "True, if the URL has cached instant view server-side"
        }
      ],
      "definition": {
        "name": "richTextUrl",
        "id": 83939092,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_cached",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rich text email link"
        },
        {
          "name": "text",
          "value": "Text"
        },
        {
          "name": "email_address",
          "value": "Email address"
        }
      ],
      "definition": {
        "name": "richTextEmailAddress",
        "id": 40018679,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A subscript rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextSubscript",
        "id": 3426769484,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A superscript rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextSuperscript",
        "id": 3912725859,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A marked rich text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "richTextMarked",
        "id": 3022967682,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rich text phone number"
        },
        {
          "name": "text",
          "value": "Text"
        },
        {
          "name": "phone_number",
          "value": "Phone number"
        }
      ],
      "definition": {
        "name": "richTextPhoneNumber",
        "id": 128521539,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A small image inside the text"
        },
        {
          "name": "document",
          "value": "The image represented as a document. The image can be in GIF, JPEG or PNG format"
        },
        {
          "name": "width",
          "value": "Width of a bounding box in which the image should be shown; 0 if unknown"
        },
        {
          "name": "height",
          "value": "Height of a bounding box in which the image should be shown; 0 if unknown"
        }
      ],
      "definition": {
        "name": "richTextIcon",
        "id": 2814651138,
        "params": [
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rich text reference of a text on the same web page"
        },
        {
          "name": "text",
          "value": "The text"
        },
        {
          "name": "reference_text",
          "value": "The text to show on click"
        },
        {
          "name": "url",
          "value": "An HTTP URL, opening the reference"
        }
      ],
      "definition": {
        "name": "richTextReference",
        "id": 4150533995,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "reference_text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An anchor"
        },
        {
          "name": "name",
          "value": "Anchor name"
        }
      ],
      "definition": {
        "name": "richTextAnchor",
        "id": 1316950068,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A link to an anchor on the same web page"
        },
        {
          "name": "text",
          "value": "The link text"
        },
        {
          "name": "name",
          "value": "The anchor name. If the name is empty, the link should bring back to top"
        },
        {
          "name": "url",
          "value": "An HTTP URL, opening the anchor"
        }
      ],
      "definition": {
        "name": "richTextAnchorLink",
        "id": 3927139335,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A concatenation of rich texts"
        },
        {
          "name": "texts",
          "value": "Texts"
        }
      ],
      "definition": {
        "name": "richTexts",
        "id": 2494699657,
        "params": [
          {
            "name": "texts",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "RichText"
              }
            }
          }
        ],
        "type": {
          "name": "RichText"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a caption of an instant view web page block, consisting of a text and a trailing credit"
        },
        {
          "name": "text",
          "value": "Content of the caption"
        },
        {
          "name": "credit",
          "value": "Block credit (like HTML tag \u003ccite\u003e)"
        }
      ],
      "definition": {
        "name": "pageBlockCaption",
        "id": 3114902646,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "credit",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlockCaption"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an item of a list page block"
        },
        {
          "name": "label",
          "value": "Item label"
        },
        {
          "name": "page_blocks",
          "value": "Item blocks"
        }
      ],
      "definition": {
        "name": "pageBlockListItem",
        "id": 1599215478,
        "params": [
          {
            "name": "label",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          }
        ],
        "type": {
          "name": "PageBlockListItem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be left-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockHorizontalAlignmentLeft",
        "id": 848701417,
        "type": {
          "name": "PageBlockHorizontalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be center-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockHorizontalAlignmentCenter",
        "id": 3285763306,
        "type": {
          "name": "PageBlockHorizontalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be right-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockHorizontalAlignmentRight",
        "id": 1371369214,
        "type": {
          "name": "PageBlockHorizontalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be top-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockVerticalAlignmentTop",
        "id": 195500454,
        "type": {
          "name": "PageBlockVerticalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be middle-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockVerticalAlignmentMiddle",
        "id": 2171870709,
        "type": {
          "name": "PageBlockVerticalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The content should be bottom-aligned"
        }
      ],
      "definition": {
        "name": "pageBlockVerticalAlignmentBottom",
        "id": 2092531158,
        "type": {
          "name": "PageBlockVerticalAlignment"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a cell of a table"
        },
        {
          "name": "text",
          "value": "Cell text; may be null. If the text is null, then the cell should be invisible"
        },
        {
          "name": "is_header",
          "value": "True, if it is a header cell"
        },
        {
          "name": "colspan",
          "value": "The number of columns the cell should span"
        },
        {
          "name": "rowspan",
          "value": "The number of rows the cell should span"
        },
        {
          "name": "align",
          "value": "Horizontal cell content alignment"
        },
        {
          "name": "valign",
          "value": "Vertical cell content alignment"
        }
      ],
      "definition": {
        "name": "pageBlockTableCell",
        "id": 1417658214,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "is_header",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "colspan",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "rowspan",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "align",
            "type": {
              "name": "PageBlockHorizontalAlignment"
            }
          },
          {
            "name": "valign",
            "type": {
              "name": "PageBlockVerticalAlignment"
            }
          }
        ],
        "type": {
          "name": "PageBlockTableCell"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a related article"
        },
        {
          "name": "url",
          "value": "Related article URL"
        },
        {
          "name": "title",
          "value": "Article title; may be empty"
        },
        {
          "name": "param_description",
          "value": "Article description; may be empty"
        },
        {
          "name": "photo",
          "value": "Article photo; may be null"
        },
        {
          "name": "author",
          "value": "Article author; may be empty"
        },
        {
          "name": "publish_date",
          "value": "Point in time (Unix timestamp) when the article was published; 0 if unknown"
        }
      ],
      "definition": {
        "name": "pageBlockRelatedArticle",
        "id": 481199251,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "author",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "publish_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlockRelatedArticle"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The title of a page"
        },
        {
          "name": "title",
          "value": "Title"
        }
      ],
      "definition": {
        "name": "pageBlockTitle",
        "id": 1629664784,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The subtitle of a page"
        },
        {
          "name": "subtitle",
          "value": "Subtitle"
        }
      ],
      "definition": {
        "name": "pageBlockSubtitle",
        "id": 264524263,
        "params": [
          {
            "name": "subtitle",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The author and publishing date of a page"
        },
        {
          "name": "author",
          "value": "Author"
        },
        {
          "name": "publish_date",
          "value": "Point in time (Unix timestamp) when the article was published; 0 if unknown"
        }
      ],
      "definition": {
        "name": "pageBlockAuthorDate",
        "id": 1300231184,
        "params": [
          {
            "name": "author",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "publish_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A header"
        },
        {
          "name": "header",
          "value": "Header"
        }
      ],
      "definition": {
        "name": "pageBlockHeader",
        "id": 1402854811,
        "params": [
          {
            "name": "header",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A subheader"
        },
        {
          "name": "subheader",
          "value": "Subheader"
        }
      ],
      "definition": {
        "name": "pageBlockSubheader",
        "id": 1263956774,
        "params": [
          {
            "name": "subheader",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A kicker"
        },
        {
          "name": "kicker",
          "value": "Kicker"
        }
      ],
      "definition": {
        "name": "pageBlockKicker",
        "id": 1361282635,
        "params": [
          {
            "name": "kicker",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text paragraph"
        },
        {
          "name": "text",
          "value": "Paragraph text"
        }
      ],
      "definition": {
        "name": "pageBlockParagraph",
        "id": 1182402406,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A preformatted text paragraph"
        },
        {
          "name": "text",
          "value": "Paragraph text"
        },
        {
          "name": "language",
          "value": "Programming language for which the text should be formatted"
        }
      ],
      "definition": {
        "name": "pageBlockPreformatted",
        "id": 3228621118,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "language",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The footer of a page"
        },
        {
          "name": "footer",
          "value": "Footer"
        }
      ],
      "definition": {
        "name": "pageBlockFooter",
        "id": 886429480,
        "params": [
          {
            "name": "footer",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An empty block separating a page"
        }
      ],
      "definition": {
        "name": "pageBlockDivider",
        "id": 3676352904,
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An invisible anchor on a page, which can be used in a URL to open the page from the specified anchor"
        },
        {
          "name": "name",
          "value": "Name of the anchor"
        }
      ],
      "definition": {
        "name": "pageBlockAnchor",
        "id": 3456972720,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A list of data blocks"
        },
        {
          "name": "items",
          "value": "The items of the list"
        }
      ],
      "definition": {
        "name": "pageBlockList",
        "id": 1481306970,
        "params": [
          {
            "name": "items",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "pageBlockListItem",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A block quote"
        },
        {
          "name": "text",
          "value": "Quote text"
        },
        {
          "name": "credit",
          "value": "Quote credit"
        }
      ],
      "definition": {
        "name": "pageBlockBlockQuote",
        "id": 1657834142,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "credit",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A pull quote"
        },
        {
          "name": "text",
          "value": "Quote text"
        },
        {
          "name": "credit",
          "value": "Quote credit"
        }
      ],
      "definition": {
        "name": "pageBlockPullQuote",
        "id": 490242317,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "credit",
            "type": {
              "name": "RichText"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animation"
        },
        {
          "name": "animation",
          "value": "Animation file; may be null"
        },
        {
          "name": "caption",
          "value": "Animation caption"
        },
        {
          "name": "need_autoplay",
          "value": "True, if the animation should be played automatically"
        }
      ],
      "definition": {
        "name": "pageBlockAnimation",
        "id": 1355669513,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          },
          {
            "name": "need_autoplay",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An audio file"
        },
        {
          "name": "audio",
          "value": "Audio file; may be null"
        },
        {
          "name": "caption",
          "value": "Audio file caption"
        }
      ],
      "definition": {
        "name": "pageBlockAudio",
        "id": 4231596051,
        "params": [
          {
            "name": "audio",
            "type": {
              "name": "audio",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A photo"
        },
        {
          "name": "photo",
          "value": "Photo file; may be null"
        },
        {
          "name": "caption",
          "value": "Photo caption"
        },
        {
          "name": "url",
          "value": "URL that needs to be opened when the photo is clicked"
        }
      ],
      "definition": {
        "name": "pageBlockPhoto",
        "id": 417601156,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video"
        },
        {
          "name": "video",
          "value": "Video file; may be null"
        },
        {
          "name": "caption",
          "value": "Video caption"
        },
        {
          "name": "need_autoplay",
          "value": "True, if the video should be played automatically"
        },
        {
          "name": "is_looped",
          "value": "True, if the video should be looped"
        }
      ],
      "definition": {
        "name": "pageBlockVideo",
        "id": 510041394,
        "params": [
          {
            "name": "video",
            "type": {
              "name": "video",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          },
          {
            "name": "need_autoplay",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_looped",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A voice note"
        },
        {
          "name": "voice_note",
          "value": "Voice note; may be null"
        },
        {
          "name": "caption",
          "value": "Voice note caption"
        }
      ],
      "definition": {
        "name": "pageBlockVoiceNote",
        "id": 1823310463,
        "params": [
          {
            "name": "voice_note",
            "type": {
              "name": "voiceNote",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A page cover"
        },
        {
          "name": "cover",
          "value": "Cover"
        }
      ],
      "definition": {
        "name": "pageBlockCover",
        "id": 972174080,
        "params": [
          {
            "name": "cover",
            "type": {
              "name": "PageBlock"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An embedded web page"
        },
        {
          "name": "url",
          "value": "Web page URL, if available"
        },
        {
          "name": "html",
          "value": "HTML-markup of the embedded page"
        },
        {
          "name": "poster_photo",
          "value": "Poster photo, if available; may be null"
        },
        {
          "name": "width",
          "value": "Block width; 0 if unknown"
        },
        {
          "name": "height",
          "value": "Block height; 0 if unknown"
        },
        {
          "name": "caption",
          "value": "Block caption"
        },
        {
          "name": "is_full_width",
          "value": "True, if the block should be full width"
        },
        {
          "name": "allow_scrolling",
          "value": "True, if scrolling should be allowed"
        }
      ],
      "definition": {
        "name": "pageBlockEmbedded",
        "id": 2352389533,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "html",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "poster_photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          },
          {
            "name": "is_full_width",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "allow_scrolling",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An embedded post"
        },
        {
          "name": "url",
          "value": "Web page URL"
        },
        {
          "name": "author",
          "value": "Post author"
        },
        {
          "name": "author_photo",
          "value": "Post author photo; may be null"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the post was created; 0 if unknown"
        },
        {
          "name": "page_blocks",
          "value": "Post content"
        },
        {
          "name": "caption",
          "value": "Post caption"
        }
      ],
      "definition": {
        "name": "pageBlockEmbeddedPost",
        "id": 3159870965,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "author",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "author_photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A collage"
        },
        {
          "name": "page_blocks",
          "value": "Collage item contents"
        },
        {
          "name": "caption",
          "value": "Block caption"
        }
      ],
      "definition": {
        "name": "pageBlockCollage",
        "id": 1086106352,
        "params": [
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A slideshow"
        },
        {
          "name": "page_blocks",
          "value": "Slideshow item contents"
        },
        {
          "name": "caption",
          "value": "Block caption"
        }
      ],
      "definition": {
        "name": "pageBlockSlideshow",
        "id": 285725846,
        "params": [
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A link to a chat"
        },
        {
          "name": "title",
          "value": "Chat title"
        },
        {
          "name": "photo",
          "value": "Chat photo; may be null"
        },
        {
          "name": "username",
          "value": "Chat username, by which all other information about the chat should be resolved"
        }
      ],
      "definition": {
        "name": "pageBlockChatLink",
        "id": 4092876043,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "chatPhotoInfo",
              "bare": true
            }
          },
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A table"
        },
        {
          "name": "caption",
          "value": "Table caption"
        },
        {
          "name": "cells",
          "value": "Table cells"
        },
        {
          "name": "is_bordered",
          "value": "True, if the table is bordered"
        },
        {
          "name": "is_striped",
          "value": "True, if the table is striped"
        }
      ],
      "definition": {
        "name": "pageBlockTable",
        "id": 3429061315,
        "params": [
          {
            "name": "caption",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "cells",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "vector",
                "bare": true,
                "generic_arg": {
                  "name": "pageBlockTableCell",
                  "bare": true
                }
              }
            }
          },
          {
            "name": "is_bordered",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_striped",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A collapsible block"
        },
        {
          "name": "header",
          "value": "Always visible heading for the block"
        },
        {
          "name": "page_blocks",
          "value": "Block contents"
        },
        {
          "name": "is_open",
          "value": "True, if the block is open by default"
        }
      ],
      "definition": {
        "name": "pageBlockDetails",
        "id": 2567572491,
        "params": [
          {
            "name": "header",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          },
          {
            "name": "is_open",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Related articles"
        },
        {
          "name": "header",
          "value": "Block header"
        },
        {
          "name": "articles",
          "value": "List of related articles"
        }
      ],
      "definition": {
        "name": "pageBlockRelatedArticles",
        "id": 2473427430,
        "params": [
          {
            "name": "header",
            "type": {
              "name": "RichText"
            }
          },
          {
            "name": "articles",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "pageBlockRelatedArticle",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A map"
        },
        {
          "name": "location",
          "value": "Location of the map center"
        },
        {
          "name": "zoom",
          "value": "Map zoom level"
        },
        {
          "name": "width",
          "value": "Map width"
        },
        {
          "name": "height",
          "value": "Map height"
        },
        {
          "name": "caption",
          "value": "Block caption"
        }
      ],
      "definition": {
        "name": "pageBlockMap",
        "id": 1510961171,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "zoom",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "pageBlockCaption",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PageBlock"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an instant view page for a web page"
        },
        {
          "name": "page_blocks",
          "value": "Content of the web page"
        },
        {
          "name": "view_count",
          "value": "Number of the instant view views; 0 if unknown"
        },
        {
          "name": "version",
          "value": "Version of the instant view, currently can be 1 or 2"
        },
        {
          "name": "is_rtl",
          "value": "True, if the instant view must be shown from right to left"
        },
        {
          "name": "is_full",
          "value": "True, if the instant view contains the full page. A network request might be needed to get the full web page instant view"
        }
      ],
      "definition": {
        "name": "webPageInstantView",
        "id": 1541615465,
        "params": [
          {
            "name": "page_blocks",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PageBlock"
              }
            }
          },
          {
            "name": "view_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "version",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_rtl",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_full",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "WebPageInstantView"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a web page preview"
        },
        {
          "name": "url",
          "value": "Original URL of the link"
        },
        {
          "name": "display_url",
          "value": "URL to display"
        },
        {
          "name": "type",
          "value": "Type of the web page. Can be: article, photo, audio, video, document, profile, app, or something else"
        },
        {
          "name": "site_name",
          "value": "Short name of the site (e.g., Google Docs, App Store)"
        },
        {
          "name": "title",
          "value": "Title of the content"
        },
        {
          "name": "param_description",
          "value": "Description of the content"
        },
        {
          "name": "photo",
          "value": "Image representing the content; may be null"
        },
        {
          "name": "embed_url",
          "value": "URL to show in the embedded preview"
        },
        {
          "name": "embed_type",
          "value": "MIME type of the embedded preview, (e.g., text/html or video/mp4)"
        },
        {
          "name": "embed_width",
          "value": "Width of the embedded preview"
        },
        {
          "name": "embed_height",
          "value": "Height of the embedded preview"
        },
        {
          "name": "duration",
          "value": "Duration of the content, in seconds"
        },
        {
          "name": "author",
          "value": "Author of the content"
        },
        {
          "name": "animation",
          "value": "Preview of the content as an animation, if available; may be null"
        },
        {
          "name": "audio",
          "value": "Preview of the content as an audio file, if available; may be null"
        },
        {
          "name": "document",
          "value": "Preview of the content as a document, if available (currently only available for small PDF files and ZIP archives); may be null"
        },
        {
          "name": "sticker",
          "value": "Preview of the content as a sticker for small WEBP files, if available; may be null"
        },
        {
          "name": "video",
          "value": "Preview of the content as a video, if available; may be null"
        },
        {
          "name": "video_note",
          "value": "Preview of the content as a video note, if available; may be null"
        },
        {
          "name": "voice_note",
          "value": "Preview of the content as a voice note, if available; may be null"
        },
        {
          "name": "instant_view_version",
          "value": "Version of instant view, available for the web page (currently can be 1 or 2), 0 if none"
        }
      ],
      "definition": {
        "name": "webPage",
        "id": 3717633582,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "display_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "site_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "embed_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "embed_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "embed_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "embed_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "author",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          },
          {
            "name": "audio",
            "type": {
              "name": "audio",
              "bare": true
            }
          },
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "video",
            "type": {
              "name": "video",
              "bare": true
            }
          },
          {
            "name": "video_note",
            "type": {
              "name": "videoNote",
              "bare": true
            }
          },
          {
            "name": "voice_note",
            "type": {
              "name": "voiceNote",
              "bare": true
            }
          },
          {
            "name": "instant_view_version",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "WebPage"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a country"
        },
        {
          "name": "country_code",
          "value": "A two-letter ISO 3166-1 alpha-2 country code"
        },
        {
          "name": "name",
          "value": "Native name of the country"
        },
        {
          "name": "english_name",
          "value": "English name of the country"
        },
        {
          "name": "is_hidden",
          "value": "True, if the country should be hidden from the list of all countries"
        },
        {
          "name": "calling_codes",
          "value": "List of country calling codes"
        }
      ],
      "definition": {
        "name": "countryInfo",
        "id": 3650317823,
        "params": [
          {
            "name": "country_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "english_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_hidden",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "calling_codes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "CountryInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about countries"
        },
        {
          "name": "countries",
          "value": "The list of countries"
        }
      ],
      "definition": {
        "name": "countries",
        "id": 2494893583,
        "params": [
          {
            "name": "countries",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "countryInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Countries"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a phone number"
        },
        {
          "name": "country",
          "value": "Information about the country to which the phone number belongs; may be null"
        },
        {
          "name": "country_calling_code",
          "value": "The part of the phone number denoting country calling code or its part"
        },
        {
          "name": "formatted_phone_number",
          "value": "The phone number without country calling code formatted accordingly to local rules"
        }
      ],
      "definition": {
        "name": "phoneNumberInfo",
        "id": 560180961,
        "params": [
          {
            "name": "country",
            "type": {
              "name": "countryInfo",
              "bare": true
            }
          },
          {
            "name": "country_calling_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "formatted_phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PhoneNumberInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an action associated with a bank card number"
        },
        {
          "name": "text",
          "value": "Action text"
        },
        {
          "name": "url",
          "value": "The URL to be opened"
        }
      ],
      "definition": {
        "name": "bankCardActionOpenUrl",
        "id": 4098513029,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BankCardActionOpenUrl"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Information about a bank card"
        },
        {
          "name": "title",
          "value": "Title of the bank card description"
        },
        {
          "name": "actions",
          "value": "Actions that can be done with the bank card number"
        }
      ],
      "definition": {
        "name": "bankCardInfo",
        "id": 734517919,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "actions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "bankCardActionOpenUrl",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "BankCardInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes an address"
        },
        {
          "name": "country_code",
          "value": "A two-letter ISO 3166-1 alpha-2 country code"
        },
        {
          "name": "state",
          "value": "State, if applicable"
        },
        {
          "name": "city",
          "value": "City"
        },
        {
          "name": "street_line1",
          "value": "First line of the address"
        },
        {
          "name": "street_line2",
          "value": "Second line of the address"
        },
        {
          "name": "postal_code",
          "value": "Address postal code"
        }
      ],
      "definition": {
        "name": "address",
        "id": 2251312954,
        "params": [
          {
            "name": "country_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "state",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "city",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "street_line1",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "street_line2",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "postal_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Address"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Portion of the price of a product (e.g., \"delivery cost\", \"tax amount\")"
        },
        {
          "name": "label",
          "value": "Label for this portion of the product price"
        },
        {
          "name": "amount",
          "value": "Currency amount in minimal quantity of the currency"
        }
      ],
      "definition": {
        "name": "labeledPricePart",
        "id": 552789798,
        "params": [
          {
            "name": "label",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "amount",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LabeledPricePart"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Product invoice"
        },
        {
          "name": "currency",
          "value": "ISO 4217 currency code"
        },
        {
          "name": "price_parts",
          "value": "A list of objects used to calculate the total price of the product"
        },
        {
          "name": "is_test",
          "value": "True, if the payment is a test payment"
        },
        {
          "name": "need_name",
          "value": "True, if the user's name is needed for payment"
        },
        {
          "name": "need_phone_number",
          "value": "True, if the user's phone number is needed for payment"
        },
        {
          "name": "need_email_address",
          "value": "True, if the user's email address is needed for payment"
        },
        {
          "name": "need_shipping_address",
          "value": "True, if the user's shipping address is needed for payment"
        },
        {
          "name": "send_phone_number_to_provider",
          "value": "True, if the user's phone number will be sent to the provider"
        },
        {
          "name": "send_email_address_to_provider",
          "value": "True, if the user's email address will be sent to the provider"
        },
        {
          "name": "is_flexible",
          "value": "True, if the total price depends on the shipping method"
        }
      ],
      "definition": {
        "name": "invoice",
        "id": 79556764,
        "params": [
          {
            "name": "currency",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "price_parts",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "labeledPricePart",
                "bare": true
              }
            }
          },
          {
            "name": "is_test",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_name",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_phone_number",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_email_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_shipping_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "send_phone_number_to_provider",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "send_email_address_to_provider",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_flexible",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Invoice"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Order information"
        },
        {
          "name": "name",
          "value": "Name of the user"
        },
        {
          "name": "phone_number",
          "value": "Phone number of the user"
        },
        {
          "name": "email_address",
          "value": "Email address of the user"
        },
        {
          "name": "shipping_address",
          "value": "Shipping address for this order; may be null"
        }
      ],
      "definition": {
        "name": "orderInfo",
        "id": 783997294,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "shipping_address",
            "type": {
              "name": "address",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "OrderInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "One shipping option"
        },
        {
          "name": "id",
          "value": "Shipping option identifier"
        },
        {
          "name": "title",
          "value": "Option title"
        },
        {
          "name": "price_parts",
          "value": "A list of objects used to calculate the total shipping costs"
        }
      ],
      "definition": {
        "name": "shippingOption",
        "id": 1931214798,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "price_parts",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "labeledPricePart",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ShippingOption"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about saved card credentials"
        },
        {
          "name": "id",
          "value": "Unique identifier of the saved credentials"
        },
        {
          "name": "title",
          "value": "Title of the saved credentials"
        }
      ],
      "definition": {
        "name": "savedCredentials",
        "id": 3924694236,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SavedCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Applies if a user chooses some previously saved payment credentials. To use their previously saved credentials, the user must have a valid temporary password"
        },
        {
          "name": "saved_credentials_id",
          "value": "Identifier of the saved credentials"
        }
      ],
      "definition": {
        "name": "inputCredentialsSaved",
        "id": 2260581932,
        "params": [
          {
            "name": "saved_credentials_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Applies if a user enters new credentials on a payment provider website"
        },
        {
          "name": "data",
          "value": "Contains JSON-encoded data with a credential identifier from the payment provider"
        },
        {
          "name": "allow_save",
          "value": "True, if the credential identifier can be saved on the server side"
        }
      ],
      "definition": {
        "name": "inputCredentialsNew",
        "id": 3465277738,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "allow_save",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "InputCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Applies if a user enters new credentials using Android Pay"
        },
        {
          "name": "data",
          "value": "JSON-encoded data with the credential identifier"
        }
      ],
      "definition": {
        "name": "inputCredentialsAndroidPay",
        "id": 1979566832,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Applies if a user enters new credentials using Apple Pay"
        },
        {
          "name": "data",
          "value": "JSON-encoded data with the credential identifier"
        }
      ],
      "definition": {
        "name": "inputCredentialsApplePay",
        "id": 3048396497,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Stripe payment provider"
        },
        {
          "name": "publishable_key",
          "value": "Stripe API publishable key"
        },
        {
          "name": "need_country",
          "value": "True, if the user country must be provided"
        },
        {
          "name": "need_postal_code",
          "value": "True, if the user ZIP/postal code must be provided"
        },
        {
          "name": "need_cardholder_name",
          "value": "True, if the cardholder name must be provided"
        }
      ],
      "definition": {
        "name": "paymentsProviderStripe",
        "id": 1090791032,
        "params": [
          {
            "name": "publishable_key",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "need_country",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_postal_code",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_cardholder_name",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PaymentsProviderStripe"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about an invoice payment form"
        },
        {
          "name": "invoice",
          "value": "Full information of the invoice"
        },
        {
          "name": "url",
          "value": "Payment form URL"
        },
        {
          "name": "payments_provider",
          "value": "Contains information about the payment provider, if available, to support it natively without the need for opening the URL; may be null"
        },
        {
          "name": "saved_order_info",
          "value": "Saved server-side order information; may be null"
        },
        {
          "name": "saved_credentials",
          "value": "Contains information about saved card credentials; may be null"
        },
        {
          "name": "can_save_credentials",
          "value": "True, if the user can choose to save credentials"
        },
        {
          "name": "need_password",
          "value": "True, if the user will be able to save credentials protected by a password they set up"
        }
      ],
      "definition": {
        "name": "paymentForm",
        "id": 4094549066,
        "params": [
          {
            "name": "invoice",
            "type": {
              "name": "invoice",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "payments_provider",
            "type": {
              "name": "paymentsProviderStripe",
              "bare": true
            }
          },
          {
            "name": "saved_order_info",
            "type": {
              "name": "orderInfo",
              "bare": true
            }
          },
          {
            "name": "saved_credentials",
            "type": {
              "name": "savedCredentials",
              "bare": true
            }
          },
          {
            "name": "can_save_credentials",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_password",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PaymentForm"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a temporary identifier of validated order information, which is stored for one hour. Also contains the available shipping options"
        },
        {
          "name": "order_info_id",
          "value": "Temporary identifier of the order information"
        },
        {
          "name": "shipping_options",
          "value": "Available shipping options"
        }
      ],
      "definition": {
        "name": "validatedOrderInfo",
        "id": 2891472660,
        "params": [
          {
            "name": "order_info_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "shipping_options",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "shippingOption",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ValidatedOrderInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the result of a payment request"
        },
        {
          "name": "success",
          "value": "True, if the payment request was successful; otherwise the verification_url will be not empty"
        },
        {
          "name": "verification_url",
          "value": "URL for additional payment credentials verification"
        }
      ],
      "definition": {
        "name": "paymentResult",
        "id": 3490703453,
        "params": [
          {
            "name": "success",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "verification_url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PaymentResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a successful payment"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the payment was made"
        },
        {
          "name": "payments_provider_user_id",
          "value": "User identifier of the payment provider bot"
        },
        {
          "name": "invoice",
          "value": "Contains information about the invoice"
        },
        {
          "name": "order_info",
          "value": "Contains order information; may be null"
        },
        {
          "name": "shipping_option",
          "value": "Chosen shipping option; may be null"
        },
        {
          "name": "credentials_title",
          "value": "Title of the saved credentials"
        }
      ],
      "definition": {
        "name": "paymentReceipt",
        "id": 3123743751,
        "params": [
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "payments_provider_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "invoice",
            "type": {
              "name": "invoice",
              "bare": true
            }
          },
          {
            "name": "order_info",
            "type": {
              "name": "orderInfo",
              "bare": true
            }
          },
          {
            "name": "shipping_option",
            "type": {
              "name": "shippingOption",
              "bare": true
            }
          },
          {
            "name": "credentials_title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PaymentReceipt"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "File with the date it was uploaded"
        },
        {
          "name": "file",
          "value": "The file"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the file was uploaded"
        }
      ],
      "definition": {
        "name": "datedFile",
        "id": 2454171805,
        "params": [
          {
            "name": "file",
            "type": {
              "name": "file",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DatedFile"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's personal details"
        }
      ],
      "definition": {
        "name": "passportElementTypePersonalDetails",
        "id": 3262830931,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's passport"
        }
      ],
      "definition": {
        "name": "passportElementTypePassport",
        "id": 3858606920,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's driver license"
        }
      ],
      "definition": {
        "name": "passportElementTypeDriverLicense",
        "id": 1827298379,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's identity card"
        }
      ],
      "definition": {
        "name": "passportElementTypeIdentityCard",
        "id": 3792611164,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's internal passport"
        }
      ],
      "definition": {
        "name": "passportElementTypeInternalPassport",
        "id": 3501185337,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's address"
        }
      ],
      "definition": {
        "name": "passportElementTypeAddress",
        "id": 496327874,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's utility bill"
        }
      ],
      "definition": {
        "name": "passportElementTypeUtilityBill",
        "id": 627084906,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's bank statement"
        }
      ],
      "definition": {
        "name": "passportElementTypeBankStatement",
        "id": 574095667,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's rental agreement"
        }
      ],
      "definition": {
        "name": "passportElementTypeRentalAgreement",
        "id": 2234384016,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the registration page of the user's passport"
        }
      ],
      "definition": {
        "name": "passportElementTypePassportRegistration",
        "id": 4135489087,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's temporary registration"
        }
      ],
      "definition": {
        "name": "passportElementTypeTemporaryRegistration",
        "id": 1092498527,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's phone number"
        }
      ],
      "definition": {
        "name": "passportElementTypePhoneNumber",
        "id": 3299606124,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's email address"
        }
      ],
      "definition": {
        "name": "passportElementTypeEmailAddress",
        "id": 4215645891,
        "type": {
          "name": "PassportElementType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a date according to the Gregorian calendar"
        },
        {
          "name": "day",
          "value": "Day of the month, 1-31"
        },
        {
          "name": "month",
          "value": "Month, 1-12"
        },
        {
          "name": "year",
          "value": "Year, 1-9999"
        }
      ],
      "definition": {
        "name": "date",
        "id": 4017010336,
        "params": [
          {
            "name": "day",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "month",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "year",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Date"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the user's personal details"
        },
        {
          "name": "first_name",
          "value": "First name of the user written in English; 1-255 characters"
        },
        {
          "name": "middle_name",
          "value": "Middle name of the user written in English; 0-255 characters"
        },
        {
          "name": "last_name",
          "value": "Last name of the user written in English; 1-255 characters"
        },
        {
          "name": "native_first_name",
          "value": "Native first name of the user; 1-255 characters"
        },
        {
          "name": "native_middle_name",
          "value": "Native middle name of the user; 0-255 characters"
        },
        {
          "name": "native_last_name",
          "value": "Native last name of the user; 1-255 characters"
        },
        {
          "name": "birthdate",
          "value": "Birthdate of the user"
        },
        {
          "name": "gender",
          "value": "Gender of the user, \"male\" or \"female\""
        },
        {
          "name": "country_code",
          "value": "A two-letter ISO 3166-1 alpha-2 country code of the user's country"
        },
        {
          "name": "residence_country_code",
          "value": "A two-letter ISO 3166-1 alpha-2 country code of the user's residence country"
        }
      ],
      "definition": {
        "name": "personalDetails",
        "id": 3233311159,
        "params": [
          {
            "name": "first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "middle_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "native_first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "native_middle_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "native_last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "birthdate",
            "type": {
              "name": "date",
              "bare": true
            }
          },
          {
            "name": "gender",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "country_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "residence_country_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PersonalDetails"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An identity document"
        },
        {
          "name": "number",
          "value": "Document number; 1-24 characters"
        },
        {
          "name": "expiry_date",
          "value": "Document expiry date; may be null"
        },
        {
          "name": "front_side",
          "value": "Front side of the document"
        },
        {
          "name": "reverse_side",
          "value": "Reverse side of the document; only for driver license and identity card"
        },
        {
          "name": "selfie",
          "value": "Selfie with the document; may be null"
        },
        {
          "name": "translation",
          "value": "List of files containing a certified English translation of the document"
        }
      ],
      "definition": {
        "name": "identityDocument",
        "id": 2556633510,
        "params": [
          {
            "name": "number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "expiry_date",
            "type": {
              "name": "date",
              "bare": true
            }
          },
          {
            "name": "front_side",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "reverse_side",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "selfie",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "translation",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "datedFile",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "IdentityDocument"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An identity document to be saved to Telegram Passport"
        },
        {
          "name": "number",
          "value": "Document number; 1-24 characters"
        },
        {
          "name": "expiry_date",
          "value": "Document expiry date, if available"
        },
        {
          "name": "front_side",
          "value": "Front side of the document"
        },
        {
          "name": "reverse_side",
          "value": "Reverse side of the document; only for driver license and identity card"
        },
        {
          "name": "selfie",
          "value": "Selfie with the document, if available"
        },
        {
          "name": "translation",
          "value": "List of files containing a certified English translation of the document"
        }
      ],
      "definition": {
        "name": "inputIdentityDocument",
        "id": 2096106238,
        "params": [
          {
            "name": "number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "expiry_date",
            "type": {
              "name": "date",
              "bare": true
            }
          },
          {
            "name": "front_side",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "reverse_side",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "selfie",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "translation",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputFile"
              }
            }
          }
        ],
        "type": {
          "name": "InputIdentityDocument"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A personal document, containing some information about a user"
        },
        {
          "name": "files",
          "value": "List of files containing the pages of the document"
        },
        {
          "name": "translation",
          "value": "List of files containing a certified English translation of the document"
        }
      ],
      "definition": {
        "name": "personalDocument",
        "id": 2822078008,
        "params": [
          {
            "name": "files",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "datedFile",
                "bare": true
              }
            }
          },
          {
            "name": "translation",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "datedFile",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PersonalDocument"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A personal document to be saved to Telegram Passport"
        },
        {
          "name": "files",
          "value": "List of files containing the pages of the document"
        },
        {
          "name": "translation",
          "value": "List of files containing a certified English translation of the document"
        }
      ],
      "definition": {
        "name": "inputPersonalDocument",
        "id": 3140763566,
        "params": [
          {
            "name": "files",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputFile"
              }
            }
          },
          {
            "name": "translation",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputFile"
              }
            }
          }
        ],
        "type": {
          "name": "InputPersonalDocument"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's personal details"
        },
        {
          "name": "personal_details",
          "value": "Personal details of the user"
        }
      ],
      "definition": {
        "name": "passportElementPersonalDetails",
        "id": 1217724035,
        "params": [
          {
            "name": "personal_details",
            "type": {
              "name": "personalDetails",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's passport"
        },
        {
          "name": "passport",
          "value": "Passport"
        }
      ],
      "definition": {
        "name": "passportElementPassport",
        "id": 4030981923,
        "params": [
          {
            "name": "passport",
            "type": {
              "name": "identityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's driver license"
        },
        {
          "name": "driver_license",
          "value": "Driver license"
        }
      ],
      "definition": {
        "name": "passportElementDriverLicense",
        "id": 1643580589,
        "params": [
          {
            "name": "driver_license",
            "type": {
              "name": "identityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's identity card"
        },
        {
          "name": "identity_card",
          "value": "Identity card"
        }
      ],
      "definition": {
        "name": "passportElementIdentityCard",
        "id": 2083775797,
        "params": [
          {
            "name": "identity_card",
            "type": {
              "name": "identityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's internal passport"
        },
        {
          "name": "internal_passport",
          "value": "Internal passport"
        }
      ],
      "definition": {
        "name": "passportElementInternalPassport",
        "id": 36220295,
        "params": [
          {
            "name": "internal_passport",
            "type": {
              "name": "identityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's address"
        },
        {
          "name": "address",
          "value": "Address"
        }
      ],
      "definition": {
        "name": "passportElementAddress",
        "id": 3512342064,
        "params": [
          {
            "name": "address",
            "type": {
              "name": "address",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's utility bill"
        },
        {
          "name": "utility_bill",
          "value": "Utility bill"
        }
      ],
      "definition": {
        "name": "passportElementUtilityBill",
        "id": 4060356050,
        "params": [
          {
            "name": "utility_bill",
            "type": {
              "name": "personalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's bank statement"
        },
        {
          "name": "bank_statement",
          "value": "Bank statement"
        }
      ],
      "definition": {
        "name": "passportElementBankStatement",
        "id": 3928502888,
        "params": [
          {
            "name": "bank_statement",
            "type": {
              "name": "personalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's rental agreement"
        },
        {
          "name": "rental_agreement",
          "value": "Rental agreement"
        }
      ],
      "definition": {
        "name": "passportElementRentalAgreement",
        "id": 4004825896,
        "params": [
          {
            "name": "rental_agreement",
            "type": {
              "name": "personalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's passport registration pages"
        },
        {
          "name": "passport_registration",
          "value": "Passport registration pages"
        }
      ],
      "definition": {
        "name": "passportElementPassportRegistration",
        "id": 618323071,
        "params": [
          {
            "name": "passport_registration",
            "type": {
              "name": "personalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's temporary registration"
        },
        {
          "name": "temporary_registration",
          "value": "Temporary registration"
        }
      ],
      "definition": {
        "name": "passportElementTemporaryRegistration",
        "id": 1237626864,
        "params": [
          {
            "name": "temporary_registration",
            "type": {
              "name": "personalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's phone number"
        },
        {
          "name": "phone_number",
          "value": "Phone number"
        }
      ],
      "definition": {
        "name": "passportElementPhoneNumber",
        "id": 2974848921,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element containing the user's email address"
        },
        {
          "name": "email_address",
          "value": "Email address"
        }
      ],
      "definition": {
        "name": "passportElementEmailAddress",
        "id": 2766837765,
        "params": [
          {
            "name": "email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's personal details"
        },
        {
          "name": "personal_details",
          "value": "Personal details of the user"
        }
      ],
      "definition": {
        "name": "inputPassportElementPersonalDetails",
        "id": 164791359,
        "params": [
          {
            "name": "personal_details",
            "type": {
              "name": "personalDetails",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's passport"
        },
        {
          "name": "passport",
          "value": "The passport to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementPassport",
        "id": 3797955940,
        "params": [
          {
            "name": "passport",
            "type": {
              "name": "inputIdentityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's driver license"
        },
        {
          "name": "driver_license",
          "value": "The driver license to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementDriverLicense",
        "id": 304813264,
        "params": [
          {
            "name": "driver_license",
            "type": {
              "name": "inputIdentityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's identity card"
        },
        {
          "name": "identity_card",
          "value": "The identity card to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementIdentityCard",
        "id": 4285003906,
        "params": [
          {
            "name": "identity_card",
            "type": {
              "name": "inputIdentityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's internal passport"
        },
        {
          "name": "internal_passport",
          "value": "The internal passport to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementInternalPassport",
        "id": 715360043,
        "params": [
          {
            "name": "internal_passport",
            "type": {
              "name": "inputIdentityDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's address"
        },
        {
          "name": "address",
          "value": "The address to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementAddress",
        "id": 461630480,
        "params": [
          {
            "name": "address",
            "type": {
              "name": "address",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's utility bill"
        },
        {
          "name": "utility_bill",
          "value": "The utility bill to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementUtilityBill",
        "id": 1389203841,
        "params": [
          {
            "name": "utility_bill",
            "type": {
              "name": "inputPersonalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's bank statement"
        },
        {
          "name": "bank_statement",
          "value": "The bank statement to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementBankStatement",
        "id": 4268382088,
        "params": [
          {
            "name": "bank_statement",
            "type": {
              "name": "inputPersonalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's rental agreement"
        },
        {
          "name": "rental_agreement",
          "value": "The rental agreement to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementRentalAgreement",
        "id": 1736154155,
        "params": [
          {
            "name": "rental_agreement",
            "type": {
              "name": "inputPersonalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's passport registration"
        },
        {
          "name": "passport_registration",
          "value": "The passport registration page to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementPassportRegistration",
        "id": 1314562128,
        "params": [
          {
            "name": "passport_registration",
            "type": {
              "name": "inputPersonalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's temporary registration"
        },
        {
          "name": "temporary_registration",
          "value": "The temporary registration document to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementTemporaryRegistration",
        "id": 2381729249,
        "params": [
          {
            "name": "temporary_registration",
            "type": {
              "name": "inputPersonalDocument",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's phone number"
        },
        {
          "name": "phone_number",
          "value": "The phone number to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementPhoneNumber",
        "id": 1319357497,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram Passport element to be saved containing the user's email address"
        },
        {
          "name": "email_address",
          "value": "The email address to be saved"
        }
      ],
      "definition": {
        "name": "inputPassportElementEmailAddress",
        "id": 4046361637,
        "params": [
          {
            "name": "email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about saved Telegram Passport elements"
        },
        {
          "name": "elements",
          "value": "Telegram Passport elements"
        }
      ],
      "definition": {
        "name": "passportElements",
        "id": 3180244203,
        "params": [
          {
            "name": "elements",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PassportElement"
              }
            }
          }
        ],
        "type": {
          "name": "PassportElements"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The element contains an error in an unspecified place. The error will be considered resolved when new data is added"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceUnspecified",
        "id": 3916646466,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "One of the data fields contains an error. The error will be considered resolved when the value of the field changes"
        },
        {
          "name": "field_name",
          "value": "Field name"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceDataField",
        "id": 3986316520,
        "params": [
          {
            "name": "field_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The front side of the document contains an error. The error will be considered resolved when the file with the front side changes"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceFrontSide",
        "id": 1895658292,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The reverse side of the document contains an error. The error will be considered resolved when the file with the reverse side changes"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceReverseSide",
        "id": 1918630391,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The selfie with the document contains an error. The error will be considered resolved when the file with the selfie changes"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceSelfie",
        "id": 3497923624,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "One of files with the translation of the document contains an error. The error will be considered resolved when the file changes"
        },
        {
          "name": "file_index",
          "value": "Index of a file with the error"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceTranslationFile",
        "id": 3605346068,
        "params": [
          {
            "name": "file_index",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The translation of the document contains an error. The error will be considered resolved when the list of translation files changes"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceTranslationFiles",
        "id": 581280796,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file contains an error. The error will be considered resolved when the file changes"
        },
        {
          "name": "file_index",
          "value": "Index of a file with the error"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceFile",
        "id": 2020358960,
        "params": [
          {
            "name": "file_index",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of attached files contains an error. The error will be considered resolved when the list of files changes"
        }
      ],
      "definition": {
        "name": "passportElementErrorSourceFiles",
        "id": 1894164178,
        "type": {
          "name": "PassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the description of an error in a Telegram Passport element"
        },
        {
          "name": "type",
          "value": "Type of the Telegram Passport element which has the error"
        },
        {
          "name": "message",
          "value": "Error message"
        },
        {
          "name": "source",
          "value": "Error source"
        }
      ],
      "definition": {
        "name": "passportElementError",
        "id": 2433064901,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          },
          {
            "name": "message",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "source",
            "type": {
              "name": "PassportElementErrorSource"
            }
          }
        ],
        "type": {
          "name": "PassportElementError"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a Telegram Passport element that was requested by a service"
        },
        {
          "name": "type",
          "value": "Type of the element"
        },
        {
          "name": "is_selfie_required",
          "value": "True, if a selfie is required with the identity document"
        },
        {
          "name": "is_translation_required",
          "value": "True, if a certified English translation is required with the document"
        },
        {
          "name": "is_native_name_required",
          "value": "True, if personal details must include the user's name in the language of their country of residence"
        }
      ],
      "definition": {
        "name": "passportSuitableElement",
        "id": 3505947420,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          },
          {
            "name": "is_selfie_required",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_translation_required",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_native_name_required",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PassportSuitableElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a description of the required Telegram Passport element that was requested by a service"
        },
        {
          "name": "suitable_elements",
          "value": "List of Telegram Passport elements any of which is enough to provide"
        }
      ],
      "definition": {
        "name": "passportRequiredElement",
        "id": 4071425533,
        "params": [
          {
            "name": "suitable_elements",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "passportSuitableElement",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PassportRequiredElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a Telegram Passport authorization form that was requested"
        },
        {
          "name": "id",
          "value": "Unique identifier of the authorization form"
        },
        {
          "name": "required_elements",
          "value": "Information about the Telegram Passport elements that must be provided to complete the form"
        },
        {
          "name": "privacy_policy_url",
          "value": "URL for the privacy policy of the service; may be empty"
        }
      ],
      "definition": {
        "name": "passportAuthorizationForm",
        "id": 1071811760,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "required_elements",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "passportRequiredElement",
                "bare": true
              }
            }
          },
          {
            "name": "privacy_policy_url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportAuthorizationForm"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a Telegram Passport elements and corresponding errors"
        },
        {
          "name": "elements",
          "value": "Telegram Passport elements"
        },
        {
          "name": "errors",
          "value": "Errors in the elements that are already available"
        }
      ],
      "definition": {
        "name": "passportElementsWithErrors",
        "id": 1133320895,
        "params": [
          {
            "name": "elements",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PassportElement"
              }
            }
          },
          {
            "name": "errors",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "passportElementError",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PassportElementsWithErrors"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains encrypted Telegram Passport data credentials"
        },
        {
          "name": "data",
          "value": "The encrypted credentials"
        },
        {
          "name": "hash",
          "value": "The decrypted data hash"
        },
        {
          "name": "secret",
          "value": "Secret for data decryption, encrypted with the service's public key"
        }
      ],
      "definition": {
        "name": "encryptedCredentials",
        "id": 1331106766,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "secret",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "EncryptedCredentials"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about an encrypted Telegram Passport element; for bots only"
        },
        {
          "name": "type",
          "value": "Type of Telegram Passport element"
        },
        {
          "name": "data",
          "value": "Encrypted JSON-encoded data about the user"
        },
        {
          "name": "front_side",
          "value": "The front side of an identity document"
        },
        {
          "name": "reverse_side",
          "value": "The reverse side of an identity document; may be null"
        },
        {
          "name": "selfie",
          "value": "Selfie with the document; may be null"
        },
        {
          "name": "translation",
          "value": "List of files containing a certified English translation of the document"
        },
        {
          "name": "files",
          "value": "List of attached files"
        },
        {
          "name": "value",
          "value": "Unencrypted data, phone number or email address"
        },
        {
          "name": "hash",
          "value": "Hash of the entire element"
        }
      ],
      "definition": {
        "name": "encryptedPassportElement",
        "id": 40030792,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "front_side",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "reverse_side",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "selfie",
            "type": {
              "name": "datedFile",
              "bare": true
            }
          },
          {
            "name": "translation",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "datedFile",
                "bare": true
              }
            }
          },
          {
            "name": "files",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "datedFile",
                "bare": true
              }
            }
          },
          {
            "name": "value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "hash",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "EncryptedPassportElement"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The element contains an error in an unspecified place. The error will be considered resolved when new data is added"
        },
        {
          "name": "element_hash",
          "value": "Current hash of the entire element"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceUnspecified",
        "id": 267230319,
        "params": [
          {
            "name": "element_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A data field contains an error. The error is considered resolved when the field's value changes"
        },
        {
          "name": "field_name",
          "value": "Field name"
        },
        {
          "name": "data_hash",
          "value": "Current data hash"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceDataField",
        "id": 3868172294,
        "params": [
          {
            "name": "field_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "data_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The front side of the document contains an error. The error is considered resolved when the file with the front side of the document changes"
        },
        {
          "name": "file_hash",
          "value": "Current hash of the file containing the front side"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceFrontSide",
        "id": 588023741,
        "params": [
          {
            "name": "file_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The reverse side of the document contains an error. The error is considered resolved when the file with the reverse side of the document changes"
        },
        {
          "name": "file_hash",
          "value": "Current hash of the file containing the reverse side"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceReverseSide",
        "id": 413072891,
        "params": [
          {
            "name": "file_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The selfie contains an error. The error is considered resolved when the file with the selfie changes"
        },
        {
          "name": "file_hash",
          "value": "Current hash of the file containing the selfie"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceSelfie",
        "id": 3521391768,
        "params": [
          {
            "name": "file_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "One of the files containing the translation of the document contains an error. The error is considered resolved when the file with the translation changes"
        },
        {
          "name": "file_hash",
          "value": "Current hash of the file containing the translation"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceTranslationFile",
        "id": 505842299,
        "params": [
          {
            "name": "file_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The translation of the document contains an error. The error is considered resolved when the list of files changes"
        },
        {
          "name": "file_hashes",
          "value": "Current hashes of all files with the translation"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceTranslationFiles",
        "id": 4015292827,
        "params": [
          {
            "name": "file_hashes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "bytes",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file contains an error. The error is considered resolved when the file changes"
        },
        {
          "name": "file_hash",
          "value": "Current hash of the file which has the error"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceFile",
        "id": 3996474827,
        "params": [
          {
            "name": "file_hash",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of attached files contains an error. The error is considered resolved when the file list changes"
        },
        {
          "name": "file_hashes",
          "value": "Current hashes of all attached files"
        }
      ],
      "definition": {
        "name": "inputPassportElementErrorSourceFiles",
        "id": 1731461590,
        "params": [
          {
            "name": "file_hashes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "bytes",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "InputPassportElementErrorSource"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the description of an error in a Telegram Passport element; for bots only"
        },
        {
          "name": "type",
          "value": "Type of Telegram Passport element that has the error"
        },
        {
          "name": "message",
          "value": "Error message"
        },
        {
          "name": "source",
          "value": "Error source"
        }
      ],
      "definition": {
        "name": "inputPassportElementError",
        "id": 285756898,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          },
          {
            "name": "message",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "source",
            "type": {
              "name": "InputPassportElementErrorSource"
            }
          }
        ],
        "type": {
          "name": "InputPassportElementError"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text message"
        },
        {
          "name": "text",
          "value": "Text of the message"
        },
        {
          "name": "web_page",
          "value": "A preview of the web page that's mentioned in the text; may be null"
        }
      ],
      "definition": {
        "name": "messageText",
        "id": 1989037971,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "web_page",
            "type": {
              "name": "webPage",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animation message (GIF-style)."
        },
        {
          "name": "animation",
          "value": "The animation description"
        },
        {
          "name": "caption",
          "value": "Animation caption"
        },
        {
          "name": "is_secret",
          "value": "True, if the animation thumbnail must be blurred and the animation must be shown only while tapped"
        }
      ],
      "definition": {
        "name": "messageAnimation",
        "id": 1306939396,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An audio message"
        },
        {
          "name": "audio",
          "value": "The audio description"
        },
        {
          "name": "caption",
          "value": "Audio caption"
        }
      ],
      "definition": {
        "name": "messageAudio",
        "id": 276722716,
        "params": [
          {
            "name": "audio",
            "type": {
              "name": "audio",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A document message (general file)"
        },
        {
          "name": "document",
          "value": "The document description"
        },
        {
          "name": "caption",
          "value": "Document caption"
        }
      ],
      "definition": {
        "name": "messageDocument",
        "id": 596945783,
        "params": [
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A photo message"
        },
        {
          "name": "photo",
          "value": "The photo description"
        },
        {
          "name": "caption",
          "value": "Photo caption"
        },
        {
          "name": "is_secret",
          "value": "True, if the photo must be blurred and must be shown only while tapped"
        }
      ],
      "definition": {
        "name": "messagePhoto",
        "id": 2443572122,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An expired photo message (self-destructed after TTL has elapsed)"
        }
      ],
      "definition": {
        "name": "messageExpiredPhoto",
        "id": 2890325495,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A sticker message"
        },
        {
          "name": "sticker",
          "value": "The sticker description"
        }
      ],
      "definition": {
        "name": "messageSticker",
        "id": 1779022878,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "sticker",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video message"
        },
        {
          "name": "video",
          "value": "The video description"
        },
        {
          "name": "caption",
          "value": "Video caption"
        },
        {
          "name": "is_secret",
          "value": "True, if the video thumbnail must be blurred and the video must be shown only while tapped"
        }
      ],
      "definition": {
        "name": "messageVideo",
        "id": 2021281344,
        "params": [
          {
            "name": "video",
            "type": {
              "name": "video",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An expired video message (self-destructed after TTL has elapsed)"
        }
      ],
      "definition": {
        "name": "messageExpiredVideo",
        "id": 3082757315,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video note message"
        },
        {
          "name": "video_note",
          "value": "The video note description"
        },
        {
          "name": "is_viewed",
          "value": "True, if at least one of the recipients has viewed the video note"
        },
        {
          "name": "is_secret",
          "value": "True, if the video note thumbnail must be blurred and the video note must be shown only while tapped"
        }
      ],
      "definition": {
        "name": "messageVideoNote",
        "id": 963323014,
        "params": [
          {
            "name": "video_note",
            "type": {
              "name": "videoNote",
              "bare": true
            }
          },
          {
            "name": "is_viewed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A voice note message"
        },
        {
          "name": "voice_note",
          "value": "The voice note description"
        },
        {
          "name": "caption",
          "value": "Voice note caption"
        },
        {
          "name": "is_listened",
          "value": "True, if at least one of the recipients has listened to the voice note"
        }
      ],
      "definition": {
        "name": "messageVoiceNote",
        "id": 527777781,
        "params": [
          {
            "name": "voice_note",
            "type": {
              "name": "voiceNote",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "is_listened",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a location"
        },
        {
          "name": "location",
          "value": "The location description"
        },
        {
          "name": "live_period",
          "value": "Time relative to the message send date, for which the location can be updated, in seconds"
        },
        {
          "name": "expires_in",
          "value": "Left time for which the location can be updated, in seconds. updateMessageContent is not sent when this field changes"
        },
        {
          "name": "heading",
          "value": "For live locations, a direction in which the location moves, in degrees; 1-360. If 0 the direction is unknown"
        },
        {
          "name": "proximity_alert_radius",
          "value": "For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). 0 if the notification is disabled. Available only for the message sender"
        }
      ],
      "definition": {
        "name": "messageLocation",
        "id": 303973492,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "live_period",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "expires_in",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "heading",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "proximity_alert_radius",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with information about a venue"
        },
        {
          "name": "venue",
          "value": "The venue description"
        }
      ],
      "definition": {
        "name": "messageVenue",
        "id": 2148475253,
        "params": [
          {
            "name": "venue",
            "type": {
              "name": "venue",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a user contact"
        },
        {
          "name": "contact",
          "value": "The contact description"
        }
      ],
      "definition": {
        "name": "messageContact",
        "id": 3782282330,
        "params": [
          {
            "name": "contact",
            "type": {
              "name": "contact",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A dice message. The dice value is randomly generated by the server"
        },
        {
          "name": "initial_state",
          "value": "The animated stickers with the initial dice animation; may be null if unknown. updateMessageContent will be sent when the sticker became known"
        },
        {
          "name": "final_state",
          "value": "The animated stickers with the final dice animation; may be null if unknown. updateMessageContent will be sent when the sticker became known"
        },
        {
          "name": "emoji",
          "value": "Emoji on which the dice throw animation is based"
        },
        {
          "name": "value",
          "value": "The dice value. If the value is 0, the dice don't have final state yet"
        },
        {
          "name": "success_animation_frame_number",
          "value": "Number of frame after which a success animation like a shower of confetti needs to be shown on updateMessageSendSucceeded"
        }
      ],
      "definition": {
        "name": "messageDice",
        "id": 1115779641,
        "params": [
          {
            "name": "initial_state",
            "type": {
              "name": "DiceStickers"
            }
          },
          {
            "name": "final_state",
            "type": {
              "name": "DiceStickers"
            }
          },
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "value",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "success_animation_frame_number",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a game"
        },
        {
          "name": "game",
          "value": "The game description"
        }
      ],
      "definition": {
        "name": "messageGame",
        "id": 4225526134,
        "params": [
          {
            "name": "game",
            "type": {
              "name": "game",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a poll"
        },
        {
          "name": "poll",
          "value": "The poll description"
        }
      ],
      "definition": {
        "name": "messagePoll",
        "id": 3632837197,
        "params": [
          {
            "name": "poll",
            "type": {
              "name": "poll",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with an invoice from a bot"
        },
        {
          "name": "title",
          "value": "Product title"
        },
        {
          "name": "param_description",
          "value": "Product description"
        },
        {
          "name": "photo",
          "value": "Product photo; may be null"
        },
        {
          "name": "currency",
          "value": "Currency for the product price"
        },
        {
          "name": "total_amount",
          "value": "Product total price in the minimal quantity of the currency"
        },
        {
          "name": "start_parameter",
          "value": "Unique invoice bot start_parameter. To share an invoice use the URL https://t.me/{bot_username}?start={start_parameter}"
        },
        {
          "name": "is_test",
          "value": "True, if the invoice is a test invoice"
        },
        {
          "name": "need_shipping_address",
          "value": "True, if the shipping address should be specified"
        },
        {
          "name": "receipt_message_id",
          "value": "The identifier of the message with the receipt, after the product has been purchased"
        }
      ],
      "definition": {
        "name": "messageInvoice",
        "id": 2378295820,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "currency",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "total_amount",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "start_parameter",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_test",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_shipping_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "receipt_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with information about an ended call"
        },
        {
          "name": "is_video",
          "value": "True, if the call was a video call"
        },
        {
          "name": "discard_reason",
          "value": "Reason why the call was discarded"
        },
        {
          "name": "duration",
          "value": "Call duration, in seconds"
        }
      ],
      "definition": {
        "name": "messageCall",
        "id": 538893824,
        "params": [
          {
            "name": "is_video",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "discard_reason",
            "type": {
              "name": "CallDiscardReason"
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A newly created basic group"
        },
        {
          "name": "title",
          "value": "Title of the basic group"
        },
        {
          "name": "member_user_ids",
          "value": "User identifiers of members in the basic group"
        }
      ],
      "definition": {
        "name": "messageBasicGroupChatCreate",
        "id": 3634490074,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "member_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A newly created supergroup or channel"
        },
        {
          "name": "title",
          "value": "Title of the supergroup or channel"
        }
      ],
      "definition": {
        "name": "messageSupergroupChatCreate",
        "id": 3860641563,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An updated chat title"
        },
        {
          "name": "title",
          "value": "New chat title"
        }
      ],
      "definition": {
        "name": "messageChatChangeTitle",
        "id": 748272449,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An updated chat photo"
        },
        {
          "name": "photo",
          "value": "New chat photo"
        }
      ],
      "definition": {
        "name": "messageChatChangePhoto",
        "id": 3481552203,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A deleted chat photo"
        }
      ],
      "definition": {
        "name": "messageChatDeletePhoto",
        "id": 4110592487,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New chat members were added"
        },
        {
          "name": "member_user_ids",
          "value": "User identifiers of the new members"
        }
      ],
      "definition": {
        "name": "messageChatAddMembers",
        "id": 1297394752,
        "params": [
          {
            "name": "member_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new member joined the chat by invite link"
        }
      ],
      "definition": {
        "name": "messageChatJoinByLink",
        "id": 1846493311,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat member was deleted"
        },
        {
          "name": "user_id",
          "value": "User identifier of the deleted chat member"
        }
      ],
      "definition": {
        "name": "messageChatDeleteMember",
        "id": 1164414043,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A basic group was upgraded to a supergroup and was deactivated as the result"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup to which the basic group was upgraded"
        }
      ],
      "definition": {
        "name": "messageChatUpgradeTo",
        "id": 1957816681,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A supergroup has been created from a basic group"
        },
        {
          "name": "title",
          "value": "Title of the newly created supergroup"
        },
        {
          "name": "basic_group_id",
          "value": "The identifier of the original basic group"
        }
      ],
      "definition": {
        "name": "messageChatUpgradeFrom",
        "id": 1642272558,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message has been pinned"
        },
        {
          "name": "message_id",
          "value": "Identifier of the pinned message, can be an identifier of a deleted message or 0"
        }
      ],
      "definition": {
        "name": "messagePinMessage",
        "id": 953503801,
        "params": [
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A screenshot of a message in the chat has been taken"
        }
      ],
      "definition": {
        "name": "messageScreenshotTaken",
        "id": 2729995691,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The TTL (Time To Live) setting messages in a secret chat has been changed"
        },
        {
          "name": "ttl",
          "value": "New TTL"
        }
      ],
      "definition": {
        "name": "messageChatSetTtl",
        "id": 1810060209,
        "params": [
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A non-standard action has happened in the chat"
        },
        {
          "name": "text",
          "value": "Message text to be shown in the chat"
        }
      ],
      "definition": {
        "name": "messageCustomServiceAction",
        "id": 1435879282,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new high score was achieved in a game"
        },
        {
          "name": "game_message_id",
          "value": "Identifier of the message with the game, can be an identifier of a deleted message"
        },
        {
          "name": "game_id",
          "value": "Identifier of the game; may be different from the games presented in the message with the game"
        },
        {
          "name": "score",
          "value": "New score"
        }
      ],
      "definition": {
        "name": "messageGameScore",
        "id": 1344904575,
        "params": [
          {
            "name": "game_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "game_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "score",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A payment has been completed"
        },
        {
          "name": "invoice_message_id",
          "value": "Identifier of the message with the corresponding invoice; can be an identifier of a deleted message"
        },
        {
          "name": "currency",
          "value": "Currency for the price of the product"
        },
        {
          "name": "total_amount",
          "value": "Total price for the product, in the minimal quantity of the currency"
        }
      ],
      "definition": {
        "name": "messagePaymentSuccessful",
        "id": 3699004303,
        "params": [
          {
            "name": "invoice_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "currency",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "total_amount",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A payment has been completed; for bots only"
        },
        {
          "name": "invoice_message_id",
          "value": "Identifier of the message with the corresponding invoice; can be an identifier of a deleted message"
        },
        {
          "name": "currency",
          "value": "Currency for price of the product"
        },
        {
          "name": "total_amount",
          "value": "Total price for the product, in the minimal quantity of the currency"
        },
        {
          "name": "invoice_payload",
          "value": "Invoice payload"
        },
        {
          "name": "shipping_option_id",
          "value": "Identifier of the shipping option chosen by the user; may be empty if not applicable"
        },
        {
          "name": "order_info",
          "value": "Information about the order; may be null"
        },
        {
          "name": "telegram_payment_charge_id",
          "value": "Telegram payment identifier"
        },
        {
          "name": "provider_payment_charge_id",
          "value": "Provider payment identifier"
        }
      ],
      "definition": {
        "name": "messagePaymentSuccessfulBot",
        "id": 3882656600,
        "params": [
          {
            "name": "invoice_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "currency",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "total_amount",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "invoice_payload",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "shipping_option_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "order_info",
            "type": {
              "name": "orderInfo",
              "bare": true
            }
          },
          {
            "name": "telegram_payment_charge_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "provider_payment_charge_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A contact has registered with Telegram"
        }
      ],
      "definition": {
        "name": "messageContactRegistered",
        "id": 2792946943,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The current user has connected a website by logging in using Telegram Login Widget on it"
        },
        {
          "name": "domain_name",
          "value": "Domain name of the connected website"
        }
      ],
      "definition": {
        "name": "messageWebsiteConnected",
        "id": 3220415496,
        "params": [
          {
            "name": "domain_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Telegram Passport data has been sent"
        },
        {
          "name": "types",
          "value": "List of Telegram Passport element types sent"
        }
      ],
      "definition": {
        "name": "messagePassportDataSent",
        "id": 650505579,
        "params": [
          {
            "name": "types",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PassportElementType"
              }
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Telegram Passport data has been received; for bots only"
        },
        {
          "name": "elements",
          "value": "List of received Telegram Passport elements"
        },
        {
          "name": "credentials",
          "value": "Encrypted data credentials"
        }
      ],
      "definition": {
        "name": "messagePassportDataReceived",
        "id": 3770234553,
        "params": [
          {
            "name": "elements",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "encryptedPassportElement",
                "bare": true
              }
            }
          },
          {
            "name": "credentials",
            "type": {
              "name": "encryptedCredentials",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A user in the chat came within proximity alert range"
        },
        {
          "name": "traveler",
          "value": "The user or chat, which triggered the proximity alert"
        },
        {
          "name": "watcher",
          "value": "The user or chat, which subscribed for the proximity alert"
        },
        {
          "name": "distance",
          "value": "The distance between the users"
        }
      ],
      "definition": {
        "name": "messageProximityAlertTriggered",
        "id": 2983349734,
        "params": [
          {
            "name": "traveler",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "watcher",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "distance",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Message content that is not supported in the current TDLib version"
        }
      ],
      "definition": {
        "name": "messageUnsupported",
        "id": 2478241157,
        "type": {
          "name": "MessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mention of a user by their username"
        }
      ],
      "definition": {
        "name": "textEntityTypeMention",
        "id": 934535013,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A hashtag text, beginning with \"#\""
        }
      ],
      "definition": {
        "name": "textEntityTypeHashtag",
        "id": 3271008989,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A cashtag text, beginning with \"$\" and consisting of capital english letters (i.e. \"$USD\")"
        }
      ],
      "definition": {
        "name": "textEntityTypeCashtag",
        "id": 1222915915,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A bot command, beginning with \"/\". This shouldn't be highlighted if there are no bots in the chat"
        }
      ],
      "definition": {
        "name": "textEntityTypeBotCommand",
        "id": 3143969715,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An HTTP URL"
        }
      ],
      "definition": {
        "name": "textEntityTypeUrl",
        "id": 2982204540,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An email address"
        }
      ],
      "definition": {
        "name": "textEntityTypeEmailAddress",
        "id": 1425545249,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A phone number"
        }
      ],
      "definition": {
        "name": "textEntityTypePhoneNumber",
        "id": 3134827050,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A bank card number. The getBankCardInfo method can be used to get information about the bank card"
        }
      ],
      "definition": {
        "name": "textEntityTypeBankCardNumber",
        "id": 105986320,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A bold text"
        }
      ],
      "definition": {
        "name": "textEntityTypeBold",
        "id": 3166757296,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An italic text"
        }
      ],
      "definition": {
        "name": "textEntityTypeItalic",
        "id": 4176713309,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An underlined text"
        }
      ],
      "definition": {
        "name": "textEntityTypeUnderline",
        "id": 792317842,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A strikethrough text"
        }
      ],
      "definition": {
        "name": "textEntityTypeStrikethrough",
        "id": 961529082,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Text that must be formatted as if inside a code HTML tag"
        }
      ],
      "definition": {
        "name": "textEntityTypeCode",
        "id": 3320432970,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Text that must be formatted as if inside a pre HTML tag"
        }
      ],
      "definition": {
        "name": "textEntityTypePre",
        "id": 1648958606,
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Text that must be formatted as if inside pre, and code HTML tags"
        },
        {
          "name": "language",
          "value": "Programming language of the code; as defined by the sender"
        }
      ],
      "definition": {
        "name": "textEntityTypePreCode",
        "id": 3349641899,
        "params": [
          {
            "name": "language",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text description shown instead of a raw URL"
        },
        {
          "name": "url",
          "value": "HTTP or tg:// URL to be opened when the link is clicked"
        }
      ],
      "definition": {
        "name": "textEntityTypeTextUrl",
        "id": 445719651,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text shows instead of a raw mention of the user (e.g., when the user has no username)"
        },
        {
          "name": "user_id",
          "value": "Identifier of the mentioned user"
        }
      ],
      "definition": {
        "name": "textEntityTypeMentionName",
        "id": 3503450205,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TextEntityType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A thumbnail to be sent along with a file; must be in JPEG or WEBP format for stickers, and less than 200 KB in size"
        },
        {
          "name": "thumbnail",
          "value": "Thumbnail file to send. Sending thumbnails by file_id is currently not supported"
        },
        {
          "name": "width",
          "value": "Thumbnail width, usually shouldn't exceed 320. Use 0 if unknown"
        },
        {
          "name": "height",
          "value": "Thumbnail height, usually shouldn't exceed 320. Use 0 if unknown"
        }
      ],
      "definition": {
        "name": "inputThumbnail",
        "id": 1582387236,
        "params": [
          {
            "name": "thumbnail",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputThumbnail"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message will be sent at the specified date"
        },
        {
          "name": "send_date",
          "value": "Date the message will be sent. The date must be within 367 days in the future"
        }
      ],
      "definition": {
        "name": "messageSchedulingStateSendAtDate",
        "id": 2809397223,
        "params": [
          {
            "name": "send_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageSchedulingState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message will be sent when the peer will be online. Applicable to private chats only and when the exact online status of the peer is known"
        }
      ],
      "definition": {
        "name": "messageSchedulingStateSendWhenOnline",
        "id": 2092947464,
        "type": {
          "name": "MessageSchedulingState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Options to be used when a message is sent"
        },
        {
          "name": "disable_notification",
          "value": "Pass true to disable notification for the message"
        },
        {
          "name": "from_background",
          "value": "Pass true if the message is sent from the background"
        },
        {
          "name": "scheduling_state",
          "value": "Message scheduling state. Messages sent to a secret chat, live location messages and self-destructing messages can't be scheduled"
        }
      ],
      "definition": {
        "name": "messageSendOptions",
        "id": 914544314,
        "params": [
          {
            "name": "disable_notification",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "from_background",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "scheduling_state",
            "type": {
              "name": "MessageSchedulingState"
            }
          }
        ],
        "type": {
          "name": "MessageSendOptions"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Options to be used when a message content is copied without a link to the original message"
        },
        {
          "name": "send_copy",
          "value": "True, if content of the message needs to be copied without a link to the original message. Always true if the message is forwarded to a secret chat"
        },
        {
          "name": "replace_caption",
          "value": "True, if media caption of the message copy needs to be replaced. Ignored if send_copy is false"
        },
        {
          "name": "new_caption",
          "value": "New message caption. Ignored if replace_caption is false"
        }
      ],
      "definition": {
        "name": "messageCopyOptions",
        "id": 1208442937,
        "params": [
          {
            "name": "send_copy",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "replace_caption",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "new_caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageCopyOptions"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text message"
        },
        {
          "name": "text",
          "value": "Formatted text to be sent; 1-GetOption(\"message_text_length_max\") characters. Only Bold, Italic, Underline, Strikethrough, Code, Pre, PreCode, TextUrl and MentionName entities are allowed to be specified manually"
        },
        {
          "name": "disable_web_page_preview",
          "value": "True, if rich web page previews for URLs in the message text should be disabled"
        },
        {
          "name": "clear_draft",
          "value": "True, if a chat message draft should be deleted"
        }
      ],
      "definition": {
        "name": "inputMessageText",
        "id": 247050392,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "disable_web_page_preview",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "clear_draft",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animation message (GIF-style)."
        },
        {
          "name": "animation",
          "value": "Animation file to be sent"
        },
        {
          "name": "thumbnail",
          "value": "Animation thumbnail, if available"
        },
        {
          "name": "added_sticker_file_ids",
          "value": "File identifiers of the stickers added to the animation, if applicable"
        },
        {
          "name": "duration",
          "value": "Duration of the animation, in seconds"
        },
        {
          "name": "width",
          "value": "Width of the animation; may be replaced by the server"
        },
        {
          "name": "height",
          "value": "Height of the animation; may be replaced by the server"
        },
        {
          "name": "caption",
          "value": "Animation caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "inputMessageAnimation",
        "id": 290954490,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "added_sticker_file_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An audio message"
        },
        {
          "name": "audio",
          "value": "Audio file to be sent"
        },
        {
          "name": "album_cover_thumbnail",
          "value": "Thumbnail of the cover for the album, if available"
        },
        {
          "name": "duration",
          "value": "Duration of the audio, in seconds; may be replaced by the server"
        },
        {
          "name": "title",
          "value": "Title of the audio; 0-64 characters; may be replaced by the server"
        },
        {
          "name": "performer",
          "value": "Performer of the audio; 0-64 characters, may be replaced by the server"
        },
        {
          "name": "caption",
          "value": "Audio caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "inputMessageAudio",
        "id": 3668181170,
        "params": [
          {
            "name": "audio",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "album_cover_thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "performer",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A document message (general file)"
        },
        {
          "name": "document",
          "value": "Document to be sent"
        },
        {
          "name": "thumbnail",
          "value": "Document thumbnail, if available"
        },
        {
          "name": "disable_content_type_detection",
          "value": "If true, automatic file type detection will be disabled and the document will be always sent as file. Always true for files sent to secret chats"
        },
        {
          "name": "caption",
          "value": "Document caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "inputMessageDocument",
        "id": 1633383097,
        "params": [
          {
            "name": "document",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "disable_content_type_detection",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A photo message"
        },
        {
          "name": "photo",
          "value": "Photo to send"
        },
        {
          "name": "thumbnail",
          "value": "Photo thumbnail to be sent, this is sent to the other party in secret chats only"
        },
        {
          "name": "added_sticker_file_ids",
          "value": "File identifiers of the stickers added to the photo, if applicable"
        },
        {
          "name": "width",
          "value": "Photo width"
        },
        {
          "name": "height",
          "value": "Photo height"
        },
        {
          "name": "caption",
          "value": "Photo caption; 0-GetOption(\"message_caption_length_max\") characters"
        },
        {
          "name": "ttl",
          "value": "Photo TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats"
        }
      ],
      "definition": {
        "name": "inputMessagePhoto",
        "id": 1926816477,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "added_sticker_file_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A sticker message"
        },
        {
          "name": "sticker",
          "value": "Sticker to be sent"
        },
        {
          "name": "thumbnail",
          "value": "Sticker thumbnail, if available"
        },
        {
          "name": "width",
          "value": "Sticker width"
        },
        {
          "name": "height",
          "value": "Sticker height"
        }
      ],
      "definition": {
        "name": "inputMessageSticker",
        "id": 740776325,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video message"
        },
        {
          "name": "video",
          "value": "Video to be sent"
        },
        {
          "name": "thumbnail",
          "value": "Video thumbnail, if available"
        },
        {
          "name": "added_sticker_file_ids",
          "value": "File identifiers of the stickers added to the video, if applicable"
        },
        {
          "name": "duration",
          "value": "Duration of the video, in seconds"
        },
        {
          "name": "width",
          "value": "Video width"
        },
        {
          "name": "height",
          "value": "Video height"
        },
        {
          "name": "supports_streaming",
          "value": "True, if the video should be tried to be streamed"
        },
        {
          "name": "caption",
          "value": "Video caption; 0-GetOption(\"message_caption_length_max\") characters"
        },
        {
          "name": "ttl",
          "value": "Video TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats"
        }
      ],
      "definition": {
        "name": "inputMessageVideo",
        "id": 2031255985,
        "params": [
          {
            "name": "video",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "added_sticker_file_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "supports_streaming",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video note message"
        },
        {
          "name": "video_note",
          "value": "Video note to be sent"
        },
        {
          "name": "thumbnail",
          "value": "Video thumbnail, if available"
        },
        {
          "name": "duration",
          "value": "Duration of the video, in seconds"
        },
        {
          "name": "length",
          "value": "Video width and height; must be positive and not greater than 640"
        }
      ],
      "definition": {
        "name": "inputMessageVideoNote",
        "id": 279108859,
        "params": [
          {
            "name": "video_note",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "inputThumbnail",
              "bare": true
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "length",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A voice note message"
        },
        {
          "name": "voice_note",
          "value": "Voice note to be sent"
        },
        {
          "name": "duration",
          "value": "Duration of the voice note, in seconds"
        },
        {
          "name": "waveform",
          "value": "Waveform representation of the voice note, in 5-bit format"
        },
        {
          "name": "caption",
          "value": "Voice note caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "inputMessageVoiceNote",
        "id": 2136519657,
        "params": [
          {
            "name": "voice_note",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "waveform",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a location"
        },
        {
          "name": "location",
          "value": "Location to be sent"
        },
        {
          "name": "live_period",
          "value": "Period for which the location can be updated, in seconds; should be between 60 and 86400 for a live location and 0 otherwise"
        },
        {
          "name": "heading",
          "value": "For live locations, a direction in which the location moves, in degrees; 1-360. Pass 0 if unknown"
        },
        {
          "name": "proximity_alert_radius",
          "value": "For live locations, a maximum distance to another chat member for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled. Can't be enabled in channels and Saved Messages"
        }
      ],
      "definition": {
        "name": "inputMessageLocation",
        "id": 648735088,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "live_period",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "heading",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "proximity_alert_radius",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with information about a venue"
        },
        {
          "name": "venue",
          "value": "Venue to send"
        }
      ],
      "definition": {
        "name": "inputMessageVenue",
        "id": 1447926269,
        "params": [
          {
            "name": "venue",
            "type": {
              "name": "venue",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message containing a user contact"
        },
        {
          "name": "contact",
          "value": "Contact to send"
        }
      ],
      "definition": {
        "name": "inputMessageContact",
        "id": 3312520447,
        "params": [
          {
            "name": "contact",
            "type": {
              "name": "contact",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A dice message"
        },
        {
          "name": "emoji",
          "value": "Emoji on which the dice throw animation is based"
        },
        {
          "name": "clear_draft",
          "value": "True, if a chat message draft should be deleted"
        }
      ],
      "definition": {
        "name": "inputMessageDice",
        "id": 841574313,
        "params": [
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "clear_draft",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a game; not supported for channels or secret chats"
        },
        {
          "name": "bot_user_id",
          "value": "User identifier of the bot that owns the game"
        },
        {
          "name": "game_short_name",
          "value": "Short name of the game"
        }
      ],
      "definition": {
        "name": "inputMessageGame",
        "id": 2566966382,
        "params": [
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "game_short_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with an invoice; can be used only by bots and only in private chats"
        },
        {
          "name": "invoice",
          "value": "Invoice"
        },
        {
          "name": "title",
          "value": "Product title; 1-32 characters"
        },
        {
          "name": "param_description",
          "value": "Product description; 0-255 characters"
        },
        {
          "name": "photo_url",
          "value": "Product photo URL; optional"
        },
        {
          "name": "photo_size",
          "value": "Product photo size"
        },
        {
          "name": "photo_width",
          "value": "Product photo width"
        },
        {
          "name": "photo_height",
          "value": "Product photo height"
        },
        {
          "name": "payload",
          "value": "The invoice payload"
        },
        {
          "name": "provider_token",
          "value": "Payment provider token"
        },
        {
          "name": "provider_data",
          "value": "JSON-encoded data about the invoice, which will be shared with the payment provider"
        },
        {
          "name": "start_parameter",
          "value": "Unique invoice bot start_parameter for the generation of this invoice"
        }
      ],
      "definition": {
        "name": "inputMessageInvoice",
        "id": 1038812175,
        "params": [
          {
            "name": "invoice",
            "type": {
              "name": "invoice",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "photo_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "photo_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "payload",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "provider_token",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "provider_data",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "start_parameter",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a poll. Polls can't be sent to secret chats. Polls can be sent only to a private chat with a bot"
        },
        {
          "name": "question",
          "value": "Poll question, 1-255 characters (up to 300 characters for bots)"
        },
        {
          "name": "options",
          "value": "List of poll answer options, 2-10 strings 1-100 characters each"
        },
        {
          "name": "is_anonymous",
          "value": "True, if the poll voters are anonymous. Non-anonymous polls can't be sent or forwarded to channels"
        },
        {
          "name": "type",
          "value": "Type of the poll"
        },
        {
          "name": "open_period",
          "value": "Amount of time the poll will be active after creation, in seconds; for bots only"
        },
        {
          "name": "close_date",
          "value": "Point in time (Unix timestamp) when the poll will be automatically closed; for bots only"
        },
        {
          "name": "is_closed",
          "value": "True, if the poll needs to be sent already closed; for bots only"
        }
      ],
      "definition": {
        "name": "inputMessagePoll",
        "id": 266835824,
        "params": [
          {
            "name": "question",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "options",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          },
          {
            "name": "is_anonymous",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "PollType"
            }
          },
          {
            "name": "open_period",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "close_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_closed",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A forwarded message"
        },
        {
          "name": "from_chat_id",
          "value": "Identifier for the chat this forwarded message came from"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message to forward"
        },
        {
          "name": "in_game_share",
          "value": "True, if a game message should be shared within a launched game; applies only to game messages"
        },
        {
          "name": "copy_options",
          "value": "Options to be used to copy content of the message without a link to the original message"
        }
      ],
      "definition": {
        "name": "inputMessageForwarded",
        "id": 1696232440,
        "params": [
          {
            "name": "from_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "in_game_share",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "copy_options",
            "type": {
              "name": "messageCopyOptions",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all found messages, no filter is applied"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterEmpty",
        "id": 3425571639,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only animation messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterAnimation",
        "id": 4139253957,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only audio messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterAudio",
        "id": 867505275,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only document messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterDocument",
        "id": 1526331215,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only photo messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterPhoto",
        "id": 925932293,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only video messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterVideo",
        "id": 115538222,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only voice note messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterVoiceNote",
        "id": 1841439357,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only photo and video messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterPhotoAndVideo",
        "id": 1352130963,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only messages containing URLs"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterUrl",
        "id": 2466242955,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only messages containing chat photos"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterChatPhoto",
        "id": 3047215967,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only call messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterCall",
        "id": 1305231012,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only incoming call messages with missed/declined discard reasons"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterMissedCall",
        "id": 970663098,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only video note messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterVideoNote",
        "id": 564323321,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only voice and video note messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterVoiceAndVideoNote",
        "id": 664174819,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only messages with mentions of the current user, or messages that are replies to their messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterMention",
        "id": 2001258652,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only messages with unread mentions of the current user, or messages that are replies to their messages. When using this filter the results can't be additionally filtered by a query, a message thread or by the sending user"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterUnreadMention",
        "id": 4199198147,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only failed to send messages. This filter can be used only if the message database is used"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterFailedToSend",
        "id": 3698644732,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns only pinned messages"
        }
      ],
      "definition": {
        "name": "searchMessagesFilterPinned",
        "id": 371805512,
        "type": {
          "name": "SearchMessagesFilter"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is typing a message"
        }
      ],
      "definition": {
        "name": "chatActionTyping",
        "id": 380122167,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is recording a video"
        }
      ],
      "definition": {
        "name": "chatActionRecordingVideo",
        "id": 216553362,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is uploading a video"
        },
        {
          "name": "progress",
          "value": "Upload progress, as a percentage"
        }
      ],
      "definition": {
        "name": "chatActionUploadingVideo",
        "id": 1234185270,
        "params": [
          {
            "name": "progress",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is recording a voice note"
        }
      ],
      "definition": {
        "name": "chatActionRecordingVoiceNote",
        "id": 3486117238,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is uploading a voice note"
        },
        {
          "name": "progress",
          "value": "Upload progress, as a percentage"
        }
      ],
      "definition": {
        "name": "chatActionUploadingVoiceNote",
        "id": 3681323630,
        "params": [
          {
            "name": "progress",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is uploading a photo"
        },
        {
          "name": "progress",
          "value": "Upload progress, as a percentage"
        }
      ],
      "definition": {
        "name": "chatActionUploadingPhoto",
        "id": 654240583,
        "params": [
          {
            "name": "progress",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is uploading a document"
        },
        {
          "name": "progress",
          "value": "Upload progress, as a percentage"
        }
      ],
      "definition": {
        "name": "chatActionUploadingDocument",
        "id": 167884362,
        "params": [
          {
            "name": "progress",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is picking a location or venue to send"
        }
      ],
      "definition": {
        "name": "chatActionChoosingLocation",
        "id": 2277073700,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is picking a contact to send"
        }
      ],
      "definition": {
        "name": "chatActionChoosingContact",
        "id": 3072459800,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has started to play a game"
        }
      ],
      "definition": {
        "name": "chatActionStartPlayingGame",
        "id": 3429083132,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is recording a video note"
        }
      ],
      "definition": {
        "name": "chatActionRecordingVideoNote",
        "id": 16523393,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is uploading a video note"
        },
        {
          "name": "progress",
          "value": "Upload progress, as a percentage"
        }
      ],
      "definition": {
        "name": "chatActionUploadingVideoNote",
        "id": 1172364918,
        "params": [
          {
            "name": "progress",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has cancelled the previous action"
        }
      ],
      "definition": {
        "name": "chatActionCancel",
        "id": 1160523958,
        "type": {
          "name": "ChatAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user status was never changed"
        }
      ],
      "definition": {
        "name": "userStatusEmpty",
        "id": 164646985,
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is online"
        },
        {
          "name": "expires",
          "value": "Point in time (Unix timestamp) when the user's online status will expire"
        }
      ],
      "definition": {
        "name": "userStatusOnline",
        "id": 2765506420,
        "params": [
          {
            "name": "expires",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is offline"
        },
        {
          "name": "was_online",
          "value": "Point in time (Unix timestamp) when the user was last online"
        }
      ],
      "definition": {
        "name": "userStatusOffline",
        "id": 3534982405,
        "params": [
          {
            "name": "was_online",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user was online recently"
        }
      ],
      "definition": {
        "name": "userStatusRecently",
        "id": 3798942449,
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is offline, but was online last week"
        }
      ],
      "definition": {
        "name": "userStatusLastWeek",
        "id": 129960444,
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user is offline, but was online last month"
        }
      ],
      "definition": {
        "name": "userStatusLastMonth",
        "id": 2011940674,
        "type": {
          "name": "UserStatus"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of stickers"
        },
        {
          "name": "stickers",
          "value": "List of stickers"
        }
      ],
      "definition": {
        "name": "stickers",
        "id": 2202606848,
        "params": [
          {
            "name": "stickers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "sticker",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Stickers"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of emoji"
        },
        {
          "name": "emojis",
          "value": "List of emojis"
        }
      ],
      "definition": {
        "name": "emojis",
        "id": 1999063574,
        "params": [
          {
            "name": "emojis",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Emojis"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a sticker set"
        },
        {
          "name": "id",
          "value": "Identifier of the sticker set"
        },
        {
          "name": "title",
          "value": "Title of the sticker set"
        },
        {
          "name": "name",
          "value": "Name of the sticker set"
        },
        {
          "name": "thumbnail",
          "value": "Sticker set thumbnail in WEBP or TGS format with width and height 100; may be null. The file can be downloaded only before the thumbnail is changed"
        },
        {
          "name": "is_installed",
          "value": "True, if the sticker set has been installed by the current user"
        },
        {
          "name": "is_archived",
          "value": "True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously"
        },
        {
          "name": "is_official",
          "value": "True, if the sticker set is official"
        },
        {
          "name": "is_animated",
          "value": "True, is the stickers in the set are animated"
        },
        {
          "name": "is_masks",
          "value": "True, if the stickers in the set are masks"
        },
        {
          "name": "is_viewed",
          "value": "True for already viewed trending sticker sets"
        },
        {
          "name": "stickers",
          "value": "List of stickers in this set"
        },
        {
          "name": "emojis",
          "value": "A list of emoji corresponding to the stickers in the same order. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object"
        }
      ],
      "definition": {
        "name": "stickerSet",
        "id": 938686732,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "is_installed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_archived",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_official",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_animated",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_viewed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "stickers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "sticker",
                "bare": true
              }
            }
          },
          {
            "name": "emojis",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "emojis",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents short information about a sticker set"
        },
        {
          "name": "id",
          "value": "Identifier of the sticker set"
        },
        {
          "name": "title",
          "value": "Title of the sticker set"
        },
        {
          "name": "name",
          "value": "Name of the sticker set"
        },
        {
          "name": "thumbnail",
          "value": "Sticker set thumbnail in WEBP or TGS format with width and height 100; may be null"
        },
        {
          "name": "is_installed",
          "value": "True, if the sticker set has been installed by current user"
        },
        {
          "name": "is_archived",
          "value": "True, if the sticker set has been archived. A sticker set can't be installed and archived simultaneously"
        },
        {
          "name": "is_official",
          "value": "True, if the sticker set is official"
        },
        {
          "name": "is_animated",
          "value": "True, is the stickers in the set are animated"
        },
        {
          "name": "is_masks",
          "value": "True, if the stickers in the set are masks"
        },
        {
          "name": "is_viewed",
          "value": "True for already viewed trending sticker sets"
        },
        {
          "name": "size",
          "value": "Total number of stickers in the set"
        },
        {
          "name": "covers",
          "value": "Contains up to the first 5 stickers from the set, depending on the context. If the application needs more stickers the full set should be requested"
        }
      ],
      "definition": {
        "name": "stickerSetInfo",
        "id": 2398878894,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          },
          {
            "name": "is_installed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_archived",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_official",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_animated",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_viewed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "covers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "sticker",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "StickerSetInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of sticker sets"
        },
        {
          "name": "total_count",
          "value": "Approximate total number of sticker sets found"
        },
        {
          "name": "sets",
          "value": "List of sticker sets"
        }
      ],
      "definition": {
        "name": "stickerSets",
        "id": 3097905421,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sets",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "stickerSetInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call wasn't discarded, or the reason is unknown"
        }
      ],
      "definition": {
        "name": "callDiscardReasonEmpty",
        "id": 3036049347,
        "type": {
          "name": "CallDiscardReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call was ended before the conversation started. It was cancelled by the caller or missed by the other party"
        }
      ],
      "definition": {
        "name": "callDiscardReasonMissed",
        "id": 1680358012,
        "type": {
          "name": "CallDiscardReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call was ended before the conversation started. It was declined by the other party"
        }
      ],
      "definition": {
        "name": "callDiscardReasonDeclined",
        "id": 2565041202,
        "type": {
          "name": "CallDiscardReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call was ended during the conversation because the users were disconnected"
        }
      ],
      "definition": {
        "name": "callDiscardReasonDisconnected",
        "id": 2952094626,
        "type": {
          "name": "CallDiscardReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call was ended because one of the parties hung up"
        }
      ],
      "definition": {
        "name": "callDiscardReasonHungUp",
        "id": 438216166,
        "type": {
          "name": "CallDiscardReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Specifies the supported call protocols"
        },
        {
          "name": "udp_p2p",
          "value": "True, if UDP peer-to-peer connections are supported"
        },
        {
          "name": "udp_reflector",
          "value": "True, if connection through UDP reflectors is supported"
        },
        {
          "name": "min_layer",
          "value": "The minimum supported API layer; use 65"
        },
        {
          "name": "max_layer",
          "value": "The maximum supported API layer; use 65"
        },
        {
          "name": "library_versions",
          "value": "List of supported libtgvoip versions"
        }
      ],
      "definition": {
        "name": "callProtocol",
        "id": 177865598,
        "params": [
          {
            "name": "udp_p2p",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "udp_reflector",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "min_layer",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "max_layer",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "library_versions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "CallProtocol"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Telegram call reflector"
        },
        {
          "name": "peer_tag",
          "value": "A peer tag to be used with the reflector"
        }
      ],
      "definition": {
        "name": "callServerTypeTelegramReflector",
        "id": 2787116596,
        "params": [
          {
            "name": "peer_tag",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallServerType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A WebRTC server"
        },
        {
          "name": "username",
          "value": "Username to be used for authentication"
        },
        {
          "name": "password",
          "value": "Authentication password"
        },
        {
          "name": "supports_turn",
          "value": "True, if the server supports TURN"
        },
        {
          "name": "supports_stun",
          "value": "True, if the server supports STUN"
        }
      ],
      "definition": {
        "name": "callServerTypeWebrtc",
        "id": 1250622821,
        "params": [
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "supports_turn",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "supports_stun",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "CallServerType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a server for relaying call data"
        },
        {
          "name": "id",
          "value": "Server identifier"
        },
        {
          "name": "ip_address",
          "value": "Server IPv4 address"
        },
        {
          "name": "ipv6_address",
          "value": "Server IPv6 address"
        },
        {
          "name": "port",
          "value": "Server port number"
        },
        {
          "name": "type",
          "value": "Server type"
        }
      ],
      "definition": {
        "name": "callServer",
        "id": 1865932695,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "ip_address",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "ipv6_address",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "port",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "CallServerType"
            }
          }
        ],
        "type": {
          "name": "CallServer"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the call identifier"
        },
        {
          "name": "id",
          "value": "Call identifier"
        }
      ],
      "definition": {
        "name": "callId",
        "id": 65717769,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallId"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call is pending, waiting to be accepted by a user"
        },
        {
          "name": "is_created",
          "value": "True, if the call has already been created by the server"
        },
        {
          "name": "is_received",
          "value": "True, if the call has already been received by the other party"
        }
      ],
      "definition": {
        "name": "callStatePending",
        "id": 1073048620,
        "params": [
          {
            "name": "is_created",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_received",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call has been answered and encryption keys are being exchanged"
        }
      ],
      "definition": {
        "name": "callStateExchangingKeys",
        "id": 2446817893,
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call is ready to use"
        },
        {
          "name": "protocol",
          "value": "Call protocols supported by the peer"
        },
        {
          "name": "servers",
          "value": "List of available call servers"
        },
        {
          "name": "config",
          "value": "A JSON-encoded call config"
        },
        {
          "name": "encryption_key",
          "value": "Call encryption key"
        },
        {
          "name": "emojis",
          "value": "Encryption key emojis fingerprint"
        },
        {
          "name": "allow_p2p",
          "value": "True, if peer-to-peer connection is allowed by users privacy settings"
        }
      ],
      "definition": {
        "name": "callStateReady",
        "id": 3461988420,
        "params": [
          {
            "name": "protocol",
            "type": {
              "name": "callProtocol",
              "bare": true
            }
          },
          {
            "name": "servers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "callServer",
                "bare": true
              }
            }
          },
          {
            "name": "config",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "encryption_key",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "emojis",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          },
          {
            "name": "allow_p2p",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call is hanging up after discardCall has been called"
        }
      ],
      "definition": {
        "name": "callStateHangingUp",
        "id": 2161177258,
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call has ended successfully"
        },
        {
          "name": "reason",
          "value": "The reason, why the call has ended"
        },
        {
          "name": "need_rating",
          "value": "True, if the call rating should be sent to the server"
        },
        {
          "name": "need_debug_information",
          "value": "True, if the call debug information should be sent to the server"
        }
      ],
      "definition": {
        "name": "callStateDiscarded",
        "id": 4104114129,
        "params": [
          {
            "name": "reason",
            "type": {
              "name": "CallDiscardReason"
            }
          },
          {
            "name": "need_rating",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "need_debug_information",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call has ended with an error"
        },
        {
          "name": "error",
          "value": "Error. An error with the code 4005000 will be returned if an outgoing call is missed because of an expired timeout"
        }
      ],
      "definition": {
        "name": "callStateError",
        "id": 3319751829,
        "params": [
          {
            "name": "error",
            "type": {
              "name": "error",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user heard their own voice"
        }
      ],
      "definition": {
        "name": "callProblemEcho",
        "id": 801116548,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user heard background noise"
        }
      ],
      "definition": {
        "name": "callProblemNoise",
        "id": 1053065359,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The other side kept disappearing"
        }
      ],
      "definition": {
        "name": "callProblemInterruptions",
        "id": 1119493218,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The speech was distorted"
        }
      ],
      "definition": {
        "name": "callProblemDistortedSpeech",
        "id": 379960581,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user couldn't hear the other side"
        }
      ],
      "definition": {
        "name": "callProblemSilentLocal",
        "id": 253652790,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The other side couldn't hear the user"
        }
      ],
      "definition": {
        "name": "callProblemSilentRemote",
        "id": 573634714,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The call ended unexpectedly"
        }
      ],
      "definition": {
        "name": "callProblemDropped",
        "id": 3087655809,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The video was distorted"
        }
      ],
      "definition": {
        "name": "callProblemDistortedVideo",
        "id": 385245706,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The video was pixelated"
        }
      ],
      "definition": {
        "name": "callProblemPixelatedVideo",
        "id": 2115315411,
        "type": {
          "name": "CallProblem"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a call"
        },
        {
          "name": "id",
          "value": "Call identifier, not persistent"
        },
        {
          "name": "user_id",
          "value": "Peer user identifier"
        },
        {
          "name": "is_outgoing",
          "value": "True, if the call is outgoing"
        },
        {
          "name": "is_video",
          "value": "True, if the call is a video call"
        },
        {
          "name": "state",
          "value": "Call state"
        }
      ],
      "definition": {
        "name": "call",
        "id": 1504070790,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_outgoing",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_video",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "state",
            "type": {
              "name": "CallState"
            }
          }
        ],
        "type": {
          "name": "Call"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains settings for the authentication of the user's phone number"
        },
        {
          "name": "allow_flash_call",
          "value": "Pass true if the authentication code may be sent via flash call to the specified phone number"
        },
        {
          "name": "is_current_phone_number",
          "value": "Pass true if the authenticated phone number is used on the current device"
        },
        {
          "name": "allow_sms_retriever_api",
          "value": "For official applications only. True, if the application can use Android SMS Retriever API (requires Google Play Services \u003e= 10.2) to automatically receive the authentication code from the SMS. See https://developers.google.com/identity/sms-retriever/ for more details"
        }
      ],
      "definition": {
        "name": "phoneNumberAuthenticationSettings",
        "id": 3435768553,
        "params": [
          {
            "name": "allow_flash_call",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_current_phone_number",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "allow_sms_retriever_api",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PhoneNumberAuthenticationSettings"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of animations"
        },
        {
          "name": "animations",
          "value": "List of animations"
        }
      ],
      "definition": {
        "name": "animations",
        "id": 753145212,
        "params": [
          {
            "name": "animations",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "animation",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Animations"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A regular animated sticker"
        },
        {
          "name": "sticker",
          "value": "The animated sticker with the dice animation"
        }
      ],
      "definition": {
        "name": "diceStickersRegular",
        "id": 3554667726,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "sticker",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DiceStickers"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Animated stickers to be combined into a slot machine"
        },
        {
          "name": "background",
          "value": "The animated sticker with the slot machine background. The background animation must start playing after all reel animations finish"
        },
        {
          "name": "lever",
          "value": "The animated sticker with the lever animation. The lever animation must play once in the initial dice state"
        },
        {
          "name": "left_reel",
          "value": "The animated sticker with the left reel"
        },
        {
          "name": "center_reel",
          "value": "The animated sticker with the center reel"
        },
        {
          "name": "right_reel",
          "value": "The animated sticker with the right reel"
        }
      ],
      "definition": {
        "name": "diceStickersSlotMachine",
        "id": 3919744172,
        "params": [
          {
            "name": "background",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "lever",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "left_reel",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "center_reel",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "right_reel",
            "type": {
              "name": "sticker",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DiceStickers"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents the result of an ImportContacts request"
        },
        {
          "name": "user_ids",
          "value": "User identifiers of the imported contacts in the same order as they were specified in the request; 0 if the contact is not yet a registered user"
        },
        {
          "name": "importer_count",
          "value": "The number of users that imported the corresponding contact; 0 for already registered users or if unavailable"
        }
      ],
      "definition": {
        "name": "importedContacts",
        "id": 1144887910,
        "params": [
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "importer_count",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ImportedContacts"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains an HTTP URL"
        },
        {
          "name": "url",
          "value": "The URL"
        }
      ],
      "definition": {
        "name": "httpUrl",
        "id": 2276947366,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "HttpUrl"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to an animated GIF or an animated (i.e. without sound) H.264/MPEG-4 AVC video"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the query result"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the result thumbnail (JPEG, GIF, or MPEG4), if it exists"
        },
        {
          "name": "thumbnail_mime_type",
          "value": "MIME type of the video thumbnail. If non-empty, must be one of \"image/jpeg\", \"image/gif\" and \"video/mp4\""
        },
        {
          "name": "video_url",
          "value": "The URL of the video file (file size must not exceed 1MB)"
        },
        {
          "name": "video_mime_type",
          "value": "MIME type of the video file. Must be one of \"image/gif\" and \"video/mp4\""
        },
        {
          "name": "video_duration",
          "value": "Duration of the video, in seconds"
        },
        {
          "name": "video_width",
          "value": "Width of the video"
        },
        {
          "name": "video_height",
          "value": "Height of the video"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageAnimation, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultAnimation",
        "id": 2805158422,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video_mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video_duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "video_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "video_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to an article or web page"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "url",
          "value": "URL of the result, if it exists"
        },
        {
          "name": "hide_url",
          "value": "True, if the URL must be not shown"
        },
        {
          "name": "title",
          "value": "Title of the result"
        },
        {
          "name": "param_description",
          "value": "A short description of the result"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the result thumbnail, if it exists"
        },
        {
          "name": "thumbnail_width",
          "value": "Thumbnail width, if known"
        },
        {
          "name": "thumbnail_height",
          "value": "Thumbnail height, if known"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultArticle",
        "id": 1973670156,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "hide_url",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "thumbnail_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to an MP3 audio file"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the audio file"
        },
        {
          "name": "performer",
          "value": "Performer of the audio file"
        },
        {
          "name": "audio_url",
          "value": "The URL of the audio file"
        },
        {
          "name": "audio_duration",
          "value": "Audio file duration, in seconds"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageAudio, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultAudio",
        "id": 1260139988,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "performer",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "audio_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "audio_duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a user contact"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "contact",
          "value": "User contact"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the result thumbnail, if it exists"
        },
        {
          "name": "thumbnail_width",
          "value": "Thumbnail width, if known"
        },
        {
          "name": "thumbnail_height",
          "value": "Thumbnail height, if known"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultContact",
        "id": 1846064594,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "contact",
            "type": {
              "name": "contact",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "thumbnail_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to a file"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the resulting file"
        },
        {
          "name": "param_description",
          "value": "Short description of the result, if known"
        },
        {
          "name": "document_url",
          "value": "URL of the file"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the file content; only \"application/pdf\" and \"application/zip\" are currently allowed"
        },
        {
          "name": "thumbnail_url",
          "value": "The URL of the file thumbnail, if it exists"
        },
        {
          "name": "thumbnail_width",
          "value": "Width of the thumbnail"
        },
        {
          "name": "thumbnail_height",
          "value": "Height of the thumbnail"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageDocument, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultDocument",
        "id": 578801869,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "document_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "thumbnail_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a game"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "game_short_name",
          "value": "Short name of the game"
        },
        {
          "name": "reply_markup",
          "value": "Message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultGame",
        "id": 966074327,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "game_short_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a point on the map"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "location",
          "value": "Location result"
        },
        {
          "name": "live_period",
          "value": "Amount of time relative to the message sent time until the location can be updated, in seconds"
        },
        {
          "name": "title",
          "value": "Title of the result"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the result thumbnail, if it exists"
        },
        {
          "name": "thumbnail_width",
          "value": "Thumbnail width, if known"
        },
        {
          "name": "thumbnail_height",
          "value": "Thumbnail height, if known"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultLocation",
        "id": 2407317078,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "live_period",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "thumbnail_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents link to a JPEG image"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the result, if known"
        },
        {
          "name": "param_description",
          "value": "A short description of the result, if known"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the photo thumbnail, if it exists"
        },
        {
          "name": "photo_url",
          "value": "The URL of the JPEG photo (photo size must not exceed 5MB)"
        },
        {
          "name": "photo_width",
          "value": "Width of the photo"
        },
        {
          "name": "photo_height",
          "value": "Height of the photo"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessagePhoto, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultPhoto",
        "id": 3171628575,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "photo_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to a WEBP or TGS sticker"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the sticker thumbnail, if it exists"
        },
        {
          "name": "sticker_url",
          "value": "The URL of the WEBP or TGS sticker (sticker file size must not exceed 5MB)"
        },
        {
          "name": "sticker_width",
          "value": "Width of the sticker"
        },
        {
          "name": "sticker_height",
          "value": "Height of the sticker"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, inputMessageSticker, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultSticker",
        "id": 274007129,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "sticker_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "sticker_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sticker_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents information about a venue"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "venue",
          "value": "Venue result"
        },
        {
          "name": "thumbnail_url",
          "value": "URL of the result thumbnail, if it exists"
        },
        {
          "name": "thumbnail_width",
          "value": "Thumbnail width, if known"
        },
        {
          "name": "thumbnail_height",
          "value": "Thumbnail height, if known"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultVenue",
        "id": 541704509,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "venue",
            "type": {
              "name": "venue",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "thumbnail_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to a page containing an embedded video player or a video file"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the result"
        },
        {
          "name": "param_description",
          "value": "A short description of the result, if known"
        },
        {
          "name": "thumbnail_url",
          "value": "The URL of the video thumbnail (JPEG), if it exists"
        },
        {
          "name": "video_url",
          "value": "URL of the embedded video player or video file"
        },
        {
          "name": "mime_type",
          "value": "MIME type of the content of the video URL, only \"text/html\" or \"video/mp4\" are currently supported"
        },
        {
          "name": "video_width",
          "value": "Width of the video"
        },
        {
          "name": "video_height",
          "value": "Height of the video"
        },
        {
          "name": "video_duration",
          "value": "Video duration, in seconds"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageVideo, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultVideo",
        "id": 1724073191,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video_width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "video_height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "video_duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to an opus-encoded audio file within an OGG container, single channel audio"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "title",
          "value": "Title of the voice note"
        },
        {
          "name": "voice_note_url",
          "value": "The URL of the voice note file"
        },
        {
          "name": "voice_note_duration",
          "value": "Duration of the voice note, in seconds"
        },
        {
          "name": "reply_markup",
          "value": "The message reply markup. Must be of type replyMarkupInlineKeyboard or null"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageVoiceNote, InputMessageLocation, InputMessageVenue or InputMessageContact"
        }
      ],
      "definition": {
        "name": "inputInlineQueryResultVoiceNote",
        "id": 2504894793,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "voice_note_url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "voice_note_duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "InputInlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a link to an article or web page"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "url",
          "value": "URL of the result, if it exists"
        },
        {
          "name": "hide_url",
          "value": "True, if the URL must be not shown"
        },
        {
          "name": "title",
          "value": "Title of the result"
        },
        {
          "name": "param_description",
          "value": "A short description of the result"
        },
        {
          "name": "thumbnail",
          "value": "Result thumbnail in JPEG format; may be null"
        }
      ],
      "definition": {
        "name": "inlineQueryResultArticle",
        "id": 206340825,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "hide_url",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a user contact"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "contact",
          "value": "A user contact"
        },
        {
          "name": "thumbnail",
          "value": "Result thumbnail in JPEG format; may be null"
        }
      ],
      "definition": {
        "name": "inlineQueryResultContact",
        "id": 4113007122,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "contact",
            "type": {
              "name": "contact",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a point on the map"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "location",
          "value": "Location result"
        },
        {
          "name": "title",
          "value": "Title of the result"
        },
        {
          "name": "thumbnail",
          "value": "Result thumbnail in JPEG format; may be null"
        }
      ],
      "definition": {
        "name": "inlineQueryResultLocation",
        "id": 466004752,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents information about a venue"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "venue",
          "value": "Venue result"
        },
        {
          "name": "thumbnail",
          "value": "Result thumbnail in JPEG format; may be null"
        }
      ],
      "definition": {
        "name": "inlineQueryResultVenue",
        "id": 1281036382,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "venue",
            "type": {
              "name": "venue",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "thumbnail",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents information about a game"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "game",
          "value": "Game result"
        }
      ],
      "definition": {
        "name": "inlineQueryResultGame",
        "id": 1706916987,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "game",
            "type": {
              "name": "game",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents an animation file"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "animation",
          "value": "Animation file"
        },
        {
          "name": "title",
          "value": "Animation title"
        }
      ],
      "definition": {
        "name": "inlineQueryResultAnimation",
        "id": 2009984267,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents an audio file"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "audio",
          "value": "Audio file"
        }
      ],
      "definition": {
        "name": "inlineQueryResultAudio",
        "id": 842650360,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "audio",
            "type": {
              "name": "audio",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a document"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "document",
          "value": "Document"
        },
        {
          "name": "title",
          "value": "Document title"
        },
        {
          "name": "param_description",
          "value": "Document description"
        }
      ],
      "definition": {
        "name": "inlineQueryResultDocument",
        "id": 2803698757,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a photo"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "photo",
          "value": "Photo"
        },
        {
          "name": "title",
          "value": "Title of the result, if known"
        },
        {
          "name": "param_description",
          "value": "A short description of the result, if known"
        }
      ],
      "definition": {
        "name": "inlineQueryResultPhoto",
        "id": 1848319440,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a sticker"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "sticker",
          "value": "Sticker"
        }
      ],
      "definition": {
        "name": "inlineQueryResultSticker",
        "id": 2446743051,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "sticker",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a video"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "video",
          "value": "Video"
        },
        {
          "name": "title",
          "value": "Title of the video"
        },
        {
          "name": "param_description",
          "value": "Description of the video"
        }
      ],
      "definition": {
        "name": "inlineQueryResultVideo",
        "id": 2921808613,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "video",
            "type": {
              "name": "video",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a voice note"
        },
        {
          "name": "id",
          "value": "Unique identifier of the query result"
        },
        {
          "name": "voice_note",
          "value": "Voice note"
        },
        {
          "name": "title",
          "value": "Title of the voice note"
        }
      ],
      "definition": {
        "name": "inlineQueryResultVoiceNote",
        "id": 2397574191,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "voice_note",
            "type": {
              "name": "voiceNote",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents the results of the inline query. Use sendInlineQueryResultMessage to send the result of the query"
        },
        {
          "name": "inline_query_id",
          "value": "Unique identifier of the inline query"
        },
        {
          "name": "next_offset",
          "value": "The offset for the next request. If empty, there are no more results"
        },
        {
          "name": "results",
          "value": "Results of the query"
        },
        {
          "name": "switch_pm_text",
          "value": "If non-empty, this text should be shown on the button, which opens a private chat with the bot and sends the bot a start message with the switch_pm_parameter"
        },
        {
          "name": "switch_pm_parameter",
          "value": "Parameter for the bot start message"
        }
      ],
      "definition": {
        "name": "inlineQueryResults",
        "id": 1858987454,
        "params": [
          {
            "name": "inline_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "next_offset",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "results",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InlineQueryResult"
              }
            }
          },
          {
            "name": "switch_pm_text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "switch_pm_parameter",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResults"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The payload for a general callback button"
        },
        {
          "name": "data",
          "value": "Data that was attached to the callback button"
        }
      ],
      "definition": {
        "name": "callbackQueryPayloadData",
        "id": 2317237350,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallbackQueryPayload"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The payload for a callback button requiring password"
        },
        {
          "name": "password",
          "value": "The password for the current user"
        },
        {
          "name": "data",
          "value": "Data that was attached to the callback button"
        }
      ],
      "definition": {
        "name": "callbackQueryPayloadDataWithPassword",
        "id": 1340266738,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallbackQueryPayload"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The payload for a game callback button"
        },
        {
          "name": "game_short_name",
          "value": "A short name of the game that was attached to the callback button"
        }
      ],
      "definition": {
        "name": "callbackQueryPayloadGame",
        "id": 1303571512,
        "params": [
          {
            "name": "game_short_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallbackQueryPayload"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a bot's answer to a callback query"
        },
        {
          "name": "text",
          "value": "Text of the answer"
        },
        {
          "name": "show_alert",
          "value": "True, if an alert should be shown to the user instead of a toast notification"
        },
        {
          "name": "url",
          "value": "URL to be opened"
        }
      ],
      "definition": {
        "name": "callbackQueryAnswer",
        "id": 360867933,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "show_alert",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CallbackQueryAnswer"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the result of a custom request"
        },
        {
          "name": "result",
          "value": "A JSON-serialized result"
        }
      ],
      "definition": {
        "name": "customRequestResult",
        "id": 2285006844,
        "params": [
          {
            "name": "result",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CustomRequestResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains one row of the game high score table"
        },
        {
          "name": "position",
          "value": "Position in the high score table"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "score",
          "value": "User score"
        }
      ],
      "definition": {
        "name": "gameHighScore",
        "id": 4264188938,
        "params": [
          {
            "name": "position",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "score",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "GameHighScore"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of game high scores"
        },
        {
          "name": "scores",
          "value": "A list of game high scores"
        }
      ],
      "definition": {
        "name": "gameHighScores",
        "id": 1833751309,
        "params": [
          {
            "name": "scores",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "gameHighScore",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "GameHighScores"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message was edited"
        },
        {
          "name": "old_message",
          "value": "The original message before the edit"
        },
        {
          "name": "new_message",
          "value": "The message after it was edited"
        }
      ],
      "definition": {
        "name": "chatEventMessageEdited",
        "id": 3863999992,
        "params": [
          {
            "name": "old_message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "new_message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message was deleted"
        },
        {
          "name": "message",
          "value": "Deleted message"
        }
      ],
      "definition": {
        "name": "chatEventMessageDeleted",
        "id": 3401992695,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A poll in a message was stopped"
        },
        {
          "name": "message",
          "value": "The message with the poll"
        }
      ],
      "definition": {
        "name": "chatEventPollStopped",
        "id": 2009893861,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message was pinned"
        },
        {
          "name": "message",
          "value": "Pinned message"
        }
      ],
      "definition": {
        "name": "chatEventMessagePinned",
        "id": 438742298,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message was unpinned"
        },
        {
          "name": "message",
          "value": "Unpinned message"
        }
      ],
      "definition": {
        "name": "chatEventMessageUnpinned",
        "id": 3918805783,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new member joined the chat"
        }
      ],
      "definition": {
        "name": "chatEventMemberJoined",
        "id": 4059498788,
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A member left the chat"
        }
      ],
      "definition": {
        "name": "chatEventMemberLeft",
        "id": 3346546703,
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new chat member was invited"
        },
        {
          "name": "user_id",
          "value": "New member user identifier"
        },
        {
          "name": "status",
          "value": "New member status"
        }
      ],
      "definition": {
        "name": "chatEventMemberInvited",
        "id": 2201278590,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "ChatMemberStatus"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat member has gained/lost administrator status, or the list of their administrator privileges has changed"
        },
        {
          "name": "user_id",
          "value": "Chat member user identifier"
        },
        {
          "name": "old_status",
          "value": "Previous status of the chat member"
        },
        {
          "name": "new_status",
          "value": "New status of the chat member"
        }
      ],
      "definition": {
        "name": "chatEventMemberPromoted",
        "id": 1887176186,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "old_status",
            "type": {
              "name": "ChatMemberStatus"
            }
          },
          {
            "name": "new_status",
            "type": {
              "name": "ChatMemberStatus"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat member was restricted/unrestricted or banned/unbanned, or the list of their restrictions has changed"
        },
        {
          "name": "user_id",
          "value": "Chat member user identifier"
        },
        {
          "name": "old_status",
          "value": "Previous status of the chat member"
        },
        {
          "name": "new_status",
          "value": "New status of the chat member"
        }
      ],
      "definition": {
        "name": "chatEventMemberRestricted",
        "id": 584946294,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "old_status",
            "type": {
              "name": "ChatMemberStatus"
            }
          },
          {
            "name": "new_status",
            "type": {
              "name": "ChatMemberStatus"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat title was changed"
        },
        {
          "name": "old_title",
          "value": "Previous chat title"
        },
        {
          "name": "new_title",
          "value": "New chat title"
        }
      ],
      "definition": {
        "name": "chatEventTitleChanged",
        "id": 1134103250,
        "params": [
          {
            "name": "old_title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat permissions was changed"
        },
        {
          "name": "old_permissions",
          "value": "Previous chat permissions"
        },
        {
          "name": "new_permissions",
          "value": "New chat permissions"
        }
      ],
      "definition": {
        "name": "chatEventPermissionsChanged",
        "id": 2983409576,
        "params": [
          {
            "name": "old_permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          },
          {
            "name": "new_permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat description was changed"
        },
        {
          "name": "old_description",
          "value": "Previous chat description"
        },
        {
          "name": "new_description",
          "value": "New chat description"
        }
      ],
      "definition": {
        "name": "chatEventDescriptionChanged",
        "id": 39112478,
        "params": [
          {
            "name": "old_description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat username was changed"
        },
        {
          "name": "old_username",
          "value": "Previous chat username"
        },
        {
          "name": "new_username",
          "value": "New chat username"
        }
      ],
      "definition": {
        "name": "chatEventUsernameChanged",
        "id": 1728558443,
        "params": [
          {
            "name": "old_username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat photo was changed"
        },
        {
          "name": "old_photo",
          "value": "Previous chat photo value; may be null"
        },
        {
          "name": "new_photo",
          "value": "New chat photo value; may be null"
        }
      ],
      "definition": {
        "name": "chatEventPhotoChanged",
        "id": 3483394755,
        "params": [
          {
            "name": "old_photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          },
          {
            "name": "new_photo",
            "type": {
              "name": "chatPhoto",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The can_invite_users permission of a supergroup chat was toggled"
        },
        {
          "name": "can_invite_users",
          "value": "New value of can_invite_users permission"
        }
      ],
      "definition": {
        "name": "chatEventInvitesToggled",
        "id": 4232418923,
        "params": [
          {
            "name": "can_invite_users",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The linked chat of a supergroup was changed"
        },
        {
          "name": "old_linked_chat_id",
          "value": "Previous supergroup linked chat identifier"
        },
        {
          "name": "new_linked_chat_id",
          "value": "New supergroup linked chat identifier"
        }
      ],
      "definition": {
        "name": "chatEventLinkedChatChanged",
        "id": 1797419439,
        "params": [
          {
            "name": "old_linked_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "new_linked_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The slow_mode_delay setting of a supergroup was changed"
        },
        {
          "name": "old_slow_mode_delay",
          "value": "Previous value of slow_mode_delay"
        },
        {
          "name": "new_slow_mode_delay",
          "value": "New value of slow_mode_delay"
        }
      ],
      "definition": {
        "name": "chatEventSlowModeDelayChanged",
        "id": 2641771531,
        "params": [
          {
            "name": "old_slow_mode_delay",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "new_slow_mode_delay",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The sign_messages setting of a channel was toggled"
        },
        {
          "name": "sign_messages",
          "value": "New value of sign_messages"
        }
      ],
      "definition": {
        "name": "chatEventSignMessagesToggled",
        "id": 2981701662,
        "params": [
          {
            "name": "sign_messages",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The supergroup sticker set was changed"
        },
        {
          "name": "old_sticker_set_id",
          "value": "Previous identifier of the chat sticker set; 0 if none"
        },
        {
          "name": "new_sticker_set_id",
          "value": "New identifier of the chat sticker set; 0 if none"
        }
      ],
      "definition": {
        "name": "chatEventStickerSetChanged",
        "id": 3051836815,
        "params": [
          {
            "name": "old_sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "new_sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The supergroup location was changed"
        },
        {
          "name": "old_location",
          "value": "Previous location; may be null"
        },
        {
          "name": "new_location",
          "value": "New location; may be null"
        }
      ],
      "definition": {
        "name": "chatEventLocationChanged",
        "id": 3889036622,
        "params": [
          {
            "name": "old_location",
            "type": {
              "name": "chatLocation",
              "bare": true
            }
          },
          {
            "name": "new_location",
            "type": {
              "name": "chatLocation",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The is_all_history_available setting of a supergroup was toggled"
        },
        {
          "name": "is_all_history_available",
          "value": "New value of is_all_history_available"
        }
      ],
      "definition": {
        "name": "chatEventIsAllHistoryAvailableToggled",
        "id": 2695904277,
        "params": [
          {
            "name": "is_all_history_available",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatEventAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a chat event"
        },
        {
          "name": "id",
          "value": "Chat event identifier"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) when the event happened"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user who performed the action that triggered the event"
        },
        {
          "name": "action",
          "value": "Action performed by the user"
        }
      ],
      "definition": {
        "name": "chatEvent",
        "id": 3685054892,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "action",
            "type": {
              "name": "ChatEventAction"
            }
          }
        ],
        "type": {
          "name": "ChatEvent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of chat events"
        },
        {
          "name": "events",
          "value": "List of events"
        }
      ],
      "definition": {
        "name": "chatEvents",
        "id": 3611217348,
        "params": [
          {
            "name": "events",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatEvent",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatEvents"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a set of filters used to obtain a chat event log"
        },
        {
          "name": "message_edits",
          "value": "True, if message edits should be returned"
        },
        {
          "name": "message_deletions",
          "value": "True, if message deletions should be returned"
        },
        {
          "name": "message_pins",
          "value": "True, if pin/unpin events should be returned"
        },
        {
          "name": "member_joins",
          "value": "True, if members joining events should be returned"
        },
        {
          "name": "member_leaves",
          "value": "True, if members leaving events should be returned"
        },
        {
          "name": "member_invites",
          "value": "True, if invited member events should be returned"
        },
        {
          "name": "member_promotions",
          "value": "True, if member promotion/demotion events should be returned"
        },
        {
          "name": "member_restrictions",
          "value": "True, if member restricted/unrestricted/banned/unbanned events should be returned"
        },
        {
          "name": "info_changes",
          "value": "True, if changes in chat information should be returned"
        },
        {
          "name": "setting_changes",
          "value": "True, if changes in chat settings should be returned"
        }
      ],
      "definition": {
        "name": "chatEventLogFilters",
        "id": 941939684,
        "params": [
          {
            "name": "message_edits",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "message_deletions",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "message_pins",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "member_joins",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "member_leaves",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "member_invites",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "member_promotions",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "member_restrictions",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "info_changes",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "setting_changes",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatEventLogFilters"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An ordinary language pack string"
        },
        {
          "name": "value",
          "value": "String value"
        }
      ],
      "definition": {
        "name": "languagePackStringValueOrdinary",
        "id": 4045710944,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LanguagePackStringValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A language pack string which has different forms based on the number of some object it mentions. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more info"
        },
        {
          "name": "zero_value",
          "value": "Value for zero objects"
        },
        {
          "name": "one_value",
          "value": "Value for one object"
        },
        {
          "name": "two_value",
          "value": "Value for two objects"
        },
        {
          "name": "few_value",
          "value": "Value for few objects"
        },
        {
          "name": "many_value",
          "value": "Value for many objects"
        },
        {
          "name": "other_value",
          "value": "Default value"
        }
      ],
      "definition": {
        "name": "languagePackStringValuePluralized",
        "id": 1906840261,
        "params": [
          {
            "name": "zero_value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "one_value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "two_value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "few_value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "many_value",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "other_value",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LanguagePackStringValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A deleted language pack string, the value should be taken from the built-in english language pack"
        }
      ],
      "definition": {
        "name": "languagePackStringValueDeleted",
        "id": 1834792698,
        "type": {
          "name": "LanguagePackStringValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents one language pack string"
        },
        {
          "name": "key",
          "value": "String key"
        },
        {
          "name": "value",
          "value": "String value"
        }
      ],
      "definition": {
        "name": "languagePackString",
        "id": 1307632736,
        "params": [
          {
            "name": "key",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "value",
            "type": {
              "name": "LanguagePackStringValue"
            }
          }
        ],
        "type": {
          "name": "LanguagePackString"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of language pack strings"
        },
        {
          "name": "strings",
          "value": "A list of language pack strings"
        }
      ],
      "definition": {
        "name": "languagePackStrings",
        "id": 1252426223,
        "params": [
          {
            "name": "strings",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "languagePackString",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "LanguagePackStrings"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a language pack"
        },
        {
          "name": "id",
          "value": "Unique language pack identifier"
        },
        {
          "name": "base_language_pack_id",
          "value": "Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it should be fetched from base language pack. Unsupported in custom language packs"
        },
        {
          "name": "name",
          "value": "Language name"
        },
        {
          "name": "native_name",
          "value": "Name of the language in that language"
        },
        {
          "name": "plural_code",
          "value": "A language code to be used to apply plural forms. See https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html for more info"
        },
        {
          "name": "is_official",
          "value": "True, if the language pack is official"
        },
        {
          "name": "is_rtl",
          "value": "True, if the language pack strings are RTL"
        },
        {
          "name": "is_beta",
          "value": "True, if the language pack is a beta language pack"
        },
        {
          "name": "is_installed",
          "value": "True, if the language pack is installed by the current user"
        },
        {
          "name": "total_string_count",
          "value": "Total number of non-deleted strings from the language pack"
        },
        {
          "name": "translated_string_count",
          "value": "Total number of translated strings from the language pack"
        },
        {
          "name": "local_string_count",
          "value": "Total number of non-deleted strings from the language pack available locally"
        },
        {
          "name": "translation_url",
          "value": "Link to language translation interface; empty for custom local language packs"
        }
      ],
      "definition": {
        "name": "languagePackInfo",
        "id": 542199642,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "base_language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "native_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "plural_code",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_official",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_rtl",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_beta",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_installed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "total_string_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "translated_string_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "local_string_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "translation_url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LanguagePackInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about the current localization target"
        },
        {
          "name": "language_packs",
          "value": "List of available language packs for this application"
        }
      ],
      "definition": {
        "name": "localizationTargetInfo",
        "id": 748916795,
        "params": [
          {
            "name": "language_packs",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "languagePackInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "LocalizationTargetInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Firebase Cloud Messaging"
        },
        {
          "name": "token",
          "value": "Device registration token; may be empty to de-register a device"
        },
        {
          "name": "encrypt",
          "value": "True, if push notifications should be additionally encrypted"
        }
      ],
      "definition": {
        "name": "deviceTokenFirebaseCloudMessaging",
        "id": 3497085447,
        "params": [
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "encrypt",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Apple Push Notification service"
        },
        {
          "name": "device_token",
          "value": "Device token; may be empty to de-register a device"
        },
        {
          "name": "is_app_sandbox",
          "value": "True, if App Sandbox is enabled"
        }
      ],
      "definition": {
        "name": "deviceTokenApplePush",
        "id": 387541955,
        "params": [
          {
            "name": "device_token",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_app_sandbox",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Apple Push Notification service VoIP notifications"
        },
        {
          "name": "device_token",
          "value": "Device token; may be empty to de-register a device"
        },
        {
          "name": "is_app_sandbox",
          "value": "True, if App Sandbox is enabled"
        },
        {
          "name": "encrypt",
          "value": "True, if push notifications should be additionally encrypted"
        }
      ],
      "definition": {
        "name": "deviceTokenApplePushVoIP",
        "id": 804275689,
        "params": [
          {
            "name": "device_token",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_app_sandbox",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "encrypt",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Windows Push Notification Services"
        },
        {
          "name": "access_token",
          "value": "The access token that will be used to send notifications; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenWindowsPush",
        "id": 2884453007,
        "params": [
          {
            "name": "access_token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Microsoft Push Notification Service"
        },
        {
          "name": "channel_uri",
          "value": "Push notification channel URI; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenMicrosoftPush",
        "id": 1224269900,
        "params": [
          {
            "name": "channel_uri",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Microsoft Push Notification Service VoIP channel"
        },
        {
          "name": "channel_uri",
          "value": "Push notification channel URI; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenMicrosoftPushVoIP",
        "id": 3509363537,
        "params": [
          {
            "name": "channel_uri",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for web Push API"
        },
        {
          "name": "endpoint",
          "value": "Absolute URL exposed by the push service where the application server can send push messages; may be empty to de-register a device"
        },
        {
          "name": "p256dh_base64url",
          "value": "Base64url-encoded P-256 elliptic curve Diffie-Hellman public key"
        },
        {
          "name": "auth_base64url",
          "value": "Base64url-encoded authentication secret"
        }
      ],
      "definition": {
        "name": "deviceTokenWebPush",
        "id": 2600460023,
        "params": [
          {
            "name": "endpoint",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "p256dh_base64url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "auth_base64url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Simple Push API for Firefox OS"
        },
        {
          "name": "endpoint",
          "value": "Absolute URL exposed by the push service where the application server can send push messages; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenSimplePush",
        "id": 49584736,
        "params": [
          {
            "name": "endpoint",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Ubuntu Push Client service"
        },
        {
          "name": "token",
          "value": "Token; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenUbuntuPush",
        "id": 1782320422,
        "params": [
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for BlackBerry Push Service"
        },
        {
          "name": "token",
          "value": "Token; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenBlackBerryPush",
        "id": 1559167234,
        "params": [
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A token for Tizen Push Service"
        },
        {
          "name": "reg_id",
          "value": "Push service registration identifier; may be empty to de-register a device"
        }
      ],
      "definition": {
        "name": "deviceTokenTizenPush",
        "id": 2935020083,
        "params": [
          {
            "name": "reg_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeviceToken"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a globally unique push receiver identifier, which can be used to identify which account has received a push notification"
        },
        {
          "name": "id",
          "value": "The globally unique identifier of push notification subscription"
        }
      ],
      "definition": {
        "name": "pushReceiverId",
        "id": 371056428,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PushReceiverId"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a solid fill of a background"
        },
        {
          "name": "color",
          "value": "A color of the background in the RGB24 format"
        }
      ],
      "definition": {
        "name": "backgroundFillSolid",
        "id": 1010678813,
        "params": [
          {
            "name": "color",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BackgroundFill"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a gradient fill of a background"
        },
        {
          "name": "top_color",
          "value": "A top color of the background in the RGB24 format"
        },
        {
          "name": "bottom_color",
          "value": "A bottom color of the background in the RGB24 format"
        },
        {
          "name": "rotation_angle",
          "value": "Clockwise rotation angle of the gradient, in degrees; 0-359. Should be always divisible by 45"
        }
      ],
      "definition": {
        "name": "backgroundFillGradient",
        "id": 2455761279,
        "params": [
          {
            "name": "top_color",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "bottom_color",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "rotation_angle",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BackgroundFill"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A wallpaper in JPEG format"
        },
        {
          "name": "is_blurred",
          "value": "True, if the wallpaper must be downscaled to fit in 450x450 square and then box-blurred with radius 12"
        },
        {
          "name": "is_moving",
          "value": "True, if the background needs to be slightly moved when device is tilted"
        }
      ],
      "definition": {
        "name": "backgroundTypeWallpaper",
        "id": 1972128891,
        "params": [
          {
            "name": "is_blurred",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_moving",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "BackgroundType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A PNG or TGV (gzipped subset of SVG with MIME type \"application/x-tgwallpattern\") pattern to be combined with the background fill chosen by the user"
        },
        {
          "name": "fill",
          "value": "Description of the background fill"
        },
        {
          "name": "intensity",
          "value": "Intensity of the pattern when it is shown above the filled background, 0-100"
        },
        {
          "name": "is_moving",
          "value": "True, if the background needs to be slightly moved when device is tilted"
        }
      ],
      "definition": {
        "name": "backgroundTypePattern",
        "id": 649993914,
        "params": [
          {
            "name": "fill",
            "type": {
              "name": "BackgroundFill"
            }
          },
          {
            "name": "intensity",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_moving",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "BackgroundType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A filled background"
        },
        {
          "name": "fill",
          "value": "Description of the background fill"
        }
      ],
      "definition": {
        "name": "backgroundTypeFill",
        "id": 993008684,
        "params": [
          {
            "name": "fill",
            "type": {
              "name": "BackgroundFill"
            }
          }
        ],
        "type": {
          "name": "BackgroundType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a chat background"
        },
        {
          "name": "id",
          "value": "Unique background identifier"
        },
        {
          "name": "is_default",
          "value": "True, if this is one of default backgrounds"
        },
        {
          "name": "is_dark",
          "value": "True, if the background is dark and is recommended to be used with dark theme"
        },
        {
          "name": "name",
          "value": "Unique background name"
        },
        {
          "name": "document",
          "value": "Document with the background; may be null. Null only for filled backgrounds"
        },
        {
          "name": "type",
          "value": "Type of the background"
        }
      ],
      "definition": {
        "name": "background",
        "id": 3864996124,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "is_default",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_dark",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "BackgroundType"
            }
          }
        ],
        "type": {
          "name": "Background"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of backgrounds"
        },
        {
          "name": "backgrounds",
          "value": "A list of backgrounds"
        }
      ],
      "definition": {
        "name": "backgrounds",
        "id": 3026653977,
        "params": [
          {
            "name": "backgrounds",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "background",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Backgrounds"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A background from a local file"
        },
        {
          "name": "background",
          "value": "Background file to use. Only inputFileLocal and inputFileGenerated are supported. The file must be in JPEG format for wallpapers and in PNG format for patterns"
        }
      ],
      "definition": {
        "name": "inputBackgroundLocal",
        "id": 2547872932,
        "params": [
          {
            "name": "background",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "InputBackground"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A background from the server"
        },
        {
          "name": "background_id",
          "value": "The background identifier"
        }
      ],
      "definition": {
        "name": "inputBackgroundRemote",
        "id": 4019991065,
        "params": [
          {
            "name": "background_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputBackground"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of hashtags"
        },
        {
          "name": "hashtags",
          "value": "A list of hashtags"
        }
      ],
      "definition": {
        "name": "hashtags",
        "id": 1814825697,
        "params": [
          {
            "name": "hashtags",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Hashtags"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The session can be used"
        }
      ],
      "definition": {
        "name": "canTransferOwnershipResultOk",
        "id": 4205086275,
        "type": {
          "name": "CanTransferOwnershipResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The 2-step verification needs to be enabled first"
        }
      ],
      "definition": {
        "name": "canTransferOwnershipResultPasswordNeeded",
        "id": 1548372703,
        "type": {
          "name": "CanTransferOwnershipResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The 2-step verification was enabled recently, user needs to wait"
        },
        {
          "name": "retry_after",
          "value": "Time left before the session can be used to transfer ownership of a chat, in seconds"
        }
      ],
      "definition": {
        "name": "canTransferOwnershipResultPasswordTooFresh",
        "id": 811440913,
        "params": [
          {
            "name": "retry_after",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CanTransferOwnershipResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The session was created recently, user needs to wait"
        },
        {
          "name": "retry_after",
          "value": "Time left before the session can be used to transfer ownership of a chat, in seconds"
        }
      ],
      "definition": {
        "name": "canTransferOwnershipResultSessionTooFresh",
        "id": 984664289,
        "params": [
          {
            "name": "retry_after",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CanTransferOwnershipResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The username can be set"
        }
      ],
      "definition": {
        "name": "checkChatUsernameResultOk",
        "id": 2796010332,
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The username is invalid"
        }
      ],
      "definition": {
        "name": "checkChatUsernameResultUsernameInvalid",
        "id": 3657987926,
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The username is occupied"
        }
      ],
      "definition": {
        "name": "checkChatUsernameResultUsernameOccupied",
        "id": 1320892201,
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has too much chats with username, one of them should be made private first"
        }
      ],
      "definition": {
        "name": "checkChatUsernameResultPublicChatsTooMuch",
        "id": 858247741,
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user can't be a member of a public supergroup"
        }
      ],
      "definition": {
        "name": "checkChatUsernameResultPublicGroupsUnavailable",
        "id": 4243133655,
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A general message with hidden content"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentHidden",
        "id": 3978016860,
        "params": [
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animation message (GIF-style)."
        },
        {
          "name": "animation",
          "value": "Message content; may be null"
        },
        {
          "name": "caption",
          "value": "Animation caption"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentAnimation",
        "id": 1034215396,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "animation",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An audio message"
        },
        {
          "name": "audio",
          "value": "Message content; may be null"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentAudio",
        "id": 381581426,
        "params": [
          {
            "name": "audio",
            "type": {
              "name": "audio",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a user contact"
        },
        {
          "name": "name",
          "value": "Contact's name"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentContact",
        "id": 4282747476,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A contact has registered with Telegram"
        }
      ],
      "definition": {
        "name": "pushMessageContentContactRegistered",
        "id": 3991004576,
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A document message (a general file)"
        },
        {
          "name": "document",
          "value": "Message content; may be null"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentDocument",
        "id": 3836587521,
        "params": [
          {
            "name": "document",
            "type": {
              "name": "document",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a game"
        },
        {
          "name": "title",
          "value": "Game title, empty for pinned game message"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentGame",
        "id": 3779836187,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new high score was achieved in a game"
        },
        {
          "name": "title",
          "value": "Game title, empty for pinned message"
        },
        {
          "name": "score",
          "value": "New score, 0 for pinned message"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentGameScore",
        "id": 901303688,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "score",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with an invoice from a bot"
        },
        {
          "name": "price",
          "value": "Product price"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentInvoice",
        "id": 2563279804,
        "params": [
          {
            "name": "price",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a location"
        },
        {
          "name": "is_live",
          "value": "True, if the location is live"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentLocation",
        "id": 3006961587,
        "params": [
          {
            "name": "is_live",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A photo message"
        },
        {
          "name": "photo",
          "value": "Message content; may be null"
        },
        {
          "name": "caption",
          "value": "Photo caption"
        },
        {
          "name": "is_secret",
          "value": "True, if the photo is secret"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentPhoto",
        "id": 140631122,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "photo",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a poll"
        },
        {
          "name": "question",
          "value": "Poll question"
        },
        {
          "name": "is_regular",
          "value": "True, if the poll is regular and not in quiz mode"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentPoll",
        "id": 4250563642,
        "params": [
          {
            "name": "question",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_regular",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A screenshot of a message in the chat has been taken"
        }
      ],
      "definition": {
        "name": "pushMessageContentScreenshotTaken",
        "id": 214245369,
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a sticker"
        },
        {
          "name": "sticker",
          "value": "Message content; may be null"
        },
        {
          "name": "emoji",
          "value": "Emoji corresponding to the sticker; may be empty"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentSticker",
        "id": 1553513939,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "sticker",
              "bare": true
            }
          },
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A text message"
        },
        {
          "name": "text",
          "value": "Message text"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentText",
        "id": 274587305,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video message"
        },
        {
          "name": "video",
          "value": "Message content; may be null"
        },
        {
          "name": "caption",
          "value": "Video caption"
        },
        {
          "name": "is_secret",
          "value": "True, if the video is secret"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentVideo",
        "id": 310038831,
        "params": [
          {
            "name": "video",
            "type": {
              "name": "video",
              "bare": true
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_secret",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A video note message"
        },
        {
          "name": "video_note",
          "value": "Message content; may be null"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentVideoNote",
        "id": 3172202879,
        "params": [
          {
            "name": "video_note",
            "type": {
              "name": "videoNote",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A voice note message"
        },
        {
          "name": "voice_note",
          "value": "Message content; may be null"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is a pinned message with the specified content"
        }
      ],
      "definition": {
        "name": "pushMessageContentVoiceNote",
        "id": 88910987,
        "params": [
          {
            "name": "voice_note",
            "type": {
              "name": "voiceNote",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A newly created basic group"
        }
      ],
      "definition": {
        "name": "pushMessageContentBasicGroupChatCreate",
        "id": 2180112124,
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New chat members were invited to a group"
        },
        {
          "name": "member_name",
          "value": "Name of the added member"
        },
        {
          "name": "is_current_user",
          "value": "True, if the current user was added to the group"
        },
        {
          "name": "is_returned",
          "value": "True, if the user has returned to the group themself"
        }
      ],
      "definition": {
        "name": "pushMessageContentChatAddMembers",
        "id": 3207822138,
        "params": [
          {
            "name": "member_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_current_user",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_returned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat photo was edited"
        }
      ],
      "definition": {
        "name": "pushMessageContentChatChangePhoto",
        "id": 3180745245,
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat title was edited"
        },
        {
          "name": "title",
          "value": "New chat title"
        }
      ],
      "definition": {
        "name": "pushMessageContentChatChangeTitle",
        "id": 2330064547,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat member was deleted"
        },
        {
          "name": "member_name",
          "value": "Name of the deleted member"
        },
        {
          "name": "is_current_user",
          "value": "True, if the current user was deleted from the group"
        },
        {
          "name": "is_left",
          "value": "True, if the user has left the group themself"
        }
      ],
      "definition": {
        "name": "pushMessageContentChatDeleteMember",
        "id": 598714783,
        "params": [
          {
            "name": "member_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_current_user",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_left",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new member joined the chat by invite link"
        }
      ],
      "definition": {
        "name": "pushMessageContentChatJoinByLink",
        "id": 1553719113,
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A forwarded messages"
        },
        {
          "name": "total_count",
          "value": "Number of forwarded messages"
        }
      ],
      "definition": {
        "name": "pushMessageContentMessageForwards",
        "id": 2381883420,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A media album"
        },
        {
          "name": "total_count",
          "value": "Number of messages in the album"
        },
        {
          "name": "has_photos",
          "value": "True, if the album has at least one photo"
        },
        {
          "name": "has_videos",
          "value": "True, if the album has at least one video"
        },
        {
          "name": "has_audios",
          "value": "True, if the album has at least one audio file"
        },
        {
          "name": "has_documents",
          "value": "True, if the album has at least one document"
        }
      ],
      "definition": {
        "name": "pushMessageContentMediaAlbum",
        "id": 3546540399,
        "params": [
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "has_photos",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_videos",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_audios",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "has_documents",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "PushMessageContent"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New message was received"
        },
        {
          "name": "message",
          "value": "The message"
        }
      ],
      "definition": {
        "name": "notificationTypeNewMessage",
        "id": 1885935159,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "NotificationType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New secret chat was created"
        }
      ],
      "definition": {
        "name": "notificationTypeNewSecretChat",
        "id": 1198638768,
        "type": {
          "name": "NotificationType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New call was received"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        }
      ],
      "definition": {
        "name": "notificationTypeNewCall",
        "id": 1712734585,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "NotificationType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New message was received through a push notification"
        },
        {
          "name": "message_id",
          "value": "The message identifier. The message will not be available in the chat history, but the ID can be used in viewMessages, or as reply_to_message_id"
        },
        {
          "name": "sender",
          "value": "The sender of the message. Corresponding user or chat may be inaccessible"
        },
        {
          "name": "sender_name",
          "value": "Name of the sender"
        },
        {
          "name": "is_outgoing",
          "value": "True, if the message is outgoing"
        },
        {
          "name": "content",
          "value": "Push message content"
        }
      ],
      "definition": {
        "name": "notificationTypeNewPushMessage",
        "id": 2295116414,
        "params": [
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "sender",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "sender_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_outgoing",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "content",
            "type": {
              "name": "PushMessageContent"
            }
          }
        ],
        "type": {
          "name": "NotificationType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with ordinary unread messages"
        }
      ],
      "definition": {
        "name": "notificationGroupTypeMessages",
        "id": 2592486173,
        "type": {
          "name": "NotificationGroupType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A group containing notifications of type notificationTypeNewMessage and notificationTypeNewPushMessage with unread mentions of the current user, replies to their messages, or a pinned message"
        }
      ],
      "definition": {
        "name": "notificationGroupTypeMentions",
        "id": 2244643245,
        "type": {
          "name": "NotificationGroupType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A group containing a notification of type notificationTypeNewSecretChat"
        }
      ],
      "definition": {
        "name": "notificationGroupTypeSecretChat",
        "id": 1390759476,
        "type": {
          "name": "NotificationGroupType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A group containing notifications of type notificationTypeNewCall"
        }
      ],
      "definition": {
        "name": "notificationGroupTypeCalls",
        "id": 1379123538,
        "type": {
          "name": "NotificationGroupType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a notification"
        },
        {
          "name": "id",
          "value": "Unique persistent identifier of this notification"
        },
        {
          "name": "date",
          "value": "Notification date"
        },
        {
          "name": "is_silent",
          "value": "True, if the notification was initially silent"
        },
        {
          "name": "type",
          "value": "Notification type"
        }
      ],
      "definition": {
        "name": "notification",
        "id": 788743120,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_silent",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "NotificationType"
            }
          }
        ],
        "type": {
          "name": "Notification"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes a group of notifications"
        },
        {
          "name": "id",
          "value": "Unique persistent auto-incremented from 1 identifier of the notification group"
        },
        {
          "name": "type",
          "value": "Type of the group"
        },
        {
          "name": "chat_id",
          "value": "Identifier of a chat to which all notifications in the group belong"
        },
        {
          "name": "total_count",
          "value": "Total number of active notifications in the group"
        },
        {
          "name": "notifications",
          "value": "The list of active notifications"
        }
      ],
      "definition": {
        "name": "notificationGroup",
        "id": 3492430266,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "NotificationGroupType"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "notifications",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "notification",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "NotificationGroup"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a boolean option"
        },
        {
          "name": "value",
          "value": "The value of the option"
        }
      ],
      "definition": {
        "name": "optionValueBoolean",
        "id": 63135518,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "OptionValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents an unknown option or an option which has a default value"
        }
      ],
      "definition": {
        "name": "optionValueEmpty",
        "id": 918955155,
        "type": {
          "name": "OptionValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents an integer option"
        },
        {
          "name": "value",
          "value": "The value of the option"
        }
      ],
      "definition": {
        "name": "optionValueInteger",
        "id": 4108108516,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "OptionValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a string option"
        },
        {
          "name": "value",
          "value": "The value of the option"
        }
      ],
      "definition": {
        "name": "optionValueString",
        "id": 756248212,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "OptionValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents one member of a JSON object"
        },
        {
          "name": "key",
          "value": "Member's key"
        },
        {
          "name": "value",
          "value": "Member's value"
        }
      ],
      "definition": {
        "name": "jsonObjectMember",
        "id": 2491657878,
        "params": [
          {
            "name": "key",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "value",
            "type": {
              "name": "JsonValue"
            }
          }
        ],
        "type": {
          "name": "JsonObjectMember"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a null JSON value"
        }
      ],
      "definition": {
        "name": "jsonValueNull",
        "id": 4202094797,
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a boolean JSON value"
        },
        {
          "name": "value",
          "value": "The value"
        }
      ],
      "definition": {
        "name": "jsonValueBoolean",
        "id": 2152780720,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a numeric JSON value"
        },
        {
          "name": "value",
          "value": "The value"
        }
      ],
      "definition": {
        "name": "jsonValueNumber",
        "id": 3284145263,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a string JSON value"
        },
        {
          "name": "value",
          "value": "The value"
        }
      ],
      "definition": {
        "name": "jsonValueString",
        "id": 1597947313,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a JSON array"
        },
        {
          "name": "values",
          "value": "The list of array elements"
        }
      ],
      "definition": {
        "name": "jsonValueArray",
        "id": 3972903128,
        "params": [
          {
            "name": "values",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "JsonValue"
              }
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a JSON object"
        },
        {
          "name": "members",
          "value": "The list of object members"
        }
      ],
      "definition": {
        "name": "jsonValueObject",
        "id": 3330015040,
        "params": [
          {
            "name": "members",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "jsonObjectMember",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to allow all users to do something"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleAllowAll",
        "id": 2327780415,
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to allow all of a user's contacts to do something"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleAllowContacts",
        "id": 2402233616,
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to allow certain specified users to do something"
        },
        {
          "name": "user_ids",
          "value": "The user identifiers, total number of users in all rules must not exceed 1000"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleAllowUsers",
        "id": 3127320191,
        "params": [
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to allow all members of certain specified basic groups and supergroups to doing something"
        },
        {
          "name": "chat_ids",
          "value": "The chat identifiers, total number of chats in all rules must not exceed 20"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleAllowChatMembers",
        "id": 4064917015,
        "params": [
          {
            "name": "chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to restrict all users from doing something"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleRestrictAll",
        "id": 2888471888,
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to restrict all contacts of a user from doing something"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleRestrictContacts",
        "id": 1008389378,
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to restrict all specified users from doing something"
        },
        {
          "name": "user_ids",
          "value": "The user identifiers, total number of users in all rules must not exceed 1000"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleRestrictUsers",
        "id": 638140318,
        "params": [
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A rule to restrict all members of specified basic groups and supergroups from doing something"
        },
        {
          "name": "chat_ids",
          "value": "The chat identifiers, total number of chats in all rules must not exceed 20"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRuleRestrictChatMembers",
        "id": 4227905824,
        "params": [
          {
            "name": "chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRule"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A list of privacy rules. Rules are matched in the specified order. The first matched rule defines the privacy setting for a given user. If no rule matches, the action is not allowed"
        },
        {
          "name": "rules",
          "value": "A list of rules"
        }
      ],
      "definition": {
        "name": "userPrivacySettingRules",
        "id": 1113484087,
        "params": [
          {
            "name": "rules",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "UserPrivacySettingRule"
              }
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRules"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user's online status is visible"
        }
      ],
      "definition": {
        "name": "userPrivacySettingShowStatus",
        "id": 1862829310,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user's profile photo is visible"
        }
      ],
      "definition": {
        "name": "userPrivacySettingShowProfilePhoto",
        "id": 1408485877,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether a link to the user's account is included in forwarded messages"
        }
      ],
      "definition": {
        "name": "userPrivacySettingShowLinkInForwardedMessages",
        "id": 592688870,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user's phone number is visible"
        }
      ],
      "definition": {
        "name": "userPrivacySettingShowPhoneNumber",
        "id": 3503399465,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user can be invited to chats"
        }
      ],
      "definition": {
        "name": "userPrivacySettingAllowChatInvites",
        "id": 1271668007,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user can be called"
        }
      ],
      "definition": {
        "name": "userPrivacySettingAllowCalls",
        "id": 3388000005,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether peer-to-peer connections can be used for calls"
        }
      ],
      "definition": {
        "name": "userPrivacySettingAllowPeerToPeerCalls",
        "id": 352500032,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A privacy setting for managing whether the user can be found by their phone number. Checked only if the phone number is not known to the other user. Can be set only to \"Allow contacts\" or \"Allow all\""
        }
      ],
      "definition": {
        "name": "userPrivacySettingAllowFindingByPhoneNumber",
        "id": 2448321873,
        "type": {
          "name": "UserPrivacySetting"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about the period of inactivity after which the current user's account will automatically be deleted"
        },
        {
          "name": "days",
          "value": "Number of days of inactivity before the account will be flagged for deletion; should range from 30-366 days"
        }
      ],
      "definition": {
        "name": "accountTtl",
        "id": 1324495492,
        "params": [
          {
            "name": "days",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AccountTtl"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about one session in a Telegram application used by the current user. Sessions should be shown to the user in the returned order"
        },
        {
          "name": "id",
          "value": "Session identifier"
        },
        {
          "name": "is_current",
          "value": "True, if this session is the current session"
        },
        {
          "name": "is_password_pending",
          "value": "True, if a password is needed to complete authorization of the session"
        },
        {
          "name": "api_id",
          "value": "Telegram API identifier, as provided by the application"
        },
        {
          "name": "application_name",
          "value": "Name of the application, as provided by the application"
        },
        {
          "name": "application_version",
          "value": "The version of the application, as provided by the application"
        },
        {
          "name": "is_official_application",
          "value": "True, if the application is an official application or uses the api_id of an official application"
        },
        {
          "name": "device_model",
          "value": "Model of the device the application has been run or is running on, as provided by the application"
        },
        {
          "name": "platform",
          "value": "Operating system the application has been run or is running on, as provided by the application"
        },
        {
          "name": "system_version",
          "value": "Version of the operating system the application has been run or is running on, as provided by the application"
        },
        {
          "name": "log_in_date",
          "value": "Point in time (Unix timestamp) when the user has logged in"
        },
        {
          "name": "last_active_date",
          "value": "Point in time (Unix timestamp) when the session was last used"
        },
        {
          "name": "ip",
          "value": "IP address from which the session was created, in human-readable format"
        },
        {
          "name": "country",
          "value": "A two-letter country code for the country from which the session was created, based on the IP address"
        },
        {
          "name": "region",
          "value": "Region code from which the session was created, based on the IP address"
        }
      ],
      "definition": {
        "name": "session",
        "id": 1920553176,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "is_current",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_password_pending",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "api_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "application_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "application_version",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_official_application",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "device_model",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "platform",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "system_version",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "log_in_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "last_active_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "ip",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "country",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "region",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Session"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of sessions"
        },
        {
          "name": "sessions",
          "value": "List of sessions"
        }
      ],
      "definition": {
        "name": "sessions",
        "id": 497097838,
        "params": [
          {
            "name": "sessions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "session",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Sessions"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about one website the current user is logged in with Telegram"
        },
        {
          "name": "id",
          "value": "Website identifier"
        },
        {
          "name": "domain_name",
          "value": "The domain name of the website"
        },
        {
          "name": "bot_user_id",
          "value": "User identifier of a bot linked with the website"
        },
        {
          "name": "browser",
          "value": "The version of a browser used to log in"
        },
        {
          "name": "platform",
          "value": "Operating system the browser is running on"
        },
        {
          "name": "log_in_date",
          "value": "Point in time (Unix timestamp) when the user was logged in"
        },
        {
          "name": "last_active_date",
          "value": "Point in time (Unix timestamp) when obtained authorization was last used"
        },
        {
          "name": "ip",
          "value": "IP address from which the user was logged in, in human-readable format"
        },
        {
          "name": "location",
          "value": "Human-readable description of a country and a region, from which the user was logged in, based on the IP address"
        }
      ],
      "definition": {
        "name": "connectedWebsite",
        "id": 2755980441,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "domain_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "browser",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "platform",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "log_in_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "last_active_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "ip",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ConnectedWebsite"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of websites the current user is logged in with Telegram"
        },
        {
          "name": "websites",
          "value": "List of connected websites"
        }
      ],
      "definition": {
        "name": "connectedWebsites",
        "id": 4039685610,
        "params": [
          {
            "name": "websites",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "connectedWebsite",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ConnectedWebsites"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat contains spam messages"
        }
      ],
      "definition": {
        "name": "chatReportReasonSpam",
        "id": 3784118433,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat promotes violence"
        }
      ],
      "definition": {
        "name": "chatReportReasonViolence",
        "id": 2964731901,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat contains pornographic messages"
        }
      ],
      "definition": {
        "name": "chatReportReasonPornography",
        "id": 722614385,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat has child abuse related content"
        }
      ],
      "definition": {
        "name": "chatReportReasonChildAbuse",
        "id": 3224280765,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat contains copyrighted content"
        }
      ],
      "definition": {
        "name": "chatReportReasonCopyright",
        "id": 986898080,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The location-based chat is unrelated to its stated location"
        }
      ],
      "definition": {
        "name": "chatReportReasonUnrelatedLocation",
        "id": 2632403,
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A custom reason provided by the user"
        },
        {
          "name": "text",
          "value": "Report text"
        }
      ],
      "definition": {
        "name": "chatReportReasonCustom",
        "id": 544575454,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatReportReason"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains an HTTPS link to a message in a supergroup or channel"
        },
        {
          "name": "link",
          "value": "Message link"
        },
        {
          "name": "is_public",
          "value": "True, if the link will work for non-members of the chat"
        }
      ],
      "definition": {
        "name": "messageLink",
        "id": 2940877478,
        "params": [
          {
            "name": "link",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_public",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageLink"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a link to a message in a chat"
        },
        {
          "name": "is_public",
          "value": "True, if the link is a public link for a message in a chat"
        },
        {
          "name": "chat_id",
          "value": "If found, identifier of the chat to which the message belongs, 0 otherwise"
        },
        {
          "name": "message",
          "value": "If found, the linked message; may be null"
        },
        {
          "name": "for_album",
          "value": "True, if the whole media album to which the message belongs is linked"
        },
        {
          "name": "for_comment",
          "value": "True, if the message is linked as a channel post comment or from a message thread"
        }
      ],
      "definition": {
        "name": "messageLinkInfo",
        "id": 3292624767,
        "params": [
          {
            "name": "is_public",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "for_album",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "for_comment",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageLinkInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a part of a file"
        },
        {
          "name": "data",
          "value": "File bytes"
        }
      ],
      "definition": {
        "name": "filePart",
        "id": 911821878,
        "params": [
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FilePart"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The data is not a file"
        }
      ],
      "definition": {
        "name": "fileTypeNone",
        "id": 2003009189,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is an animation"
        }
      ],
      "definition": {
        "name": "fileTypeAnimation",
        "id": 4004150714,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is an audio file"
        }
      ],
      "definition": {
        "name": "fileTypeAudio",
        "id": 3585855136,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a document"
        }
      ],
      "definition": {
        "name": "fileTypeDocument",
        "id": 3730244367,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a photo"
        }
      ],
      "definition": {
        "name": "fileTypePhoto",
        "id": 2576052645,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a profile photo"
        }
      ],
      "definition": {
        "name": "fileTypeProfilePhoto",
        "id": 1795089315,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file was sent to a secret chat (the file type is not known to the server)"
        }
      ],
      "definition": {
        "name": "fileTypeSecret",
        "id": 2423067895,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a thumbnail of a file from a secret chat"
        }
      ],
      "definition": {
        "name": "fileTypeSecretThumbnail",
        "id": 2893641270,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a file from Secure storage used for storing Telegram Passport files"
        }
      ],
      "definition": {
        "name": "fileTypeSecure",
        "id": 2875834150,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a sticker"
        }
      ],
      "definition": {
        "name": "fileTypeSticker",
        "id": 475233385,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a thumbnail of another file"
        }
      ],
      "definition": {
        "name": "fileTypeThumbnail",
        "id": 4282523998,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file type is not yet known"
        }
      ],
      "definition": {
        "name": "fileTypeUnknown",
        "id": 2283400528,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a video"
        }
      ],
      "definition": {
        "name": "fileTypeVideo",
        "id": 1430816539,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a video note"
        }
      ],
      "definition": {
        "name": "fileTypeVideoNote",
        "id": 3776554911,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a voice note"
        }
      ],
      "definition": {
        "name": "fileTypeVoiceNote",
        "id": 3706285635,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file is a wallpaper or a background pattern"
        }
      ],
      "definition": {
        "name": "fileTypeWallpaper",
        "id": 1854930076,
        "type": {
          "name": "FileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the storage usage statistics for a specific file type"
        },
        {
          "name": "file_type",
          "value": "File type"
        },
        {
          "name": "size",
          "value": "Total size of the files"
        },
        {
          "name": "count",
          "value": "Total number of files"
        }
      ],
      "definition": {
        "name": "storageStatisticsByFileType",
        "id": 714012840,
        "params": [
          {
            "name": "file_type",
            "type": {
              "name": "FileType"
            }
          },
          {
            "name": "size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StorageStatisticsByFileType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the storage usage statistics for a specific chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier; 0 if none"
        },
        {
          "name": "size",
          "value": "Total size of the files in the chat"
        },
        {
          "name": "count",
          "value": "Total number of files in the chat"
        },
        {
          "name": "by_file_type",
          "value": "Statistics split by file types"
        }
      ],
      "definition": {
        "name": "storageStatisticsByChat",
        "id": 2773061604,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "by_file_type",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "storageStatisticsByFileType",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "StorageStatisticsByChat"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains the exact storage usage statistics split by chats and file type"
        },
        {
          "name": "size",
          "value": "Total size of files"
        },
        {
          "name": "count",
          "value": "Total number of files"
        },
        {
          "name": "by_chat",
          "value": "Statistics split by chats"
        }
      ],
      "definition": {
        "name": "storageStatistics",
        "id": 1773766258,
        "params": [
          {
            "name": "size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "by_chat",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "storageStatisticsByChat",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "StorageStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains approximate storage usage statistics, excluding files of unknown file type"
        },
        {
          "name": "files_size",
          "value": "Approximate total size of files"
        },
        {
          "name": "file_count",
          "value": "Approximate number of files"
        },
        {
          "name": "database_size",
          "value": "Size of the database"
        },
        {
          "name": "language_pack_database_size",
          "value": "Size of the language pack database"
        },
        {
          "name": "log_size",
          "value": "Size of the TDLib internal log"
        }
      ],
      "definition": {
        "name": "storageStatisticsFast",
        "id": 3410045025,
        "params": [
          {
            "name": "files_size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "file_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "database_size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "language_pack_database_size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "log_size",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StorageStatisticsFast"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains database statistics"
        },
        {
          "name": "statistics",
          "value": "Database statistics in an unspecified human-readable format"
        }
      ],
      "definition": {
        "name": "databaseStatistics",
        "id": 3171054416,
        "params": [
          {
            "name": "statistics",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DatabaseStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The network is not available"
        }
      ],
      "definition": {
        "name": "networkTypeNone",
        "id": 2323275537,
        "type": {
          "name": "NetworkType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mobile network"
        }
      ],
      "definition": {
        "name": "networkTypeMobile",
        "id": 819228239,
        "type": {
          "name": "NetworkType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A mobile roaming network"
        }
      ],
      "definition": {
        "name": "networkTypeMobileRoaming",
        "id": 2859767536,
        "type": {
          "name": "NetworkType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A Wi-Fi network"
        }
      ],
      "definition": {
        "name": "networkTypeWiFi",
        "id": 3661095226,
        "type": {
          "name": "NetworkType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A different network type (e.g., Ethernet network)"
        }
      ],
      "definition": {
        "name": "networkTypeOther",
        "id": 1942128539,
        "type": {
          "name": "NetworkType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about the total amount of data that was used to send and receive files"
        },
        {
          "name": "file_type",
          "value": "Type of the file the data is part of"
        },
        {
          "name": "network_type",
          "value": "Type of the network the data was sent through. Call setNetworkType to maintain the actual network type"
        },
        {
          "name": "sent_bytes",
          "value": "Total number of bytes sent"
        },
        {
          "name": "received_bytes",
          "value": "Total number of bytes received"
        }
      ],
      "definition": {
        "name": "networkStatisticsEntryFile",
        "id": 188452706,
        "params": [
          {
            "name": "file_type",
            "type": {
              "name": "FileType"
            }
          },
          {
            "name": "network_type",
            "type": {
              "name": "NetworkType"
            }
          },
          {
            "name": "sent_bytes",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "received_bytes",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "NetworkStatisticsEntry"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about the total amount of data that was used for calls"
        },
        {
          "name": "network_type",
          "value": "Type of the network the data was sent through. Call setNetworkType to maintain the actual network type"
        },
        {
          "name": "sent_bytes",
          "value": "Total number of bytes sent"
        },
        {
          "name": "received_bytes",
          "value": "Total number of bytes received"
        },
        {
          "name": "duration",
          "value": "Total call duration, in seconds"
        }
      ],
      "definition": {
        "name": "networkStatisticsEntryCall",
        "id": 737000365,
        "params": [
          {
            "name": "network_type",
            "type": {
              "name": "NetworkType"
            }
          },
          {
            "name": "sent_bytes",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "received_bytes",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "NetworkStatisticsEntry"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A full list of available network statistic entries"
        },
        {
          "name": "since_date",
          "value": "Point in time (Unix timestamp) from which the statistics are collected"
        },
        {
          "name": "entries",
          "value": "Network statistics entries"
        }
      ],
      "definition": {
        "name": "networkStatistics",
        "id": 3630877500,
        "params": [
          {
            "name": "since_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "entries",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "NetworkStatisticsEntry"
              }
            }
          }
        ],
        "type": {
          "name": "NetworkStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains auto-download settings"
        },
        {
          "name": "is_auto_download_enabled",
          "value": "True, if the auto-download is enabled"
        },
        {
          "name": "max_photo_file_size",
          "value": "The maximum size of a photo file to be auto-downloaded"
        },
        {
          "name": "max_video_file_size",
          "value": "The maximum size of a video file to be auto-downloaded"
        },
        {
          "name": "max_other_file_size",
          "value": "The maximum size of other file types to be auto-downloaded"
        },
        {
          "name": "video_upload_bitrate",
          "value": "The maximum suggested bitrate for uploaded videos"
        },
        {
          "name": "preload_large_videos",
          "value": "True, if the beginning of video files needs to be preloaded for instant playback"
        },
        {
          "name": "preload_next_audio",
          "value": "True, if the next audio track needs to be preloaded while the user is listening to an audio file"
        },
        {
          "name": "use_less_data_for_calls",
          "value": "True, if \"use less data for calls\" option needs to be enabled"
        }
      ],
      "definition": {
        "name": "autoDownloadSettings",
        "id": 2150548963,
        "params": [
          {
            "name": "is_auto_download_enabled",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "max_photo_file_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "max_video_file_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "max_other_file_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "video_upload_bitrate",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "preload_large_videos",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "preload_next_audio",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "use_less_data_for_calls",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "AutoDownloadSettings"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains auto-download settings presets for the user"
        },
        {
          "name": "low",
          "value": "Preset with lowest settings; supposed to be used by default when roaming"
        },
        {
          "name": "medium",
          "value": "Preset with medium settings; supposed to be used by default when using mobile data"
        },
        {
          "name": "high",
          "value": "Preset with highest settings; supposed to be used by default when connected on Wi-Fi"
        }
      ],
      "definition": {
        "name": "autoDownloadSettingsPresets",
        "id": 3512868130,
        "params": [
          {
            "name": "low",
            "type": {
              "name": "autoDownloadSettings",
              "bare": true
            }
          },
          {
            "name": "medium",
            "type": {
              "name": "autoDownloadSettings",
              "bare": true
            }
          },
          {
            "name": "high",
            "type": {
              "name": "autoDownloadSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AutoDownloadSettingsPresets"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Currently waiting for the network to become available. Use setNetworkType to change the available network type"
        }
      ],
      "definition": {
        "name": "connectionStateWaitingForNetwork",
        "id": 1695405912,
        "type": {
          "name": "ConnectionState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Currently establishing a connection with a proxy server"
        }
      ],
      "definition": {
        "name": "connectionStateConnectingToProxy",
        "id": 4201780057,
        "type": {
          "name": "ConnectionState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Currently establishing a connection to the Telegram servers"
        }
      ],
      "definition": {
        "name": "connectionStateConnecting",
        "id": 2996566626,
        "type": {
          "name": "ConnectionState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Downloading data received while the application was offline"
        }
      ],
      "definition": {
        "name": "connectionStateUpdating",
        "id": 4106863287,
        "type": {
          "name": "ConnectionState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "There is a working connection to the Telegram servers"
        }
      ],
      "definition": {
        "name": "connectionStateReady",
        "id": 48608492,
        "type": {
          "name": "ConnectionState"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used private chats with non-bot users"
        }
      ],
      "definition": {
        "name": "topChatCategoryUsers",
        "id": 1026706816,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used private chats with bot users"
        }
      ],
      "definition": {
        "name": "topChatCategoryBots",
        "id": 2717838101,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used basic groups and supergroups"
        }
      ],
      "definition": {
        "name": "topChatCategoryGroups",
        "id": 1530056846,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used channels"
        }
      ],
      "definition": {
        "name": "topChatCategoryChannels",
        "id": 3794141411,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used chats with inline bots sorted by their usage in inline mode"
        }
      ],
      "definition": {
        "name": "topChatCategoryInlineBots",
        "id": 377023356,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used chats used for calls"
        }
      ],
      "definition": {
        "name": "topChatCategoryCalls",
        "id": 356208861,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A category containing frequently used chats used to forward messages"
        }
      ],
      "definition": {
        "name": "topChatCategoryForwardChats",
        "id": 1695922133,
        "type": {
          "name": "TopChatCategory"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A URL linking to a user"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user"
        }
      ],
      "definition": {
        "name": "tMeUrlTypeUser",
        "id": 3096267166,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TMeUrlType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A URL linking to a public supergroup or channel"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup or channel"
        }
      ],
      "definition": {
        "name": "tMeUrlTypeSupergroup",
        "id": 2941597352,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TMeUrlType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat invite link"
        },
        {
          "name": "info",
          "value": "Chat invite link info"
        }
      ],
      "definition": {
        "name": "tMeUrlTypeChatInvite",
        "id": 313907785,
        "params": [
          {
            "name": "info",
            "type": {
              "name": "chatInviteLinkInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TMeUrlType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A URL linking to a sticker set"
        },
        {
          "name": "sticker_set_id",
          "value": "Identifier of the sticker set"
        }
      ],
      "definition": {
        "name": "tMeUrlTypeStickerSet",
        "id": 1602473196,
        "params": [
          {
            "name": "sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TMeUrlType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a URL linking to an internal Telegram entity"
        },
        {
          "name": "url",
          "value": "URL"
        },
        {
          "name": "type",
          "value": "Type of the URL"
        }
      ],
      "definition": {
        "name": "tMeUrl",
        "id": 3154180674,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "TMeUrlType"
            }
          }
        ],
        "type": {
          "name": "TMeUrl"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of t.me URLs"
        },
        {
          "name": "urls",
          "value": "List of URLs"
        }
      ],
      "definition": {
        "name": "tMeUrls",
        "id": 1700470610,
        "params": [
          {
            "name": "urls",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "tMeUrl",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TMeUrls"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Suggests the user to enable \"archive_and_mute_new_chats_from_unknown_users\" option"
        }
      ],
      "definition": {
        "name": "suggestedActionEnableArchiveAndMuteNewChats",
        "id": 2017586255,
        "type": {
          "name": "SuggestedAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Suggests the user to check authorization phone number and change the phone number if it is inaccessible"
        }
      ],
      "definition": {
        "name": "suggestedActionCheckPhoneNumber",
        "id": 648771563,
        "type": {
          "name": "SuggestedAction"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a counter"
        },
        {
          "name": "count",
          "value": "Count"
        }
      ],
      "definition": {
        "name": "count",
        "id": 1295577348,
        "params": [
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Count"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains some text"
        },
        {
          "name": "text",
          "value": "Text"
        }
      ],
      "definition": {
        "name": "text",
        "id": 578181272,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a value representing a number of seconds"
        },
        {
          "name": "seconds",
          "value": "Number of seconds"
        }
      ],
      "definition": {
        "name": "seconds",
        "id": 959899022,
        "params": [
          {
            "name": "seconds",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Seconds"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a tg:// deep link"
        },
        {
          "name": "text",
          "value": "Text to be shown to the user"
        },
        {
          "name": "need_update_application",
          "value": "True, if user should be asked to update the application"
        }
      ],
      "definition": {
        "name": "deepLinkInfo",
        "id": 1864081662,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          },
          {
            "name": "need_update_application",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "DeepLinkInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The text uses Markdown-style formatting"
        },
        {
          "name": "version",
          "value": "Version of the parser: 0 or 1 - Telegram Bot API \"Markdown\" parse mode, 2 - Telegram Bot API \"MarkdownV2\" parse mode"
        }
      ],
      "definition": {
        "name": "textParseModeMarkdown",
        "id": 360073407,
        "params": [
          {
            "name": "version",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TextParseMode"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The text uses HTML-style formatting. The same as Telegram Bot API \"HTML\" parse mode"
        }
      ],
      "definition": {
        "name": "textParseModeHTML",
        "id": 1660208627,
        "type": {
          "name": "TextParseMode"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A SOCKS5 proxy server"
        },
        {
          "name": "username",
          "value": "Username for logging in; may be empty"
        },
        {
          "name": "password",
          "value": "Password for logging in; may be empty"
        }
      ],
      "definition": {
        "name": "proxyTypeSocks5",
        "id": 3404939955,
        "params": [
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ProxyType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A HTTP transparent proxy server"
        },
        {
          "name": "username",
          "value": "Username for logging in; may be empty"
        },
        {
          "name": "password",
          "value": "Password for logging in; may be empty"
        },
        {
          "name": "http_only",
          "value": "Pass true if the proxy supports only HTTP requests and doesn't support transparent TCP connections via HTTP CONNECT method"
        }
      ],
      "definition": {
        "name": "proxyTypeHttp",
        "id": 2747778935,
        "params": [
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "http_only",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ProxyType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An MTProto proxy server"
        },
        {
          "name": "secret",
          "value": "The proxy's secret in hexadecimal encoding"
        }
      ],
      "definition": {
        "name": "proxyTypeMtproto",
        "id": 2330140669,
        "params": [
          {
            "name": "secret",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ProxyType"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains information about a proxy server"
        },
        {
          "name": "id",
          "value": "Unique identifier of the proxy"
        },
        {
          "name": "server",
          "value": "Proxy server IP address"
        },
        {
          "name": "port",
          "value": "Proxy server port"
        },
        {
          "name": "last_used_date",
          "value": "Point in time (Unix timestamp) when the proxy was last used; 0 if never"
        },
        {
          "name": "is_enabled",
          "value": "True, if the proxy is enabled now"
        },
        {
          "name": "type",
          "value": "Type of the proxy"
        }
      ],
      "definition": {
        "name": "proxy",
        "id": 196049779,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "server",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "port",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "last_used_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_enabled",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ProxyType"
            }
          }
        ],
        "type": {
          "name": "Proxy"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a list of proxy servers"
        },
        {
          "name": "proxies",
          "value": "List of proxy servers"
        }
      ],
      "definition": {
        "name": "proxies",
        "id": 1591900806,
        "params": [
          {
            "name": "proxies",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "proxy",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Proxies"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A static sticker in PNG format, which will be converted to WEBP server-side"
        },
        {
          "name": "sticker",
          "value": "PNG image with the sticker; must be up to 512 KB in size and fit in a 512x512 square"
        },
        {
          "name": "emojis",
          "value": "Emojis corresponding to the sticker"
        },
        {
          "name": "mask_position",
          "value": "For masks, position where the mask should be placed; may be null"
        }
      ],
      "definition": {
        "name": "inputStickerStatic",
        "id": 1409680603,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "emojis",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "mask_position",
            "type": {
              "name": "maskPosition",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputSticker"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An animated sticker in TGS format"
        },
        {
          "name": "sticker",
          "value": "File with the animated sticker. Only local or uploaded within a week files are supported. See https://core.telegram.org/animated_stickers#technical-requirements for technical requirements"
        },
        {
          "name": "emojis",
          "value": "Emojis corresponding to the sticker"
        }
      ],
      "definition": {
        "name": "inputStickerAnimated",
        "id": 3167701344,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "emojis",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InputSticker"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Represents a date range"
        },
        {
          "name": "start_date",
          "value": "Point in time (Unix timestamp) at which the date range begins"
        },
        {
          "name": "end_date",
          "value": "Point in time (Unix timestamp) at which the date range ends"
        }
      ],
      "definition": {
        "name": "dateRange",
        "id": 1360333926,
        "params": [
          {
            "name": "start_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "end_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DateRange"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A statistics value"
        },
        {
          "name": "value",
          "value": "The value"
        },
        {
          "name": "previous_value",
          "value": "The value for the previous day"
        },
        {
          "name": "growth_rate_percentage",
          "value": "The growth rate of the value, as a percentage"
        }
      ],
      "definition": {
        "name": "statisticsValue",
        "id": 1147508964,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "previous_value",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "growth_rate_percentage",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StatisticsValue"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A graph data"
        },
        {
          "name": "json_data",
          "value": "Graph data in JSON format"
        },
        {
          "name": "zoom_token",
          "value": "If non-empty, a token which can be used to receive a zoomed in graph"
        }
      ],
      "definition": {
        "name": "statisticsGraphData",
        "id": 2538850070,
        "params": [
          {
            "name": "json_data",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "zoom_token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StatisticsGraph"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The graph data to be asynchronously loaded through getStatisticsGraph"
        },
        {
          "name": "token",
          "value": "The token to use for data loading"
        }
      ],
      "definition": {
        "name": "statisticsGraphAsync",
        "id": 1064479337,
        "params": [
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StatisticsGraph"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An error message to be shown to the user instead of the graph"
        },
        {
          "name": "error_message",
          "value": "The error message"
        }
      ],
      "definition": {
        "name": "statisticsGraphError",
        "id": 4233162865,
        "params": [
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StatisticsGraph"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains statistics about interactions with a message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "view_count",
          "value": "Number of times the message was viewed"
        },
        {
          "name": "forward_count",
          "value": "Number of times the message was forwarded"
        }
      ],
      "definition": {
        "name": "chatStatisticsMessageInteractionInfo",
        "id": 3529386540,
        "params": [
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "view_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "forward_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatStatisticsMessageInteractionInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains statistics about messages sent by a user"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "sent_message_count",
          "value": "Number of sent messages"
        },
        {
          "name": "average_character_count",
          "value": "Average number of characters in sent messages"
        }
      ],
      "definition": {
        "name": "chatStatisticsMessageSenderInfo",
        "id": 1716075179,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sent_message_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "average_character_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatStatisticsMessageSenderInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains statistics about administrator actions done by a user"
        },
        {
          "name": "user_id",
          "value": "Administrator user identifier"
        },
        {
          "name": "deleted_message_count",
          "value": "Number of messages deleted by the administrator"
        },
        {
          "name": "banned_user_count",
          "value": "Number of users banned by the administrator"
        },
        {
          "name": "restricted_user_count",
          "value": "Number of users restricted by the administrator"
        }
      ],
      "definition": {
        "name": "chatStatisticsAdministratorActionsInfo",
        "id": 1988384904,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "deleted_message_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "banned_user_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "restricted_user_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatStatisticsAdministratorActionsInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains statistics about number of new members invited by a user"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "added_member_count",
          "value": "Number of new members invited by the user"
        }
      ],
      "definition": {
        "name": "chatStatisticsInviterInfo",
        "id": 3895449437,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "added_member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatStatisticsInviterInfo"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A detailed statistics about a supergroup chat"
        },
        {
          "name": "period",
          "value": "A period to which the statistics applies"
        },
        {
          "name": "member_count",
          "value": "Number of members in the chat"
        },
        {
          "name": "message_count",
          "value": "Number of messages sent to the chat"
        },
        {
          "name": "viewer_count",
          "value": "Number of users who viewed messages in the chat"
        },
        {
          "name": "sender_count",
          "value": "Number of users who sent messages to the chat"
        },
        {
          "name": "member_count_graph",
          "value": "A graph containing number of members in the chat"
        },
        {
          "name": "join_graph",
          "value": "A graph containing number of members joined and left the chat"
        },
        {
          "name": "join_by_source_graph",
          "value": "A graph containing number of new member joins per source"
        },
        {
          "name": "language_graph",
          "value": "A graph containing distribution of active users per language"
        },
        {
          "name": "message_content_graph",
          "value": "A graph containing distribution of sent messages by content type"
        },
        {
          "name": "action_graph",
          "value": "A graph containing number of different actions in the chat"
        },
        {
          "name": "day_graph",
          "value": "A graph containing distribution of message views per hour"
        },
        {
          "name": "week_graph",
          "value": "A graph containing distribution of message views per day of week"
        },
        {
          "name": "top_senders",
          "value": "List of users sent most messages in the last week"
        },
        {
          "name": "top_administrators",
          "value": "List of most active administrators in the last week"
        },
        {
          "name": "top_inviters",
          "value": "List of most active inviters of new members in the last week"
        }
      ],
      "definition": {
        "name": "chatStatisticsSupergroup",
        "id": 1700490157,
        "params": [
          {
            "name": "period",
            "type": {
              "name": "dateRange",
              "bare": true
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "message_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "viewer_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "sender_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "member_count_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "join_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "join_by_source_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "language_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "message_content_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "action_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "day_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "week_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "top_senders",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatStatisticsMessageSenderInfo",
                "bare": true
              }
            }
          },
          {
            "name": "top_administrators",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatStatisticsAdministratorActionsInfo",
                "bare": true
              }
            }
          },
          {
            "name": "top_inviters",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatStatisticsInviterInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A detailed statistics about a channel chat"
        },
        {
          "name": "period",
          "value": "A period to which the statistics applies"
        },
        {
          "name": "member_count",
          "value": "Number of members in the chat"
        },
        {
          "name": "mean_view_count",
          "value": "Mean number of times the recently sent messages was viewed"
        },
        {
          "name": "mean_share_count",
          "value": "Mean number of times the recently sent messages was shared"
        },
        {
          "name": "enabled_notifications_percentage",
          "value": "A percentage of users with enabled notifications for the chat"
        },
        {
          "name": "member_count_graph",
          "value": "A graph containing number of members in the chat"
        },
        {
          "name": "join_graph",
          "value": "A graph containing number of members joined and left the chat"
        },
        {
          "name": "mute_graph",
          "value": "A graph containing number of members muted and unmuted the chat"
        },
        {
          "name": "view_count_by_hour_graph",
          "value": "A graph containing number of message views in a given hour in the last two weeks"
        },
        {
          "name": "view_count_by_source_graph",
          "value": "A graph containing number of message views per source"
        },
        {
          "name": "join_by_source_graph",
          "value": "A graph containing number of new member joins per source"
        },
        {
          "name": "language_graph",
          "value": "A graph containing number of users viewed chat messages per language"
        },
        {
          "name": "message_interaction_graph",
          "value": "A graph containing number of chat message views and shares"
        },
        {
          "name": "instant_view_interaction_graph",
          "value": "A graph containing number of views of associated with the chat instant views"
        },
        {
          "name": "recent_message_interactions",
          "value": "Detailed statistics about number of views and shares of recently sent messages"
        }
      ],
      "definition": {
        "name": "chatStatisticsChannel",
        "id": 3363039949,
        "params": [
          {
            "name": "period",
            "type": {
              "name": "dateRange",
              "bare": true
            }
          },
          {
            "name": "member_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "mean_view_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "mean_share_count",
            "type": {
              "name": "statisticsValue",
              "bare": true
            }
          },
          {
            "name": "enabled_notifications_percentage",
            "type": {
              "name": "double",
              "bare": true
            }
          },
          {
            "name": "member_count_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "join_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "mute_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "view_count_by_hour_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "view_count_by_source_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "join_by_source_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "language_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "message_interaction_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "instant_view_interaction_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          },
          {
            "name": "recent_message_interactions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatStatisticsMessageInteractionInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A detailed statistics about a message"
        },
        {
          "name": "message_interaction_graph",
          "value": "A graph containing number of message views and shares"
        }
      ],
      "definition": {
        "name": "messageStatistics",
        "id": 1148915634,
        "params": [
          {
            "name": "message_interaction_graph",
            "type": {
              "name": "StatisticsGraph"
            }
          }
        ],
        "type": {
          "name": "MessageStatistics"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user authorization state has changed"
        },
        {
          "name": "authorization_state",
          "value": "New authorization state"
        }
      ],
      "definition": {
        "name": "updateAuthorizationState",
        "id": 1622347490,
        "params": [
          {
            "name": "authorization_state",
            "type": {
              "name": "AuthorizationState"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new message was received; can also be an outgoing message"
        },
        {
          "name": "message",
          "value": "The new message"
        }
      ],
      "definition": {
        "name": "updateNewMessage",
        "id": 3731862030,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A request to send a message has reached the Telegram server. This doesn't mean that the message will be sent successfully or even that the send message request will be processed. This update will be sent only if the option \"use_quick_ack\" is set to true. This update may be sent multiple times for the same message"
        },
        {
          "name": "chat_id",
          "value": "The chat identifier of the sent message"
        },
        {
          "name": "message_id",
          "value": "A temporary message identifier"
        }
      ],
      "definition": {
        "name": "updateMessageSendAcknowledged",
        "id": 1302843961,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message has been successfully sent"
        },
        {
          "name": "message",
          "value": "Information about the sent message. Usually only the message identifier, date, and content are changed, but almost all other fields can also change"
        },
        {
          "name": "old_message_id",
          "value": "The previous temporary message identifier"
        }
      ],
      "definition": {
        "name": "updateMessageSendSucceeded",
        "id": 1815715197,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "old_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message failed to send. Be aware that some messages being sent can be irrecoverably deleted, in which case updateDeleteMessages will be received instead of this update"
        },
        {
          "name": "message",
          "value": "Contains information about the message which failed to send"
        },
        {
          "name": "old_message_id",
          "value": "The previous temporary message identifier"
        },
        {
          "name": "error_code",
          "value": "An error code"
        },
        {
          "name": "error_message",
          "value": "Error message"
        }
      ],
      "definition": {
        "name": "updateMessageSendFailed",
        "id": 3262631517,
        "params": [
          {
            "name": "message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "old_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "error_code",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message content has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "new_content",
          "value": "New message content"
        }
      ],
      "definition": {
        "name": "updateMessageContent",
        "id": 506903332,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "new_content",
            "type": {
              "name": "MessageContent"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message was edited. Changes in the message content will come in a separate updateMessageContent"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "edit_date",
          "value": "Point in time (Unix timestamp) when the message was edited"
        },
        {
          "name": "reply_markup",
          "value": "New message reply markup; may be null"
        }
      ],
      "definition": {
        "name": "updateMessageEdited",
        "id": 3735421670,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "edit_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message pinned state was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "The message identifier"
        },
        {
          "name": "is_pinned",
          "value": "True, if the message is pinned"
        }
      ],
      "definition": {
        "name": "updateMessageIsPinned",
        "id": 1102848829,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The information about interactions with a message has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "interaction_info",
          "value": "New information about interactions with the message; may be null"
        }
      ],
      "definition": {
        "name": "updateMessageInteractionInfo",
        "id": 2877307902,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "interaction_info",
            "type": {
              "name": "messageInteractionInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The message content was opened. Updates voice note messages to \"listened\", video note messages to \"viewed\" and starts the TTL timer for self-destructing messages"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        }
      ],
      "definition": {
        "name": "updateMessageContentOpened",
        "id": 2774444165,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with an unread mention was read"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "unread_mention_count",
          "value": "The new number of unread mention messages left in the chat"
        }
      ],
      "definition": {
        "name": "updateMessageMentionRead",
        "id": 4042739014,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "unread_mention_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A message with a live location was viewed. When the update is received, the application is supposed to update the live location"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat with the live location message"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message with live location"
        }
      ],
      "definition": {
        "name": "updateMessageLiveLocationViewed",
        "id": 2986706325,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new chat has been loaded/created. This update is guaranteed to come before the chat identifier is returned to the application. The chat field changes will be reported through separate updates"
        },
        {
          "name": "chat",
          "value": "The chat"
        }
      ],
      "definition": {
        "name": "updateNewChat",
        "id": 2075757773,
        "params": [
          {
            "name": "chat",
            "type": {
              "name": "chat",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The title of a chat was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "title",
          "value": "The new chat title"
        }
      ],
      "definition": {
        "name": "updateChatTitle",
        "id": 4119561636,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat photo was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "photo",
          "value": "The new chat photo; may be null"
        }
      ],
      "definition": {
        "name": "updateChatPhoto",
        "id": 3970253375,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "chatPhotoInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Chat permissions was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "permissions",
          "value": "The new chat permissions"
        }
      ],
      "definition": {
        "name": "updateChatPermissions",
        "id": 2672957293,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The last message of a chat was changed. If last_message is null, then the last message in the chat became unknown. Some new unknown messages might be added to the chat in this case"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "last_message",
          "value": "The new last message in the chat; may be null"
        },
        {
          "name": "positions",
          "value": "The new chat positions in the chat lists"
        }
      ],
      "definition": {
        "name": "updateChatLastMessage",
        "id": 4044139293,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_message",
            "type": {
              "name": "message",
              "bare": true
            }
          },
          {
            "name": "positions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatPosition",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The position of a chat in a chat list has changed. Instead of this update updateChatLastMessage or updateChatDraftMessage might be sent"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "position",
          "value": "New chat position. If new order is 0, then the chat needs to be removed from the list"
        }
      ],
      "definition": {
        "name": "updateChatPosition",
        "id": 4285987447,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "position",
            "type": {
              "name": "chatPosition",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat was marked as unread or was read"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "is_marked_as_unread",
          "value": "New value of is_marked_as_unread"
        }
      ],
      "definition": {
        "name": "updateChatIsMarkedAsUnread",
        "id": 1468347188,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_marked_as_unread",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat was blocked or unblocked"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "is_blocked",
          "value": "New value of is_blocked"
        }
      ],
      "definition": {
        "name": "updateChatIsBlocked",
        "id": 2296020544,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_blocked",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat's has_scheduled_messages field has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "has_scheduled_messages",
          "value": "New value of has_scheduled_messages"
        }
      ],
      "definition": {
        "name": "updateChatHasScheduledMessages",
        "id": 2064958167,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "has_scheduled_messages",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The value of the default disable_notification parameter, used when a message is sent to the chat, was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "default_disable_notification",
          "value": "The new default_disable_notification value"
        }
      ],
      "definition": {
        "name": "updateChatDefaultDisableNotification",
        "id": 464087707,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "default_disable_notification",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Incoming messages were read or number of unread messages has been changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "last_read_inbox_message_id",
          "value": "Identifier of the last read incoming message"
        },
        {
          "name": "unread_count",
          "value": "The number of unread messages left in the chat"
        }
      ],
      "definition": {
        "name": "updateChatReadInbox",
        "id": 3497015015,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_read_inbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "unread_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Outgoing messages were read"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "last_read_outbox_message_id",
          "value": "Identifier of last read outgoing message"
        }
      ],
      "definition": {
        "name": "updateChatReadOutbox",
        "id": 708334213,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "last_read_outbox_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat unread_mention_count has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "unread_mention_count",
          "value": "The number of unread mention messages left in the chat"
        }
      ],
      "definition": {
        "name": "updateChatUnreadMentionCount",
        "id": 2163505948,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "unread_mention_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Notification settings for a chat were changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "notification_settings",
          "value": "The new notification settings"
        }
      ],
      "definition": {
        "name": "updateChatNotificationSettings",
        "id": 3491804246,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "notification_settings",
            "type": {
              "name": "chatNotificationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Notification settings for some type of chats were updated"
        },
        {
          "name": "scope",
          "value": "Types of chats for which notification settings were updated"
        },
        {
          "name": "notification_settings",
          "value": "The new notification settings"
        }
      ],
      "definition": {
        "name": "updateScopeNotificationSettings",
        "id": 3090991987,
        "params": [
          {
            "name": "scope",
            "type": {
              "name": "NotificationSettingsScope"
            }
          },
          {
            "name": "notification_settings",
            "type": {
              "name": "scopeNotificationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The chat action bar was changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "action_bar",
          "value": "The new value of the action bar; may be null"
        }
      ],
      "definition": {
        "name": "updateChatActionBar",
        "id": 3651295426,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "action_bar",
            "type": {
              "name": "ChatActionBar"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The default chat reply markup was changed. Can occur because new messages with reply markup were received or because an old reply markup was hidden by the user"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "reply_markup_message_id",
          "value": "Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat"
        }
      ],
      "definition": {
        "name": "updateChatReplyMarkup",
        "id": 1309386144,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A chat draft has changed. Be aware that the update may come in the currently opened chat but with old content of the draft. If the user has changed the content of the draft, this update shouldn't be applied"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "draft_message",
          "value": "The new draft message; may be null"
        },
        {
          "name": "positions",
          "value": "The new chat positions in the chat lists"
        }
      ],
      "definition": {
        "name": "updateChatDraftMessage",
        "id": 737302484,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "draft_message",
            "type": {
              "name": "draftMessage",
              "bare": true
            }
          },
          {
            "name": "positions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatPosition",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of chat filters or a chat filter has changed"
        },
        {
          "name": "chat_filters",
          "value": "The new list of chat filters"
        }
      ],
      "definition": {
        "name": "updateChatFilters",
        "id": 2458712813,
        "params": [
          {
            "name": "chat_filters",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatFilterInfo",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The number of online group members has changed. This update with non-zero count is sent only for currently opened chats. There is no guarantee that it will be sent just after the count has changed"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat"
        },
        {
          "name": "online_member_count",
          "value": "New number of online members in the chat, or 0 if unknown"
        }
      ],
      "definition": {
        "name": "updateChatOnlineMemberCount",
        "id": 487369373,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "online_member_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A notification was changed"
        },
        {
          "name": "notification_group_id",
          "value": "Unique notification group identifier"
        },
        {
          "name": "notification",
          "value": "Changed notification"
        }
      ],
      "definition": {
        "name": "updateNotification",
        "id": 2397470420,
        "params": [
          {
            "name": "notification_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "notification",
            "type": {
              "name": "notification",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A list of active notifications in a notification group has changed"
        },
        {
          "name": "notification_group_id",
          "value": "Unique notification group identifier"
        },
        {
          "name": "type",
          "value": "New type of the notification group"
        },
        {
          "name": "chat_id",
          "value": "Identifier of a chat to which all notifications in the group belong"
        },
        {
          "name": "notification_settings_chat_id",
          "value": "Chat identifier, which notification settings must be applied to the added notifications"
        },
        {
          "name": "is_silent",
          "value": "True, if the notifications should be shown without sound"
        },
        {
          "name": "total_count",
          "value": "Total number of unread notifications in the group, can be bigger than number of active notifications"
        },
        {
          "name": "added_notifications",
          "value": "List of added group notifications, sorted by notification ID"
        },
        {
          "name": "removed_notification_ids",
          "value": "Identifiers of removed group notifications, sorted by notification ID"
        }
      ],
      "definition": {
        "name": "updateNotificationGroup",
        "id": 784677961,
        "params": [
          {
            "name": "notification_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "NotificationGroupType"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "notification_settings_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_silent",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "added_notifications",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "notification",
                "bare": true
              }
            }
          },
          {
            "name": "removed_notification_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains active notifications that was shown on previous application launches. This update is sent only if the message database is used. In that case it comes once before any updateNotification and updateNotificationGroup update"
        },
        {
          "name": "groups",
          "value": "Lists of active notification groups"
        }
      ],
      "definition": {
        "name": "updateActiveNotifications",
        "id": 830308594,
        "params": [
          {
            "name": "groups",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "notificationGroup",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Describes whether there are some pending notification updates. Can be used to prevent application from killing, while there are some pending notifications"
        },
        {
          "name": "have_delayed_notifications",
          "value": "True, if there are some delayed notification updates, which will be sent soon"
        },
        {
          "name": "have_unreceived_notifications",
          "value": "True, if there can be some yet unreceived notifications, which are being fetched from the server"
        }
      ],
      "definition": {
        "name": "updateHavePendingNotifications",
        "id": 179233243,
        "params": [
          {
            "name": "have_delayed_notifications",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "have_unreceived_notifications",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some messages were deleted"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of the deleted messages"
        },
        {
          "name": "is_permanent",
          "value": "True, if the messages are permanently deleted by a user (as opposed to just becoming inaccessible)"
        },
        {
          "name": "from_cache",
          "value": "True, if the messages are deleted only from the cache and can possibly be retrieved again in the future"
        }
      ],
      "definition": {
        "name": "updateDeleteMessages",
        "id": 111172601,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "is_permanent",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "from_cache",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "User activity in the chat has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the action was performed"
        },
        {
          "name": "user_id",
          "value": "Identifier of a user performing an action"
        },
        {
          "name": "action",
          "value": "The action description"
        }
      ],
      "definition": {
        "name": "updateUserChatAction",
        "id": 2066409603,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "action",
            "type": {
              "name": "ChatAction"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user went online or offline"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "status",
          "value": "New status of the user"
        }
      ],
      "definition": {
        "name": "updateUserStatus",
        "id": 2851422101,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "UserStatus"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data of a user has changed. This update is guaranteed to come before the user identifier is returned to the application"
        },
        {
          "name": "user",
          "value": "New data about the user"
        }
      ],
      "definition": {
        "name": "updateUser",
        "id": 1183394041,
        "params": [
          {
            "name": "user",
            "type": {
              "name": "user",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data of a basic group has changed. This update is guaranteed to come before the basic group identifier is returned to the application"
        },
        {
          "name": "basic_group",
          "value": "New data about the group"
        }
      ],
      "definition": {
        "name": "updateBasicGroup",
        "id": 3291727715,
        "params": [
          {
            "name": "basic_group",
            "type": {
              "name": "basicGroup",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data of a supergroup or a channel has changed. This update is guaranteed to come before the supergroup identifier is returned to the application"
        },
        {
          "name": "supergroup",
          "value": "New data about the supergroup"
        }
      ],
      "definition": {
        "name": "updateSupergroup",
        "id": 4218184996,
        "params": [
          {
            "name": "supergroup",
            "type": {
              "name": "supergroup",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data of a secret chat has changed. This update is guaranteed to come before the secret chat identifier is returned to the application"
        },
        {
          "name": "secret_chat",
          "value": "New data about the secret chat"
        }
      ],
      "definition": {
        "name": "updateSecretChat",
        "id": 2628064043,
        "params": [
          {
            "name": "secret_chat",
            "type": {
              "name": "secretChat",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data from userFullInfo has been changed"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "user_full_info",
          "value": "New full information about the user"
        }
      ],
      "definition": {
        "name": "updateUserFullInfo",
        "id": 222103874,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_full_info",
            "type": {
              "name": "userFullInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data from basicGroupFullInfo has been changed"
        },
        {
          "name": "basic_group_id",
          "value": "Identifier of a basic group"
        },
        {
          "name": "basic_group_full_info",
          "value": "New full information about the group"
        }
      ],
      "definition": {
        "name": "updateBasicGroupFullInfo",
        "id": 924030531,
        "params": [
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "basic_group_full_info",
            "type": {
              "name": "basicGroupFullInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some data from supergroupFullInfo has been changed"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup or channel"
        },
        {
          "name": "supergroup_full_info",
          "value": "New full information about the supergroup"
        }
      ],
      "definition": {
        "name": "updateSupergroupFullInfo",
        "id": 1288828758,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "supergroup_full_info",
            "type": {
              "name": "supergroupFullInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Service notification from the server. Upon receiving this the application must show a popup with the content of the notification"
        },
        {
          "name": "type",
          "value": "Notification type. If type begins with \"AUTH_KEY_DROP_\", then two buttons \"Cancel\" and \"Log out\" should be shown under notification; if user presses the second, all local data should be destroyed using Destroy method"
        },
        {
          "name": "content",
          "value": "Notification content"
        }
      ],
      "definition": {
        "name": "updateServiceNotification",
        "id": 1318622637,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "content",
            "type": {
              "name": "MessageContent"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Information about a file was updated"
        },
        {
          "name": "file",
          "value": "New data about the file"
        }
      ],
      "definition": {
        "name": "updateFile",
        "id": 114132831,
        "params": [
          {
            "name": "file",
            "type": {
              "name": "file",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The file generation process needs to be started by the application"
        },
        {
          "name": "generation_id",
          "value": "Unique identifier for the generation process"
        },
        {
          "name": "original_path",
          "value": "The path to a file from which a new file is generated; may be empty"
        },
        {
          "name": "destination_path",
          "value": "The path to a file that should be created and where the new file should be generated"
        },
        {
          "name": "conversion",
          "value": "String specifying the conversion applied to the original file. If conversion is \"#url#\" than original_path contains an HTTP/HTTPS URL of a file, which should be downloaded by the application"
        }
      ],
      "definition": {
        "name": "updateFileGenerationStart",
        "id": 216817388,
        "params": [
          {
            "name": "generation_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "original_path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "destination_path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "conversion",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "File generation is no longer needed"
        },
        {
          "name": "generation_id",
          "value": "Unique identifier for the generation process"
        }
      ],
      "definition": {
        "name": "updateFileGenerationStop",
        "id": 2400517611,
        "params": [
          {
            "name": "generation_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New call was created or information about a call was updated"
        },
        {
          "name": "call",
          "value": "New data about a call"
        }
      ],
      "definition": {
        "name": "updateCall",
        "id": 1337184477,
        "params": [
          {
            "name": "call",
            "type": {
              "name": "call",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New call signaling data arrived"
        },
        {
          "name": "call_id",
          "value": "The call identifier"
        },
        {
          "name": "data",
          "value": "The data"
        }
      ],
      "definition": {
        "name": "updateNewCallSignalingData",
        "id": 583634317,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some privacy setting rules have been changed"
        },
        {
          "name": "setting",
          "value": "The privacy setting"
        },
        {
          "name": "rules",
          "value": "New privacy rules"
        }
      ],
      "definition": {
        "name": "updateUserPrivacySettingRules",
        "id": 3382006518,
        "params": [
          {
            "name": "setting",
            "type": {
              "name": "UserPrivacySetting"
            }
          },
          {
            "name": "rules",
            "type": {
              "name": "userPrivacySettingRules",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Number of unread messages in a chat list has changed. This update is sent only if the message database is used"
        },
        {
          "name": "chat_list",
          "value": "The chat list with changed number of unread messages"
        },
        {
          "name": "unread_count",
          "value": "Total number of unread messages"
        },
        {
          "name": "unread_unmuted_count",
          "value": "Total number of unread messages in unmuted chats"
        }
      ],
      "definition": {
        "name": "updateUnreadMessageCount",
        "id": 78987721,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "unread_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "unread_unmuted_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Number of unread chats, i.e. with unread messages or marked as unread, has changed. This update is sent only if the message database is used"
        },
        {
          "name": "chat_list",
          "value": "The chat list with changed number of unread messages"
        },
        {
          "name": "total_count",
          "value": "Approximate total number of chats in the chat list"
        },
        {
          "name": "unread_count",
          "value": "Total number of unread chats"
        },
        {
          "name": "unread_unmuted_count",
          "value": "Total number of unread unmuted chats"
        },
        {
          "name": "marked_as_unread_count",
          "value": "Total number of chats marked as unread"
        },
        {
          "name": "marked_as_unread_unmuted_count",
          "value": "Total number of unmuted chats marked as unread"
        }
      ],
      "definition": {
        "name": "updateUnreadChatCount",
        "id": 1994494530,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "total_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "unread_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "unread_unmuted_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "marked_as_unread_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "marked_as_unread_unmuted_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "An option changed its value"
        },
        {
          "name": "name",
          "value": "The option name"
        },
        {
          "name": "value",
          "value": "The new option value"
        }
      ],
      "definition": {
        "name": "updateOption",
        "id": 900822020,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "value",
            "type": {
              "name": "OptionValue"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A sticker set has changed"
        },
        {
          "name": "sticker_set",
          "value": "The sticker set"
        }
      ],
      "definition": {
        "name": "updateStickerSet",
        "id": 1879268812,
        "params": [
          {
            "name": "sticker_set",
            "type": {
              "name": "stickerSet",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of installed sticker sets was updated"
        },
        {
          "name": "is_masks",
          "value": "True, if the list of installed mask sticker sets was updated"
        },
        {
          "name": "sticker_set_ids",
          "value": "The new list of installed ordinary sticker sets"
        }
      ],
      "definition": {
        "name": "updateInstalledStickerSets",
        "id": 1841545720,
        "params": [
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker_set_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int64",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of trending sticker sets was updated or some of them were viewed"
        },
        {
          "name": "sticker_sets",
          "value": "The prefix of the list of trending sticker sets with the newest trending sticker sets"
        }
      ],
      "definition": {
        "name": "updateTrendingStickerSets",
        "id": 450714593,
        "params": [
          {
            "name": "sticker_sets",
            "type": {
              "name": "stickerSets",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of recently used stickers was updated"
        },
        {
          "name": "is_attached",
          "value": "True, if the list of stickers attached to photo or video files was updated, otherwise the list of sent stickers is updated"
        },
        {
          "name": "sticker_ids",
          "value": "The new list of file identifiers of recently used stickers"
        }
      ],
      "definition": {
        "name": "updateRecentStickers",
        "id": 2935879900,
        "params": [
          {
            "name": "is_attached",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of favorite stickers was updated"
        },
        {
          "name": "sticker_ids",
          "value": "The new list of file identifiers of favorite stickers"
        }
      ],
      "definition": {
        "name": "updateFavoriteStickers",
        "id": 289352554,
        "params": [
          {
            "name": "sticker_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of saved animations was updated"
        },
        {
          "name": "animation_ids",
          "value": "The new list of file identifiers of saved animations"
        }
      ],
      "definition": {
        "name": "updateSavedAnimations",
        "id": 277127624,
        "params": [
          {
            "name": "animation_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The selected background has changed"
        },
        {
          "name": "for_dark_theme",
          "value": "True, if background for dark theme has changed"
        },
        {
          "name": "background",
          "value": "The new selected background; may be null"
        }
      ],
      "definition": {
        "name": "updateSelectedBackground",
        "id": 2579308637,
        "params": [
          {
            "name": "for_dark_theme",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "background",
            "type": {
              "name": "background",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Some language pack strings have been updated"
        },
        {
          "name": "localization_target",
          "value": "Localization target to which the language pack belongs"
        },
        {
          "name": "language_pack_id",
          "value": "Identifier of the updated language pack"
        },
        {
          "name": "strings",
          "value": "List of changed language pack strings"
        }
      ],
      "definition": {
        "name": "updateLanguagePackStrings",
        "id": 2944897439,
        "params": [
          {
            "name": "localization_target",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "strings",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "languagePackString",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The connection state has changed. This update must be used only to show a human-readable description of the connection state"
        },
        {
          "name": "state",
          "value": "The new connection state"
        }
      ],
      "definition": {
        "name": "updateConnectionState",
        "id": 1469292078,
        "params": [
          {
            "name": "state",
            "type": {
              "name": "ConnectionState"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "New terms of service must be accepted by the user. If the terms of service are declined, then the deleteAccount method should be called with the reason \"Decline ToS update\""
        },
        {
          "name": "terms_of_service_id",
          "value": "Identifier of the terms of service"
        },
        {
          "name": "terms_of_service",
          "value": "The new terms of service"
        }
      ],
      "definition": {
        "name": "updateTermsOfService",
        "id": 2990327134,
        "params": [
          {
            "name": "terms_of_service_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "terms_of_service",
            "type": {
              "name": "termsOfService",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of users nearby has changed. The update is guaranteed to be sent only 60 seconds after a successful searchChatsNearby request"
        },
        {
          "name": "users_nearby",
          "value": "The new list of users nearby"
        }
      ],
      "definition": {
        "name": "updateUsersNearby",
        "id": 159156917,
        "params": [
          {
            "name": "users_nearby",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "chatNearby",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of supported dice emojis has changed"
        },
        {
          "name": "emojis",
          "value": "The new list of supported dice emojis"
        }
      ],
      "definition": {
        "name": "updateDiceEmojis",
        "id": 2635043295,
        "params": [
          {
            "name": "emojis",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The parameters of animation search through GetOption(\"animation_search_bot_username\") bot has changed"
        },
        {
          "name": "provider",
          "value": "Name of the animation search provider"
        },
        {
          "name": "emojis",
          "value": "The new list of emojis suggested for searching"
        }
      ],
      "definition": {
        "name": "updateAnimationSearchParameters",
        "id": 1612115713,
        "params": [
          {
            "name": "provider",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "emojis",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The list of suggested to the user actions has changed"
        },
        {
          "name": "added_actions",
          "value": "Added suggested actions"
        },
        {
          "name": "removed_actions",
          "value": "Removed suggested actions"
        }
      ],
      "definition": {
        "name": "updateSuggestedActions",
        "id": 3269840075,
        "params": [
          {
            "name": "added_actions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "SuggestedAction"
              }
            }
          },
          {
            "name": "removed_actions",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "SuggestedAction"
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming inline query; for bots only"
        },
        {
          "name": "id",
          "value": "Unique query identifier"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "user_location",
          "value": "User location; may be null"
        },
        {
          "name": "query",
          "value": "Text of the query"
        },
        {
          "name": "offset",
          "value": "Offset of the first entry to return"
        }
      ],
      "definition": {
        "name": "updateNewInlineQuery",
        "id": 2064730634,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The user has chosen a result of an inline query; for bots only"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "user_location",
          "value": "User location; may be null"
        },
        {
          "name": "query",
          "value": "Text of the query"
        },
        {
          "name": "result_id",
          "value": "Identifier of the chosen result"
        },
        {
          "name": "inline_message_id",
          "value": "Identifier of the sent inline message, if known"
        }
      ],
      "definition": {
        "name": "updateNewChosenInlineResult",
        "id": 527526965,
        "params": [
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "result_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming callback query; for bots only"
        },
        {
          "name": "id",
          "value": "Unique query identifier"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat where the query was sent"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message, from which the query originated"
        },
        {
          "name": "chat_instance",
          "value": "Identifier that uniquely corresponds to the chat to which the message was sent"
        },
        {
          "name": "payload",
          "value": "Query payload"
        }
      ],
      "definition": {
        "name": "updateNewCallbackQuery",
        "id": 2250740926,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "chat_instance",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "payload",
            "type": {
              "name": "CallbackQueryPayload"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming callback query from a message sent via a bot; for bots only"
        },
        {
          "name": "id",
          "value": "Unique query identifier"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "inline_message_id",
          "value": "Identifier of the inline message, from which the query originated"
        },
        {
          "name": "chat_instance",
          "value": "An identifier uniquely corresponding to the chat a message was sent to"
        },
        {
          "name": "payload",
          "value": "Query payload"
        }
      ],
      "definition": {
        "name": "updateNewInlineCallbackQuery",
        "id": 2415812467,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "chat_instance",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "payload",
            "type": {
              "name": "CallbackQueryPayload"
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming shipping query; for bots only. Only for invoices with flexible price"
        },
        {
          "name": "id",
          "value": "Unique query identifier"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "invoice_payload",
          "value": "Invoice payload"
        },
        {
          "name": "shipping_address",
          "value": "User shipping address"
        }
      ],
      "definition": {
        "name": "updateNewShippingQuery",
        "id": 3477492614,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "invoice_payload",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "shipping_address",
            "type": {
              "name": "address",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming pre-checkout query; for bots only. Contains full information about a checkout"
        },
        {
          "name": "id",
          "value": "Unique query identifier"
        },
        {
          "name": "sender_user_id",
          "value": "Identifier of the user who sent the query"
        },
        {
          "name": "currency",
          "value": "Currency for the product price"
        },
        {
          "name": "total_amount",
          "value": "Total price for the product, in the minimal quantity of the currency"
        },
        {
          "name": "invoice_payload",
          "value": "Invoice payload"
        },
        {
          "name": "shipping_option_id",
          "value": "Identifier of a shipping option chosen by the user; may be empty if not applicable"
        },
        {
          "name": "order_info",
          "value": "Information about the order; may be null"
        }
      ],
      "definition": {
        "name": "updateNewPreCheckoutQuery",
        "id": 87964006,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "sender_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "currency",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "total_amount",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "invoice_payload",
            "type": {
              "name": "bytes",
              "bare": true
            }
          },
          {
            "name": "shipping_option_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "order_info",
            "type": {
              "name": "orderInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming event; for bots only"
        },
        {
          "name": "event",
          "value": "A JSON-serialized event"
        }
      ],
      "definition": {
        "name": "updateNewCustomEvent",
        "id": 1994222092,
        "params": [
          {
            "name": "event",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A new incoming query; for bots only"
        },
        {
          "name": "id",
          "value": "The query identifier"
        },
        {
          "name": "data",
          "value": "JSON-serialized query data"
        },
        {
          "name": "timeout",
          "value": "Query timeout"
        }
      ],
      "definition": {
        "name": "updateNewCustomQuery",
        "id": 3607296422,
        "params": [
          {
            "name": "id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "timeout",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A poll was updated; for bots only"
        },
        {
          "name": "poll",
          "value": "New data about the poll"
        }
      ],
      "definition": {
        "name": "updatePoll",
        "id": 2523624394,
        "params": [
          {
            "name": "poll",
            "type": {
              "name": "poll",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A user changed the answer to a poll; for bots only"
        },
        {
          "name": "poll_id",
          "value": "Unique poll identifier"
        },
        {
          "name": "user_id",
          "value": "The user, who changed the answer to the poll"
        },
        {
          "name": "option_ids",
          "value": "0-based identifiers of answer options, chosen by the user"
        }
      ],
      "definition": {
        "name": "updatePollAnswer",
        "id": 2847811088,
        "params": [
          {
            "name": "poll_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "option_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Update"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of updates"
        },
        {
          "name": "updates",
          "value": "List of updates"
        }
      ],
      "definition": {
        "name": "updates",
        "id": 3112342050,
        "params": [
          {
            "name": "updates",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "Update"
              }
            }
          }
        ],
        "type": {
          "name": "Updates"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The log is written to stderr or an OS specific log"
        }
      ],
      "definition": {
        "name": "logStreamDefault",
        "id": 1390581436,
        "type": {
          "name": "LogStream"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The log is written to a file"
        },
        {
          "name": "path",
          "value": "Path to the file to where the internal TDLib log will be written"
        },
        {
          "name": "max_file_size",
          "value": "The maximum size of the file to where the internal TDLib log is written before the file will be auto-rotated"
        },
        {
          "name": "redirect_stderr",
          "value": "Pass true to additionally redirect stderr to the log file. Ignored on Windows"
        }
      ],
      "definition": {
        "name": "logStreamFile",
        "id": 1532136933,
        "params": [
          {
            "name": "path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "max_file_size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "redirect_stderr",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "LogStream"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "The log is written nowhere"
        }
      ],
      "definition": {
        "name": "logStreamEmpty",
        "id": 3795055052,
        "type": {
          "name": "LogStream"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a TDLib internal log verbosity level"
        },
        {
          "name": "verbosity_level",
          "value": "Log verbosity level"
        }
      ],
      "definition": {
        "name": "logVerbosityLevel",
        "id": 1734624234,
        "params": [
          {
            "name": "verbosity_level",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LogVerbosityLevel"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Contains a list of available TDLib internal log tags"
        },
        {
          "name": "tags",
          "value": "List of log tags"
        }
      ],
      "definition": {
        "name": "logTags",
        "id": 3691630292,
        "params": [
          {
            "name": "tags",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "LogTags"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a number; for testing only"
        },
        {
          "name": "value",
          "value": "Number"
        }
      ],
      "definition": {
        "name": "testInt",
        "id": 3720162313,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestInt"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a string; for testing only"
        },
        {
          "name": "value",
          "value": "String"
        }
      ],
      "definition": {
        "name": "testString",
        "id": 4267075724,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestString"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a sequence of bytes; for testing only"
        },
        {
          "name": "value",
          "value": "Bytes"
        }
      ],
      "definition": {
        "name": "testBytes",
        "id": 2753742046,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestBytes"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a vector of numbers; for testing only"
        },
        {
          "name": "value",
          "value": "Vector of numbers"
        }
      ],
      "definition": {
        "name": "testVectorInt",
        "id": 3751719187,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorInt"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a vector of objects that hold a number; for testing only"
        },
        {
          "name": "value",
          "value": "Vector of objects"
        }
      ],
      "definition": {
        "name": "testVectorIntObject",
        "id": 4048722331,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "testInt",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorIntObject"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a vector of strings; for testing only"
        },
        {
          "name": "value",
          "value": "Vector of strings"
        }
      ],
      "definition": {
        "name": "testVectorString",
        "id": 1567589820,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorString"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "A simple object containing a vector of objects that hold a string; for testing only"
        },
        {
          "name": "value",
          "value": "Vector of objects"
        }
      ],
      "definition": {
        "name": "testVectorStringObject",
        "id": 241093645,
        "params": [
          {
            "name": "value",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "testString",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorStringObject"
        }
      },
      "category": "type"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the current authorization state; this is an offline request. For informational purposes only. Use updateAuthorizationState instead to maintain the current authorization state. Can be called before initialization"
        }
      ],
      "definition": {
        "name": "getAuthorizationState",
        "id": 1949154877,
        "type": {
          "name": "AuthorizationState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the parameters for TDLib initialization. Works only when the current authorization state is authorizationStateWaitTdlibParameters"
        },
        {
          "name": "parameters",
          "value": "Parameters"
        }
      ],
      "definition": {
        "name": "setTdlibParameters",
        "id": 2382409299,
        "params": [
          {
            "name": "parameters",
            "type": {
              "name": "tdlibParameters",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the database encryption key for correctness. Works only when the current authorization state is authorizationStateWaitEncryptionKey"
        },
        {
          "name": "encryption_key",
          "value": "Encryption key to check or set up"
        }
      ],
      "definition": {
        "name": "checkDatabaseEncryptionKey",
        "id": 1018769307,
        "params": [
          {
            "name": "encryption_key",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the phone number of the user and sends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitPhoneNumber,"
        },
        {
          "name": "phone_number",
          "value": "The phone number of the user, in international format"
        },
        {
          "name": "settings",
          "value": "Settings for the authentication of the user's phone number"
        }
      ],
      "definition": {
        "name": "setAuthenticationPhoneNumber",
        "id": 868276259,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "settings",
            "type": {
              "name": "phoneNumberAuthenticationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Re-sends an authentication code to the user. Works only when the current authorization state is authorizationStateWaitCode and the next_code_type of the result is not null"
        }
      ],
      "definition": {
        "name": "resendAuthenticationCode",
        "id": 3480590105,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the authentication code. Works only when the current authorization state is authorizationStateWaitCode"
        },
        {
          "name": "code",
          "value": "The verification code received via SMS, Telegram message, phone call, or flash call"
        }
      ],
      "definition": {
        "name": "checkAuthenticationCode",
        "id": 3992863914,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Requests QR code authentication by scanning a QR code on another logged in device. Works only when the current authorization state is authorizationStateWaitPhoneNumber,"
        },
        {
          "name": "other_user_ids",
          "value": "List of user identifiers of other users currently using the application"
        }
      ],
      "definition": {
        "name": "requestQrCodeAuthentication",
        "id": 921058941,
        "params": [
          {
            "name": "other_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Finishes user registration. Works only when the current authorization state is authorizationStateWaitRegistration"
        },
        {
          "name": "first_name",
          "value": "The first name of the user; 1-64 characters"
        },
        {
          "name": "last_name",
          "value": "The last name of the user; 0-64 characters"
        }
      ],
      "definition": {
        "name": "registerUser",
        "id": 4184972829,
        "params": [
          {
            "name": "first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the authentication password for correctness. Works only when the current authorization state is authorizationStateWaitPassword"
        },
        {
          "name": "password",
          "value": "The password to check"
        }
      ],
      "definition": {
        "name": "checkAuthenticationPassword",
        "id": 2269268896,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Requests to send a password recovery code to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword"
        }
      ],
      "definition": {
        "name": "requestAuthenticationPasswordRecovery",
        "id": 1393896118,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Recovers the password with a password recovery code sent to an email address that was previously set up. Works only when the current authorization state is authorizationStateWaitPassword"
        },
        {
          "name": "recovery_code",
          "value": "Recovery code to check"
        }
      ],
      "definition": {
        "name": "recoverAuthenticationPassword",
        "id": 787436412,
        "params": [
          {
            "name": "recovery_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the authentication token of a bot; to log in as a bot. Works only when the current authorization state is authorizationStateWaitPhoneNumber. Can be used instead of setAuthenticationPhoneNumber and checkAuthenticationCode to log in"
        },
        {
          "name": "token",
          "value": "The bot token"
        }
      ],
      "definition": {
        "name": "checkAuthenticationBotToken",
        "id": 639321206,
        "params": [
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Closes the TDLib instance after a proper logout. Requires an available network connection. All local data will be destroyed. After the logout completes, updateAuthorizationState with authorizationStateClosed will be sent"
        }
      ],
      "definition": {
        "name": "logOut",
        "id": 2713043995,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Closes the TDLib instance. All databases will be flushed to disk and properly closed. After the close completes, updateAuthorizationState with authorizationStateClosed will be sent. Can be called before initialization"
        }
      ],
      "definition": {
        "name": "close",
        "id": 3107185023,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Closes the TDLib instance, destroying all local data without a proper logout. The current user session will remain in the list of all active sessions. All local data will be destroyed. After the destruction completes updateAuthorizationState with authorizationStateClosed will be sent. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "destroy",
        "id": 685331274,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Confirms QR code authentication on another device. Returns created session on success"
        },
        {
          "name": "link",
          "value": "A link from a QR code. The link must be scanned by the in-app camera"
        }
      ],
      "definition": {
        "name": "confirmQrCodeAuthentication",
        "id": 3918767917,
        "params": [
          {
            "name": "link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Session"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all updates needed to restore current TDLib state, i.e. all actual UpdateAuthorizationState/UpdateUser/UpdateNewChat and others. This is especially useful if TDLib is run in a separate process. Can be called before initialization"
        }
      ],
      "definition": {
        "name": "getCurrentState",
        "id": 3103549577,
        "type": {
          "name": "Updates"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the database encryption key. Usually the encryption key is never changed and is stored in some OS keychain"
        },
        {
          "name": "new_encryption_key",
          "value": "New encryption key"
        }
      ],
      "definition": {
        "name": "setDatabaseEncryptionKey",
        "id": 3090367925,
        "params": [
          {
            "name": "new_encryption_key",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the current state of 2-step verification"
        }
      ],
      "definition": {
        "name": "getPasswordState",
        "id": 4120214392,
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the password for the user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed"
        },
        {
          "name": "old_password",
          "value": "Previous password of the user"
        },
        {
          "name": "new_password",
          "value": "New password of the user; may be empty to remove the password"
        },
        {
          "name": "new_hint",
          "value": "New password hint; may be empty"
        },
        {
          "name": "set_recovery_email_address",
          "value": "Pass true if the recovery email address should be changed"
        },
        {
          "name": "new_recovery_email_address",
          "value": "New recovery email address; may be empty"
        }
      ],
      "definition": {
        "name": "setPassword",
        "id": 3101378269,
        "params": [
          {
            "name": "old_password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_hint",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "set_recovery_email_address",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "new_recovery_email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a 2-step verification recovery email address that was previously set up. This method can be used to verify a password provided by the user"
        },
        {
          "name": "password",
          "value": "The password for the current user"
        }
      ],
      "definition": {
        "name": "getRecoveryEmailAddress",
        "id": 2700196349,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "RecoveryEmailAddress"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the 2-step verification recovery email address of the user. If a new recovery email address is specified, then the change will not be applied until the new recovery email address is confirmed."
        }
      ],
      "definition": {
        "name": "setRecoveryEmailAddress",
        "id": 2313130911,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_recovery_email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the 2-step verification recovery email address verification code"
        },
        {
          "name": "code",
          "value": "Verification code"
        }
      ],
      "definition": {
        "name": "checkRecoveryEmailAddressCode",
        "id": 2297927707,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resends the 2-step verification recovery email address verification code"
        }
      ],
      "definition": {
        "name": "resendRecoveryEmailAddressCode",
        "id": 433483548,
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Requests to send a password recovery code to an email address that was previously set up"
        }
      ],
      "definition": {
        "name": "requestPasswordRecovery",
        "id": 4281189714,
        "type": {
          "name": "EmailAddressAuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Recovers the password using a recovery code sent to an email address that was previously set up"
        },
        {
          "name": "recovery_code",
          "value": "Recovery code to check"
        }
      ],
      "definition": {
        "name": "recoverPassword",
        "id": 1660185903,
        "params": [
          {
            "name": "recovery_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new temporary password for processing payments"
        },
        {
          "name": "password",
          "value": "Persistent user password"
        },
        {
          "name": "valid_for",
          "value": "Time during which the temporary password will be valid, in seconds; should be between 60 and 86400"
        }
      ],
      "definition": {
        "name": "createTemporaryPassword",
        "id": 2668457862,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "valid_for",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TemporaryPasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about the current temporary password"
        }
      ],
      "definition": {
        "name": "getTemporaryPasswordState",
        "id": 4282296466,
        "type": {
          "name": "TemporaryPasswordState"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the current user"
        }
      ],
      "definition": {
        "name": "getMe",
        "id": 4103451263,
        "type": {
          "name": "User"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a user by their identifier. This is an offline request if the current user is not a bot"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "getUser",
        "id": 4247381279,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "User"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns full information about a user by their identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "getUserFullInfo",
        "id": 3639524033,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "UserFullInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a basic group by its identifier. This is an offline request if the current user is not a bot"
        },
        {
          "name": "basic_group_id",
          "value": "Basic group identifier"
        }
      ],
      "definition": {
        "name": "getBasicGroup",
        "id": 561775568,
        "params": [
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BasicGroup"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns full information about a basic group by its identifier"
        },
        {
          "name": "basic_group_id",
          "value": "Basic group identifier"
        }
      ],
      "definition": {
        "name": "getBasicGroupFullInfo",
        "id": 1770517905,
        "params": [
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BasicGroupFullInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a supergroup or a channel by its identifier. This is an offline request if the current user is not a bot"
        },
        {
          "name": "supergroup_id",
          "value": "Supergroup or channel identifier"
        }
      ],
      "definition": {
        "name": "getSupergroup",
        "id": 2231903590,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Supergroup"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns full information about a supergroup or a channel by its identifier, cached for up to 1 minute"
        },
        {
          "name": "supergroup_id",
          "value": "Supergroup or channel identifier"
        }
      ],
      "definition": {
        "name": "getSupergroupFullInfo",
        "id": 3144636034,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SupergroupFullInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a secret chat by its identifier. This is an offline request"
        },
        {
          "name": "secret_chat_id",
          "value": "Secret chat identifier"
        }
      ],
      "definition": {
        "name": "getSecretChat",
        "id": 40599169,
        "params": [
          {
            "name": "secret_chat_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "SecretChat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a chat by its identifier, this is an offline request if the current user is not a bot"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "getChat",
        "id": 1866601536,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a message"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message to get"
        }
      ],
      "definition": {
        "name": "getMessage",
        "id": 2473771136,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a message, if it is available locally without sending network request. This is an offline request"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message to get"
        }
      ],
      "definition": {
        "name": "getMessageLocally",
        "id": 3691391852,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a message that is replied by a given message. Also returns the pinned message, the game message, and the invoice message for messages of the types messagePinMessage, messageGameScore, and messagePaymentSuccessful respectively"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message reply to which to get"
        }
      ],
      "definition": {
        "name": "getRepliedMessage",
        "id": 3653048765,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a newest pinned chat message"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the message belongs to"
        }
      ],
      "definition": {
        "name": "getChatPinnedMessage",
        "id": 359865008,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a message with the callback button that originated a callback query; for bots only"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "callback_query_id",
          "value": "Identifier of the callback query"
        }
      ],
      "definition": {
        "name": "getCallbackQueryMessage",
        "id": 3173028210,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "callback_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about messages. If a message is not found, returns null on the corresponding position of the result"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat the messages belong to"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of the messages to get"
        }
      ],
      "definition": {
        "name": "getMessages",
        "id": 3588040895,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a message thread. Can be used only if message.can_get_message_thread == true"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        }
      ],
      "definition": {
        "name": "getMessageThread",
        "id": 2062695998,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageThreadInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a file; this is an offline request"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file to get"
        }
      ],
      "definition": {
        "name": "getFile",
        "id": 1553923406,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a file by its remote ID; this is an offline request. Can be used to register a URL as a file for further uploading, or sending as a message. Even the request succeeds, the file can be used only if it is still accessible to the user."
        },
        {
          "name": "remote_file_id",
          "value": "Remote identifier of the file to get"
        },
        {
          "name": "file_type",
          "value": "File type, if known"
        }
      ],
      "definition": {
        "name": "getRemoteFile",
        "id": 2137204530,
        "params": [
          {
            "name": "remote_file_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "file_type",
            "type": {
              "name": "FileType"
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an ordered list of chats in a chat list. Chats are sorted by the pair (chat.position.order, chat.id) in descending order. (For example, to get a list of chats from the beginning, the offset_order should be equal to a biggest signed 64-bit number 9223372036854775807 == 2^63 - 1)."
        },
        {
          "name": "chat_list",
          "value": "The chat list in which to return chats"
        },
        {
          "name": "offset_order",
          "value": "Chat order to return chats from"
        },
        {
          "name": "offset_chat_id",
          "value": "Chat identifier to return chats from"
        },
        {
          "name": "limit",
          "value": "The maximum number of chats to be returned. It is possible that fewer chats than the limit are returned even if the end of the list is not reached"
        }
      ],
      "definition": {
        "name": "getChats",
        "id": 1847129537,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "offset_order",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "offset_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches a public chat by its username. Currently only private chats, supergroups and channels can be public. Returns the chat if found; otherwise an error is returned"
        },
        {
          "name": "username",
          "value": "Username to be resolved"
        }
      ],
      "definition": {
        "name": "searchPublicChat",
        "id": 857135533,
        "params": [
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches public chats by looking for specified query in their username and title. Currently only private chats, supergroups and channels can be public. Returns a meaningful number of results. Returns nothing if the length of the searched username prefix is less than 5. Excludes private chats with contacts and chats from the chat list from the results"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "searchPublicChats",
        "id": 970385337,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for the specified query in the title and username of already known chats, this is an offline request. Returns chats in the order seen in the main chat list"
        },
        {
          "name": "query",
          "value": "Query to search for. If the query is empty, returns up to 20 recently found chats"
        },
        {
          "name": "limit",
          "value": "The maximum number of chats to be returned"
        }
      ],
      "definition": {
        "name": "searchChats",
        "id": 2415180236,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for the specified query in the title and username of already known chats via request to the server. Returns chats in the order seen in the main chat list"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "limit",
          "value": "The maximum number of chats to be returned"
        }
      ],
      "definition": {
        "name": "searchChatsOnServer",
        "id": 3136565108,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of users and location-based supergroups nearby. The list of users nearby will be updated for 60 seconds after the request by the updates updateUsersNearby. The request should be sent again every 25 seconds with adjusted location to not miss new chats"
        },
        {
          "name": "location",
          "value": "Current user location"
        }
      ],
      "definition": {
        "name": "searchChatsNearby",
        "id": 4098213919,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatsNearby"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of frequently used chats. Supported only if the chat info database is enabled"
        },
        {
          "name": "category",
          "value": "Category of chats to be returned"
        },
        {
          "name": "limit",
          "value": "The maximum number of chats to be returned; up to 30"
        }
      ],
      "definition": {
        "name": "getTopChats",
        "id": 3906556449,
        "params": [
          {
            "name": "category",
            "type": {
              "name": "TopChatCategory"
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a chat from the list of frequently used chats. Supported only if the chat info database is enabled"
        },
        {
          "name": "category",
          "value": "Category of frequently used chats"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "removeTopChat",
        "id": 2387091029,
        "params": [
          {
            "name": "category",
            "type": {
              "name": "TopChatCategory"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a chat to the list of recently found chats. The chat is added to the beginning of the list. If the chat is already in the list, it will be removed from the list first"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to add"
        }
      ],
      "definition": {
        "name": "addRecentlyFoundChat",
        "id": 2548570509,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a chat from the list of recently found chats"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to be removed"
        }
      ],
      "definition": {
        "name": "removeRecentlyFoundChat",
        "id": 717340444,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Clears the list of recently found chats"
        }
      ],
      "definition": {
        "name": "clearRecentlyFoundChats",
        "id": 4009384754,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks whether a username can be set for a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier; should be identifier of a supergroup chat, or a channel chat, or a private chat with self, or zero if chat is being created"
        },
        {
          "name": "username",
          "value": "Username to be checked"
        }
      ],
      "definition": {
        "name": "checkChatUsername",
        "id": 4175847952,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CheckChatUsernameResult"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of public chats of the specified type, owned by the user"
        },
        {
          "name": "type",
          "value": "Type of the public chats to return"
        }
      ],
      "definition": {
        "name": "getCreatedPublicChats",
        "id": 710354415,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PublicChatType"
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks whether the maximum number of owned public chats has been reached. Returns corresponding error if the limit was reached"
        },
        {
          "name": "type",
          "value": "Type of the public chats, for which to check the limit"
        }
      ],
      "definition": {
        "name": "checkCreatedPublicChatsLimit",
        "id": 3849420705,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PublicChatType"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of basic group and supergroup chats, which can be used as a discussion group for a channel. Returned basic group chats must be first upgraded to supergroups before they can be set as a discussion group. To set a returned supergroup as a discussion group, access to its old messages must be enabled using toggleSupergroupIsAllHistoryAvailable first"
        }
      ],
      "definition": {
        "name": "getSuitableDiscussionChats",
        "id": 49044982,
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of recently inactive supergroups and channels. Can be used when user reaches limit on the number of joined supergroups and channels and receives CHANNELS_TOO_MUCH error"
        }
      ],
      "definition": {
        "name": "getInactiveSupergroupChats",
        "id": 3637246389,
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of common group chats with a given user. Chats are sorted by their type and creation date"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "offset_chat_id",
          "value": "Chat identifier starting from which to return chats; use 0 for the first request"
        },
        {
          "name": "limit",
          "value": "The maximum number of chats to be returned; up to 100"
        }
      ],
      "definition": {
        "name": "getGroupsInCommon",
        "id": 4271728607,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns messages in a chat. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id)."
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "from_message_id",
          "value": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message"
        },
        {
          "name": "offset",
          "value": "Specify 0 to get results from exactly the from_message_id or a negative offset up to 99 to get additionally some newer messages"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset. Fewer messages may be returned than specified by the limit, even if the end of the message history has not been reached"
        },
        {
          "name": "only_local",
          "value": "If true, returns only messages that are available locally without sending network requests"
        }
      ],
      "definition": {
        "name": "getChatHistory",
        "id": 3495006845,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "from_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "only_local",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns messages in a message thread of a message. Can be used only if message.can_get_message_thread == true. Message thread of a channel message is in the channel's linked supergroup."
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier, which thread history needs to be returned"
        },
        {
          "name": "from_message_id",
          "value": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message"
        },
        {
          "name": "offset",
          "value": "Specify 0 to get results from exactly the from_message_id or a negative offset up to 99 to get additionally some newer messages"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than or equal to -offset. Fewer messages may be returned than specified by the limit, even if the end of the message thread history has not been reached"
        }
      ],
      "definition": {
        "name": "getMessageThreadHistory",
        "id": 2486555688,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "from_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes all messages in the chat. Use Chat.can_be_deleted_only_for_self and Chat.can_be_deleted_for_all_users fields to find whether and how the method can be applied to the chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "remove_from_chat_list",
          "value": "Pass true if the chat should be removed from the chat list"
        },
        {
          "name": "revoke",
          "value": "Pass true to try to delete chat history for all users"
        }
      ],
      "definition": {
        "name": "deleteChatHistory",
        "id": 2822885535,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "remove_from_chat_list",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "revoke",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for messages with given words in the chat. Returns the results in reverse chronological order, i.e. in order of decreasing message_id. Cannot be used in secret chats with a non-empty query"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat in which to search messages"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "sender",
          "value": "If not null, only messages sent by the specified sender will be returned. Not supported in secret chats"
        },
        {
          "name": "from_message_id",
          "value": "Identifier of the message starting from which history must be fetched; use 0 to get results from the last message"
        },
        {
          "name": "offset",
          "value": "Specify 0 to get results from exactly the from_message_id or a negative offset to get the specified message and some newer messages"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; must be positive and can't be greater than 100. If the offset is negative, the limit must be greater than -offset. Fewer messages may be returned than specified by the limit, even if the end of the message history has not been reached"
        },
        {
          "name": "filter",
          "value": "Filter for message content in the search results"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, only messages in the specified thread will be returned; supergroups only"
        }
      ],
      "definition": {
        "name": "searchChatMessages",
        "id": 2594507824,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "sender",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "from_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "SearchMessagesFilter"
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for messages in all chats except secret chats. Returns the results in reverse chronological order (i.e., in order of decreasing (date, chat_id, message_id))."
        },
        {
          "name": "chat_list",
          "value": "Chat list in which to search messages; pass null to search in all chats regardless of their chat list"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "offset_date",
          "value": "The date of the message starting from which the results should be fetched. Use 0 or any date in the future to get results from the last message"
        },
        {
          "name": "offset_chat_id",
          "value": "The chat identifier of the last found message, or 0 for the first request"
        },
        {
          "name": "offset_message_id",
          "value": "The message identifier of the last found message, or 0 for the first request"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; up to 100. Fewer messages may be returned than specified by the limit, even if the end of the message history has not been reached"
        },
        {
          "name": "filter",
          "value": "Filter for message content in the search results; searchMessagesFilterCall, searchMessagesFilterMissedCall, searchMessagesFilterMention, searchMessagesFilterUnreadMention, searchMessagesFilterFailedToSend and searchMessagesFilterPinned are unsupported in this function"
        },
        {
          "name": "min_date",
          "value": "If not 0, the minimum date of the messages to return"
        },
        {
          "name": "max_date",
          "value": "If not 0, the maximum date of the messages to return"
        }
      ],
      "definition": {
        "name": "searchMessages",
        "id": 4069753234,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "offset_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "offset_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "SearchMessagesFilter"
            }
          },
          {
            "name": "min_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "max_date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for messages in secret chats. Returns the results in reverse chronological order. For optimal performance the number of returned messages is chosen by the library"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat in which to search. Specify 0 to search in all secret chats"
        },
        {
          "name": "query",
          "value": "Query to search for. If empty, searchChatMessages should be used instead"
        },
        {
          "name": "offset",
          "value": "Offset of the first entry to return as received from the previous request; use empty string to get first chunk of results"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; up to 100. Fewer messages may be returned than specified by the limit, even if the end of the message history has not been reached"
        },
        {
          "name": "filter",
          "value": "A filter for message content in the search results"
        }
      ],
      "definition": {
        "name": "searchSecretMessages",
        "id": 3442101404,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "SearchMessagesFilter"
            }
          }
        ],
        "type": {
          "name": "FoundMessages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for call messages. Returns the results in reverse chronological order (i. e., in order of decreasing message_id). For optimal performance the number of returned messages is chosen by the library"
        },
        {
          "name": "from_message_id",
          "value": "Identifier of the message from which to search; use 0 to get results from the last message"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; up to 100. Fewer messages may be returned than specified by the limit, even if the end of the message history has not been reached"
        },
        {
          "name": "only_missed",
          "value": "If true, returns only messages with missed calls"
        }
      ],
      "definition": {
        "name": "searchCallMessages",
        "id": 3217736476,
        "params": [
          {
            "name": "from_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "only_missed",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about the recent locations of chat members that were sent to the chat. Returns up to 1 location message per user"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned"
        }
      ],
      "definition": {
        "name": "searchChatRecentLocationMessages",
        "id": 950238950,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all active live locations that should be updated by the application. The list is persistent across application restarts only if the message database is used"
        }
      ],
      "definition": {
        "name": "getActiveLiveLocationMessages",
        "id": 2869507729,
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the last message sent in a chat no later than the specified date"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "date",
          "value": "Point in time (Unix timestamp) relative to which to search for messages"
        }
      ],
      "definition": {
        "name": "getChatMessageByDate",
        "id": 1062564150,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "date",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns approximate number of messages of the specified type in the chat"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat in which to count messages"
        },
        {
          "name": "filter",
          "value": "Filter for message content; searchMessagesFilterEmpty is unsupported in this function"
        },
        {
          "name": "return_local",
          "value": "If true, returns count that is available locally without sending network requests, returning -1 if the number of messages is unknown"
        }
      ],
      "definition": {
        "name": "getChatMessageCount",
        "id": 205435308,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "SearchMessagesFilter"
            }
          },
          {
            "name": "return_local",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Count"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all scheduled messages in a chat. The messages are returned in a reverse chronological order (i.e., in order of decreasing message_id)"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "getChatScheduledMessages",
        "id": 3745329147,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns forwarded copies of a channel message to different public channels. For optimal performance the number of returned messages is chosen by the library"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "offset",
          "value": "Offset of the first entry to return as received from the previous request; use empty string to get first chunk of results"
        },
        {
          "name": "limit",
          "value": "The maximum number of messages to be returned; must be positive and can't be greater than 100. Fewer messages may be returned than specified by the limit, even if the end of the list has not been reached"
        }
      ],
      "definition": {
        "name": "getMessagePublicForwards",
        "id": 1611049289,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FoundMessages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes an active notification from notification list. Needs to be called only if the notification is removed by the current user"
        },
        {
          "name": "notification_group_id",
          "value": "Identifier of notification group to which the notification belongs"
        },
        {
          "name": "notification_id",
          "value": "Identifier of removed notification"
        }
      ],
      "definition": {
        "name": "removeNotification",
        "id": 862630734,
        "params": [
          {
            "name": "notification_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "notification_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a group of active notifications. Needs to be called only if the notification group is removed by the current user"
        },
        {
          "name": "notification_group_id",
          "value": "Notification group identifier"
        },
        {
          "name": "max_notification_id",
          "value": "The maximum identifier of removed notifications"
        }
      ],
      "definition": {
        "name": "removeNotificationGroup",
        "id": 1713005454,
        "params": [
          {
            "name": "notification_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "max_notification_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTTPS link to a message in a chat. Available only for already sent messages in supergroups and channels. This is an offline request"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the message belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "for_album",
          "value": "Pass true to create a link for the whole media album"
        },
        {
          "name": "for_comment",
          "value": "Pass true to create a link to the message as a channel post comment, or from a message thread"
        }
      ],
      "definition": {
        "name": "getMessageLink",
        "id": 4117300159,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "for_album",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "for_comment",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageLink"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTML code for embedding the message. Available only for messages in supergroups and channels with a username"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the message belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "for_album",
          "value": "Pass true to return an HTML code for embedding of the whole media album"
        }
      ],
      "definition": {
        "name": "getMessageEmbeddingCode",
        "id": 1654967561,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "for_album",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a public or private message link"
        },
        {
          "name": "url",
          "value": "The message link in the format \"https://t.me/c/...\", or \"tg://privatepost?...\", or \"https://t.me/username/...\", or \"tg://resolve?...\""
        }
      ],
      "definition": {
        "name": "getMessageLinkInfo",
        "id": 3594433624,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageLinkInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a message. Returns the sent message"
        },
        {
          "name": "chat_id",
          "value": "Target chat"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the message will be sent"
        },
        {
          "name": "reply_to_message_id",
          "value": "Identifier of the message to reply to or 0"
        },
        {
          "name": "options",
          "value": "Options to be used to send the message"
        },
        {
          "name": "reply_markup",
          "value": "Markup for replying to the message; for bots only"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be sent"
        }
      ],
      "definition": {
        "name": "sendMessage",
        "id": 960453021,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "options",
            "type": {
              "name": "messageSendOptions",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends messages grouped together into an album. Currently only audio, document, photo and video messages can be grouped into an album. Documents and audio files can be only groupув in an album with messages of the same type. Returns sent messages"
        },
        {
          "name": "chat_id",
          "value": "Target chat"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the messages will be sent"
        },
        {
          "name": "reply_to_message_id",
          "value": "Identifier of a message to reply to or 0"
        },
        {
          "name": "options",
          "value": "Options to be used to send the messages"
        },
        {
          "name": "input_message_contents",
          "value": "Contents of messages to be sent"
        }
      ],
      "definition": {
        "name": "sendMessageAlbum",
        "id": 2926531046,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "options",
            "type": {
              "name": "messageSendOptions",
              "bare": true
            }
          },
          {
            "name": "input_message_contents",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputMessageContent"
              }
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Invites a bot to a chat (if it is not yet a member) and sends it the /start command. Bots can't be invited to a private chat other than the chat with the bot. Bots can't be invited to channels (although they can be added as admins) and secret chats. Returns the sent message"
        },
        {
          "name": "bot_user_id",
          "value": "Identifier of the bot"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the target chat"
        },
        {
          "name": "parameter",
          "value": "A hidden parameter sent to the bot for deep linking purposes (https://core.telegram.org/bots#deep-linking)"
        }
      ],
      "definition": {
        "name": "sendBotStartMessage",
        "id": 1112181339,
        "params": [
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "parameter",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends the result of an inline query as a message. Returns the sent message. Always clears a chat draft message"
        },
        {
          "name": "chat_id",
          "value": "Target chat"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the message will be sent"
        },
        {
          "name": "reply_to_message_id",
          "value": "Identifier of a message to reply to or 0"
        },
        {
          "name": "options",
          "value": "Options to be used to send the message"
        },
        {
          "name": "query_id",
          "value": "Identifier of the inline query"
        },
        {
          "name": "result_id",
          "value": "Identifier of the inline result"
        },
        {
          "name": "hide_via_bot",
          "value": "If true, there will be no mention of a bot, via which the message is sent. Can be used only for bots GetOption(\"animation_search_bot_username\"), GetOption(\"photo_search_bot_username\") and GetOption(\"venue_search_bot_username\")"
        }
      ],
      "definition": {
        "name": "sendInlineQueryResultMessage",
        "id": 3346327708,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "options",
            "type": {
              "name": "messageSendOptions",
              "bare": true
            }
          },
          {
            "name": "query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "result_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "hide_via_bot",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Forwards previously sent messages. Returns the forwarded messages in the same order as the message identifiers passed in message_ids. If a message can't be forwarded, null will be returned instead of the message"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which to forward messages"
        },
        {
          "name": "from_chat_id",
          "value": "Identifier of the chat from which to forward messages"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of the messages to forward. Message identifiers must be in a strictly increasing order"
        },
        {
          "name": "options",
          "value": "Options to be used to send the messages"
        },
        {
          "name": "send_copy",
          "value": "True, if content of the messages needs to be copied without links to the original messages. Always true if the messages are forwarded to a secret chat"
        },
        {
          "name": "remove_caption",
          "value": "True, if media caption of message copies needs to be removed. Ignored if send_copy is false"
        }
      ],
      "definition": {
        "name": "forwardMessages",
        "id": 406979615,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "from_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "options",
            "type": {
              "name": "messageSendOptions",
              "bare": true
            }
          },
          {
            "name": "send_copy",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "remove_caption",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resends messages which failed to send. Can be called only for messages for which messageSendingStateFailed.can_retry is true and after specified in messageSendingStateFailed.retry_after time passed."
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to send messages"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of the messages to resend. Message identifiers must be in a strictly increasing order"
        }
      ],
      "definition": {
        "name": "resendMessages",
        "id": 1624461496,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Messages"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the current TTL setting (sets a new self-destruct timer) in a secret chat and sends the corresponding message"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "ttl",
          "value": "New TTL value, in seconds"
        }
      ],
      "definition": {
        "name": "sendChatSetTtlMessage",
        "id": 1432535564,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a notification about a screenshot taken in a chat. Supported only in private and secret chats"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "sendChatScreenshotTakenNotification",
        "id": 448399457,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a local message to a chat. The message is persistent across application restarts only if the message database is used. Returns the added message"
        },
        {
          "name": "chat_id",
          "value": "Target chat"
        },
        {
          "name": "sender",
          "value": "The sender sender of the message"
        },
        {
          "name": "reply_to_message_id",
          "value": "Identifier of the message to reply to or 0"
        },
        {
          "name": "disable_notification",
          "value": "Pass true to disable notification for the message"
        },
        {
          "name": "input_message_content",
          "value": "The content of the message to be added"
        }
      ],
      "definition": {
        "name": "addLocalMessage",
        "id": 856399322,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "sender",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "reply_to_message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "disable_notification",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes messages"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of the messages to be deleted"
        },
        {
          "name": "revoke",
          "value": "Pass true to try to delete messages for all chat members. Always true for supergroups, channels and secret chats"
        }
      ],
      "definition": {
        "name": "deleteMessages",
        "id": 3287129570,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "revoke",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes all messages sent by the specified user to a chat. Supported only for supergroups; requires can_delete_messages administrator privileges"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "deleteChatMessagesFromUser",
        "id": 2695278097,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the text of a message (or a text of a game message). Returns the edited message after the edit is completed on the server side"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        },
        {
          "name": "input_message_content",
          "value": "New text content of the message. Should be of type InputMessageText"
        }
      ],
      "definition": {
        "name": "editMessageText",
        "id": 196272567,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the message content of a live location. Messages can be edited for a limited period of time specified in the live location. Returns the edited message after the edit is completed on the server side"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        },
        {
          "name": "location",
          "value": "New location content of the message; may be null. Pass null to stop sharing the live location"
        },
        {
          "name": "heading",
          "value": "The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown"
        },
        {
          "name": "proximity_alert_radius",
          "value": "The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled"
        }
      ],
      "definition": {
        "name": "editMessageLiveLocation",
        "id": 4280919314,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "heading",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "proximity_alert_radius",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the content of a message with an animation, an audio, a document, a photo or a video. The media in the message can't be replaced if the message was set to self-destruct. Media can't be replaced by self-destructing media. Media in an album can be edited only to contain a photo or a video. Returns the edited message after the edit is completed on the server side"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        },
        {
          "name": "input_message_content",
          "value": "New content of the message. Must be one of the following types: InputMessageAnimation, InputMessageAudio, InputMessageDocument, InputMessagePhoto or InputMessageVideo"
        }
      ],
      "definition": {
        "name": "editMessageMedia",
        "id": 3142289171,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the message content caption. Returns the edited message after the edit is completed on the server side"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        },
        {
          "name": "caption",
          "value": "New message content caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "editMessageCaption",
        "id": 1154677038,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the message reply markup; for bots only. Returns the edited message after the edit is completed on the server side"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup"
        }
      ],
      "definition": {
        "name": "editMessageReplyMarkup",
        "id": 332127881,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the text of an inline text or game message sent via a bot; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup"
        },
        {
          "name": "input_message_content",
          "value": "New text content of the message. Should be of type InputMessageText"
        }
      ],
      "definition": {
        "name": "editInlineMessageText",
        "id": 3439509989,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the content of a live location in an inline message sent via a bot; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup"
        },
        {
          "name": "location",
          "value": "New location content of the message; may be null. Pass null to stop sharing the live location"
        },
        {
          "name": "heading",
          "value": "The new direction in which the location moves, in degrees; 1-360. Pass 0 if unknown"
        },
        {
          "name": "proximity_alert_radius",
          "value": "The new maximum distance for proximity alerts, in meters (0-100000). Pass 0 if the notification is disabled"
        }
      ],
      "definition": {
        "name": "editInlineMessageLiveLocation",
        "id": 4138064384,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "heading",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "proximity_alert_radius",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the content of a message with an animation, an audio, a document, a photo or a video in an inline message sent via a bot; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        },
        {
          "name": "input_message_content",
          "value": "New content of the message. Must be one of the following types: InputMessageAnimation, InputMessageAudio, InputMessageDocument, InputMessagePhoto or InputMessageVideo"
        }
      ],
      "definition": {
        "name": "editInlineMessageMedia",
        "id": 23553921,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "input_message_content",
            "type": {
              "name": "InputMessageContent"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the caption of an inline message sent via a bot; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup"
        },
        {
          "name": "caption",
          "value": "New message content caption; 0-GetOption(\"message_caption_length_max\") characters"
        }
      ],
      "definition": {
        "name": "editInlineMessageCaption",
        "id": 3533981367,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          },
          {
            "name": "caption",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the reply markup of an inline message sent via a bot; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup"
        }
      ],
      "definition": {
        "name": "editInlineMessageReplyMarkup",
        "id": 4227401438,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits the time when a scheduled message will be sent. Scheduling state of all messages in the same album or forwarded together with the message will be also changed"
        },
        {
          "name": "chat_id",
          "value": "The chat the message belongs to"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "scheduling_state",
          "value": "The new message scheduling state. Pass null to send the message immediately"
        }
      ],
      "definition": {
        "name": "editMessageSchedulingState",
        "id": 2921991104,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "scheduling_state",
            "type": {
              "name": "MessageSchedulingState"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all entities (mentions, hashtags, cashtags, bot commands, bank card numbers, URLs, and email addresses) contained in the text. Can be called synchronously"
        },
        {
          "name": "text",
          "value": "The text in which to look for entites"
        }
      ],
      "definition": {
        "name": "getTextEntities",
        "id": 3953476603,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TextEntities"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Parses Bold, Italic, Underline, Strikethrough, Code, Pre, PreCode, TextUrl and MentionName entities contained in the text. Can be called synchronously"
        },
        {
          "name": "text",
          "value": "The text to parse"
        },
        {
          "name": "parse_mode",
          "value": "Text parse mode"
        }
      ],
      "definition": {
        "name": "parseTextEntities",
        "id": 2585772703,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "parse_mode",
            "type": {
              "name": "TextParseMode"
            }
          }
        ],
        "type": {
          "name": "FormattedText"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Parses Markdown entities in a human-friendly format, ignoring markup errors. Can be called synchronously"
        },
        {
          "name": "text",
          "value": "The text to parse. For example, \"__italic__ ~~strikethrough~~ **bold** `code` ```pre``` __[italic__ text_url](telegram.org) __italic**bold italic__bold**\""
        }
      ],
      "definition": {
        "name": "parseMarkdown",
        "id": 756366063,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FormattedText"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Replaces text entities with Markdown formatting in a human-friendly format. Entities that can't be represented in Markdown unambiguously are kept as is. Can be called synchronously"
        },
        {
          "name": "text",
          "value": "The text"
        }
      ],
      "definition": {
        "name": "getMarkdownText",
        "id": 164524584,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FormattedText"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the MIME type of a file, guessed by its extension. Returns an empty string on failure. Can be called synchronously"
        },
        {
          "name": "file_name",
          "value": "The name of the file or path to the file"
        }
      ],
      "definition": {
        "name": "getFileMimeType",
        "id": 2221087625,
        "params": [
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the extension of a file, guessed by its MIME type. Returns an empty string on failure. Can be called synchronously"
        },
        {
          "name": "mime_type",
          "value": "The MIME type of the file"
        }
      ],
      "definition": {
        "name": "getFileExtension",
        "id": 4188911924,
        "params": [
          {
            "name": "mime_type",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes potentially dangerous characters from the name of a file. The encoding of the file name is supposed to be UTF-8. Returns an empty string on failure. Can be called synchronously"
        },
        {
          "name": "file_name",
          "value": "File name or path to the file"
        }
      ],
      "definition": {
        "name": "cleanFileName",
        "id": 967964667,
        "params": [
          {
            "name": "file_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a string stored in the local database from the specified localization target and language pack by its key. Returns a 404 error if the string is not found. Can be called synchronously"
        },
        {
          "name": "language_pack_database_path",
          "value": "Path to the language pack database in which strings are stored"
        },
        {
          "name": "localization_target",
          "value": "Localization target to which the language pack belongs"
        },
        {
          "name": "language_pack_id",
          "value": "Language pack identifier"
        },
        {
          "name": "key",
          "value": "Language pack key of the string to be returned"
        }
      ],
      "definition": {
        "name": "getLanguagePackString",
        "id": 150789747,
        "params": [
          {
            "name": "language_pack_database_path",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "localization_target",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "key",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LanguagePackStringValue"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Converts a JSON-serialized string to corresponding JsonValue object. Can be called synchronously"
        },
        {
          "name": "json",
          "value": "The JSON-serialized string"
        }
      ],
      "definition": {
        "name": "getJsonValue",
        "id": 2465880581,
        "params": [
          {
            "name": "json",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Converts a JsonValue object to corresponding JSON-serialized string. Can be called synchronously"
        },
        {
          "name": "json_value",
          "value": "The JsonValue object"
        }
      ],
      "definition": {
        "name": "getJsonString",
        "id": 663458849,
        "params": [
          {
            "name": "json_value",
            "type": {
              "name": "JsonValue"
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the user answer to a poll. A poll in quiz mode can be answered only once"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the poll belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message containing the poll"
        },
        {
          "name": "option_ids",
          "value": "0-based identifiers of answer options, chosen by the user. User can choose more than 1 answer option only is the poll allows multiple answers"
        }
      ],
      "definition": {
        "name": "setPollAnswer",
        "id": 1392752918,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "option_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users voted for the specified option in a non-anonymous polls. For the optimal performance the number of returned users is chosen by the library"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the poll belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message containing the poll"
        },
        {
          "name": "option_id",
          "value": "0-based identifier of the answer option"
        },
        {
          "name": "offset",
          "value": "Number of users to skip in the result; must be non-negative"
        },
        {
          "name": "limit",
          "value": "The maximum number of users to be returned; must be positive and can't be greater than 50. Fewer users may be returned than specified by the limit, even if the end of the voter list has not been reached"
        }
      ],
      "definition": {
        "name": "getPollVoters",
        "id": 2075288734,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "option_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Users"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Stops a poll. A poll in a message can be stopped when the message has can_be_edited flag set"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to which the poll belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message containing the poll"
        },
        {
          "name": "reply_markup",
          "value": "The new message reply markup; for bots only"
        }
      ],
      "definition": {
        "name": "stopPoll",
        "id": 1659374253,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reply_markup",
            "type": {
              "name": "ReplyMarkup"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Hides a suggested action"
        },
        {
          "name": "action",
          "value": "Suggested action to hide"
        }
      ],
      "definition": {
        "name": "hideSuggestedAction",
        "id": 2733583231,
        "params": [
          {
            "name": "action",
            "type": {
              "name": "SuggestedAction"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a button of type inlineKeyboardButtonTypeLoginUrl. The method needs to be called when the user presses the button"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the message with the button"
        },
        {
          "name": "message_id",
          "value": "Message identifier of the message with the button"
        },
        {
          "name": "button_id",
          "value": "Button identifier"
        }
      ],
      "definition": {
        "name": "getLoginUrlInfo",
        "id": 3314924330,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "button_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LoginUrlInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTTP URL which can be used to automatically authorize the user on a website after clicking an inline button of type inlineKeyboardButtonTypeLoginUrl."
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the message with the button"
        },
        {
          "name": "message_id",
          "value": "Message identifier of the message with the button"
        },
        {
          "name": "button_id",
          "value": "Button identifier"
        },
        {
          "name": "allow_write_access",
          "value": "True, if the user allowed the bot to send them messages"
        }
      ],
      "definition": {
        "name": "getLoginUrl",
        "id": 694973925,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "button_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "allow_write_access",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "HttpUrl"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends an inline query to a bot and returns its results. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires"
        },
        {
          "name": "bot_user_id",
          "value": "The identifier of the target bot"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat where the query was sent"
        },
        {
          "name": "user_location",
          "value": "Location of the user, only if needed"
        },
        {
          "name": "query",
          "value": "Text of the query"
        },
        {
          "name": "offset",
          "value": "Offset of the first entry to return"
        }
      ],
      "definition": {
        "name": "getInlineQueryResults",
        "id": 3112456124,
        "params": [
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "InlineQueryResults"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the result of an inline query; for bots only"
        },
        {
          "name": "inline_query_id",
          "value": "Identifier of the inline query"
        },
        {
          "name": "is_personal",
          "value": "True, if the result of the query can be cached for the specified user"
        },
        {
          "name": "results",
          "value": "The results of the query"
        },
        {
          "name": "cache_time",
          "value": "Allowed time to cache the results of the query, in seconds"
        },
        {
          "name": "next_offset",
          "value": "Offset for the next inline query; pass an empty string if there are no more results"
        },
        {
          "name": "switch_pm_text",
          "value": "If non-empty, this text should be shown on the button that opens a private chat with the bot and sends a start message to the bot with the parameter switch_pm_parameter"
        },
        {
          "name": "switch_pm_parameter",
          "value": "The parameter for the bot start message"
        }
      ],
      "definition": {
        "name": "answerInlineQuery",
        "id": 418142278,
        "params": [
          {
            "name": "inline_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "is_personal",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "results",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputInlineQueryResult"
              }
            }
          },
          {
            "name": "cache_time",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "next_offset",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "switch_pm_text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "switch_pm_parameter",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a callback query to a bot and returns an answer. Returns an error with code 502 if the bot fails to answer the query before the query timeout expires"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat with the message"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message from which the query originated"
        },
        {
          "name": "payload",
          "value": "Query payload"
        }
      ],
      "definition": {
        "name": "getCallbackQueryAnswer",
        "id": 116357727,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "payload",
            "type": {
              "name": "CallbackQueryPayload"
            }
          }
        ],
        "type": {
          "name": "CallbackQueryAnswer"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the result of a callback query; for bots only"
        },
        {
          "name": "callback_query_id",
          "value": "Identifier of the callback query"
        },
        {
          "name": "text",
          "value": "Text of the answer"
        },
        {
          "name": "show_alert",
          "value": "If true, an alert should be shown to the user instead of a toast notification"
        },
        {
          "name": "url",
          "value": "URL to be opened"
        },
        {
          "name": "cache_time",
          "value": "Time during which the result of the query can be cached, in seconds"
        }
      ],
      "definition": {
        "name": "answerCallbackQuery",
        "id": 3141938806,
        "params": [
          {
            "name": "callback_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "show_alert",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "cache_time",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the result of a shipping query; for bots only"
        },
        {
          "name": "shipping_query_id",
          "value": "Identifier of the shipping query"
        },
        {
          "name": "shipping_options",
          "value": "Available shipping options"
        },
        {
          "name": "error_message",
          "value": "An error message, empty on success"
        }
      ],
      "definition": {
        "name": "answerShippingQuery",
        "id": 2050761778,
        "params": [
          {
            "name": "shipping_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "shipping_options",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "shippingOption",
                "bare": true
              }
            }
          },
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the result of a pre-checkout query; for bots only"
        },
        {
          "name": "pre_checkout_query_id",
          "value": "Identifier of the pre-checkout query"
        },
        {
          "name": "error_message",
          "value": "An error message, empty on success"
        }
      ],
      "definition": {
        "name": "answerPreCheckoutQuery",
        "id": 2808177643,
        "params": [
          {
            "name": "pre_checkout_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Updates the game score of the specified user in the game; for bots only"
        },
        {
          "name": "chat_id",
          "value": "The chat to which the message with the game belongs"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "edit_message",
          "value": "True, if the message should be edited"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "score",
          "value": "The new score"
        },
        {
          "name": "force",
          "value": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table"
        }
      ],
      "definition": {
        "name": "setGameScore",
        "id": 2526660227,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "edit_message",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "score",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "force",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Message"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Updates the game score of the specified user in a game; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "edit_message",
          "value": "True, if the message should be edited"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "score",
          "value": "The new score"
        },
        {
          "name": "force",
          "value": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table"
        }
      ],
      "definition": {
        "name": "setInlineGameScore",
        "id": 758435487,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "edit_message",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "score",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "force",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the high scores for a game and some part of the high score table in the range of the specified user; for bots only"
        },
        {
          "name": "chat_id",
          "value": "The chat that contains the message with the game"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "getGameHighScores",
        "id": 1920923753,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "GameHighScores"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns game high scores and some part of the high score table in the range of the specified user; for bots only"
        },
        {
          "name": "inline_message_id",
          "value": "Inline message identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "getInlineGameHighScores",
        "id": 2461521496,
        "params": [
          {
            "name": "inline_message_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "GameHighScores"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes the default reply markup from a chat. Must be called after a one-time keyboard or a ForceReply reply markup has been used. UpdateChatReplyMarkup will be sent if the reply markup will be changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "The message identifier of the used keyboard"
        }
      ],
      "definition": {
        "name": "deleteChatReplyMarkup",
        "id": 100637531,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a notification about user activity in a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the action was performed"
        },
        {
          "name": "action",
          "value": "The action description"
        }
      ],
      "definition": {
        "name": "sendChatAction",
        "id": 2096947540,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "action",
            "type": {
              "name": "ChatAction"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs TDLib that the chat is opened by the user. Many useful activities depend on the chat being opened or closed (e.g., in supergroups and channels all updates are received only for opened chats)"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "openChat",
        "id": 3971595787,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs TDLib that the chat is closed by the user. Many useful activities depend on the chat being opened or closed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "closeChat",
        "id": 39749353,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs TDLib that messages are being viewed by the user. Many useful activities depend on whether the messages are currently being viewed or not (e.g., marking messages as read, incrementing a view counter, updating a view counter, removing deleted messages in supergroups and channels)"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the messages are being viewed"
        },
        {
          "name": "message_ids",
          "value": "The identifiers of the messages being viewed"
        },
        {
          "name": "force_read",
          "value": "True, if messages in closed chats should be marked as read by the request"
        }
      ],
      "definition": {
        "name": "viewMessages",
        "id": 3605069917,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "force_read",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs TDLib that the message content has been opened (e.g., the user has opened a photo, video, document, location or venue, or has listened to an audio file or voice note message). An updateMessageContentOpened update will be generated if something has changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the message"
        },
        {
          "name": "message_id",
          "value": "Identifier of the message with the opened content"
        }
      ],
      "definition": {
        "name": "openMessageContent",
        "id": 3555879291,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Marks all mentions in a chat as read"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "readAllChatMentions",
        "id": 1357558453,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an existing chat corresponding to a given user"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "force",
          "value": "If true, the chat will be created without network request. In this case all information about the chat except its type, title and photo can be incorrect"
        }
      ],
      "definition": {
        "name": "createPrivateChat",
        "id": 2487436932,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "force",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an existing chat corresponding to a known basic group"
        },
        {
          "name": "basic_group_id",
          "value": "Basic group identifier"
        },
        {
          "name": "force",
          "value": "If true, the chat will be created without network request. In this case all information about the chat except its type, title and photo can be incorrect"
        }
      ],
      "definition": {
        "name": "createBasicGroupChat",
        "id": 642492777,
        "params": [
          {
            "name": "basic_group_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "force",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an existing chat corresponding to a known supergroup or channel"
        },
        {
          "name": "supergroup_id",
          "value": "Supergroup or channel identifier"
        },
        {
          "name": "force",
          "value": "If true, the chat will be created without network request. In this case all information about the chat except its type, title and photo can be incorrect"
        }
      ],
      "definition": {
        "name": "createSupergroupChat",
        "id": 352742758,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "force",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an existing chat corresponding to a known secret chat"
        },
        {
          "name": "secret_chat_id",
          "value": "Secret chat identifier"
        }
      ],
      "definition": {
        "name": "createSecretChat",
        "id": 1930285615,
        "params": [
          {
            "name": "secret_chat_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new basic group and sends a corresponding messageBasicGroupChatCreate. Returns the newly created chat"
        },
        {
          "name": "user_ids",
          "value": "Identifiers of users to be added to the basic group"
        },
        {
          "name": "title",
          "value": "Title of the new basic group; 1-128 characters"
        }
      ],
      "definition": {
        "name": "createNewBasicGroupChat",
        "id": 297091731,
        "params": [
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new supergroup or channel and sends a corresponding messageSupergroupChatCreate. Returns the newly created chat"
        },
        {
          "name": "title",
          "value": "Title of the new chat; 1-128 characters"
        },
        {
          "name": "is_channel",
          "value": "True, if a channel chat should be created"
        },
        {
          "name": "param_description",
          "value": "Chat description; 0-255 characters"
        },
        {
          "name": "location",
          "value": "Chat location if a location-based supergroup is being created"
        }
      ],
      "definition": {
        "name": "createNewSupergroupChat",
        "id": 4285968045,
        "params": [
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_channel",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "chatLocation",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new secret chat. Returns the newly created chat"
        },
        {
          "name": "user_id",
          "value": "Identifier of the target user"
        }
      ],
      "definition": {
        "name": "createNewSecretChat",
        "id": 1689344881,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new supergroup from an existing basic group and sends a corresponding messageChatUpgradeTo and messageChatUpgradeFrom; requires creator privileges. Deactivates the original basic group"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat to upgrade"
        }
      ],
      "definition": {
        "name": "upgradeBasicGroupChatToSupergroupChat",
        "id": 300488122,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns chat lists to which the chat can be added. This is an offline request"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "getChatListsToAddChat",
        "id": 654956193,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatLists"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a chat to a chat list. A chat can't be simultaneously in Main and Archive chat lists, so it is automatically removed from another one if needed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "chat_list",
          "value": "The chat list. Use getChatListsToAddChat to get suitable chat lists"
        }
      ],
      "definition": {
        "name": "addChatToList",
        "id": 4214443701,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a chat filter by its identifier"
        },
        {
          "name": "chat_filter_id",
          "value": "Chat filter identifier"
        }
      ],
      "definition": {
        "name": "getChatFilter",
        "id": 1826317803,
        "params": [
          {
            "name": "chat_filter_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatFilter"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates new chat filter. Returns information about the created chat filter"
        },
        {
          "name": "filter",
          "value": "Chat filter"
        }
      ],
      "definition": {
        "name": "createChatFilter",
        "id": 49065126,
        "params": [
          {
            "name": "filter",
            "type": {
              "name": "chatFilter",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatFilterInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits existing chat filter. Returns information about the edited chat filter"
        },
        {
          "name": "chat_filter_id",
          "value": "Chat filter identifier"
        },
        {
          "name": "filter",
          "value": "The edited chat filter"
        }
      ],
      "definition": {
        "name": "editChatFilter",
        "id": 2620174210,
        "params": [
          {
            "name": "chat_filter_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "chatFilter",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatFilterInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes existing chat filter"
        },
        {
          "name": "chat_filter_id",
          "value": "Chat filter identifier"
        }
      ],
      "definition": {
        "name": "deleteChatFilter",
        "id": 3771746419,
        "params": [
          {
            "name": "chat_filter_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the order of chat filters"
        },
        {
          "name": "chat_filter_ids",
          "value": "Identifiers of chat filters in the new correct order"
        }
      ],
      "definition": {
        "name": "reorderChatFilters",
        "id": 3282383165,
        "params": [
          {
            "name": "chat_filter_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns recommended chat filters for the current user"
        }
      ],
      "definition": {
        "name": "getRecommendedChatFilters",
        "id": 3515576550,
        "type": {
          "name": "RecommendedChatFilters"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns default icon name for a filter. Can be called synchronously"
        },
        {
          "name": "filter",
          "value": "Chat filter"
        }
      ],
      "definition": {
        "name": "getChatFilterDefaultIconName",
        "id": 2955138616,
        "params": [
          {
            "name": "filter",
            "type": {
              "name": "chatFilter",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the chat title. Supported only for basic groups, supergroups and channels. Requires can_change_info rights"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "title",
          "value": "New title of the chat; 1-128 characters"
        }
      ],
      "definition": {
        "name": "setChatTitle",
        "id": 164282047,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the photo of a chat. Supported only for basic groups, supergroups and channels. Requires can_change_info rights"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "photo",
          "value": "New chat photo. Pass null to delete the chat photo"
        }
      ],
      "definition": {
        "name": "setChatPhoto",
        "id": 3917188355,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "photo",
            "type": {
              "name": "InputChatPhoto"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the chat members permissions. Supported only for basic groups and supergroups. Requires can_restrict_members administrator right"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "permissions",
          "value": "New non-administrator members permissions in the chat"
        }
      ],
      "definition": {
        "name": "setChatPermissions",
        "id": 2138507006,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "permissions",
            "type": {
              "name": "chatPermissions",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the draft message in a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_thread_id",
          "value": "If not 0, a message thread identifier in which the draft was changed"
        },
        {
          "name": "draft_message",
          "value": "New draft message; may be null"
        }
      ],
      "definition": {
        "name": "setChatDraftMessage",
        "id": 1683889946,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_thread_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "draft_message",
            "type": {
              "name": "draftMessage",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the notification settings of a chat. Notification settings of a chat with the current user (Saved Messages) can't be changed"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "notification_settings",
          "value": "New notification settings for the chat. If the chat is muted for more than 1 week, it is considered to be muted forever"
        }
      ],
      "definition": {
        "name": "setChatNotificationSettings",
        "id": 777199614,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "notification_settings",
            "type": {
              "name": "chatNotificationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the marked as unread state of a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "is_marked_as_unread",
          "value": "New value of is_marked_as_unread"
        }
      ],
      "definition": {
        "name": "toggleChatIsMarkedAsUnread",
        "id": 3308837599,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_marked_as_unread",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the value of the default disable_notification parameter, used when a message is sent to a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "default_disable_notification",
          "value": "New value of default_disable_notification"
        }
      ],
      "definition": {
        "name": "toggleChatDefaultDisableNotification",
        "id": 314794002,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "default_disable_notification",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes application-specific data associated with a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "client_data",
          "value": "New value of client_data"
        }
      ],
      "definition": {
        "name": "setChatClientData",
        "id": 3467847485,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "client_data",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes information about a chat. Available for basic groups, supergroups, and channels. Requires can_change_info rights"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat"
        },
        {
          "name": "param_description",
          "value": "New chat description; 0-255 characters"
        }
      ],
      "definition": {
        "name": "setChatDescription",
        "id": 1957213277,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "description",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the discussion group of a channel chat; requires can_change_info rights in the channel if it is specified"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the channel chat. Pass 0 to remove a link from the supergroup passed in the second argument to a linked channel chat (requires can_pin_messages rights in the supergroup)"
        },
        {
          "name": "discussion_chat_id",
          "value": "Identifier of a new channel's discussion group. Use 0 to remove the discussion group."
        }
      ],
      "definition": {
        "name": "setChatDiscussionGroup",
        "id": 3376165560,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "discussion_chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the location of a chat. Available only for some location-based supergroups, use supergroupFullInfo.can_set_location to check whether the method is allowed to use"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "location",
          "value": "New location for the chat; must be valid and not null"
        }
      ],
      "definition": {
        "name": "setChatLocation",
        "id": 3527876010,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "location",
            "type": {
              "name": "chatLocation",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the slow mode delay of a chat. Available only for supergroups; requires can_restrict_members rights"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "slow_mode_delay",
          "value": "New slow mode delay for the chat; must be one of 0, 10, 30, 60, 300, 900, 3600"
        }
      ],
      "definition": {
        "name": "setChatSlowModeDelay",
        "id": 3754616382,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "slow_mode_delay",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Pins a message in a chat; requires can_pin_messages rights or can_edit_messages rights in the channel"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat"
        },
        {
          "name": "message_id",
          "value": "Identifier of the new pinned message"
        },
        {
          "name": "disable_notification",
          "value": "True, if there should be no notification about the pinned message. Notifications are always disabled in channels and private chats"
        },
        {
          "name": "only_for_self",
          "value": "True, if the message needs to be pinned only for self; private chats only"
        }
      ],
      "definition": {
        "name": "pinChatMessage",
        "id": 2034719663,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "disable_notification",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "only_for_self",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a pinned message from a chat; requires can_pin_messages rights in the group or can_edit_messages rights in the channel"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat"
        },
        {
          "name": "message_id",
          "value": "Identifier of the removed pinned message"
        }
      ],
      "definition": {
        "name": "unpinChatMessage",
        "id": 2065448670,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes all pinned messages from a chat; requires can_pin_messages rights in the group or can_edit_messages rights in the channel"
        },
        {
          "name": "chat_id",
          "value": "Identifier of the chat"
        }
      ],
      "definition": {
        "name": "unpinAllChatMessages",
        "id": 2857161911,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds current user as a new member to a chat. Private and secret chats can't be joined using this method"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "joinChat",
        "id": 326769313,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes current user from chat members. Private and secret chats can't be left using this method"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "leaveChat",
        "id": 2469886561,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a new member to a chat. Members can't be added to private or secret chats. Members will not be added until the chat state has been synchronized with the server"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user"
        },
        {
          "name": "forward_limit",
          "value": "The number of earlier messages from the chat to be forwarded to the new member; up to 100. Ignored for supergroups and channels"
        }
      ],
      "definition": {
        "name": "addChatMember",
        "id": 1182817962,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "forward_limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds multiple new members to a chat. Currently this option is only available for supergroups and channels. This option can't be used to join a chat. Members can't be added to a channel if it has more than 200 members. Members will not be added until the chat state has been synchronized with the server"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_ids",
          "value": "Identifiers of the users to be added to the chat"
        }
      ],
      "definition": {
        "name": "addChatMembers",
        "id": 3572368139,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the status of a chat member, needs appropriate privileges. This function is currently not suitable for adding new members to the chat and transferring chat ownership; instead, use addChatMember or transferChatOwnership. The chat member status will not be changed until it has been synchronized with the server"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "status",
          "value": "The new status of the member in the chat"
        }
      ],
      "definition": {
        "name": "setChatMemberStatus",
        "id": 2540528055,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "status",
            "type": {
              "name": "ChatMemberStatus"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks whether the current session can be used to transfer a chat ownership to another user"
        }
      ],
      "definition": {
        "name": "canTransferOwnership",
        "id": 634602508,
        "type": {
          "name": "CanTransferOwnershipResult"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the owner of a chat. The current user must be a current owner of the chat. Use the method canTransferOwnership to check whether the ownership can be transferred from the current session. Available only for supergroups and channel chats"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user to which transfer the ownership. The ownership can't be transferred to a bot or to a deleted user"
        },
        {
          "name": "password",
          "value": "The password of the current user"
        }
      ],
      "definition": {
        "name": "transferChatOwnership",
        "id": 2369920169,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a single member of a chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        }
      ],
      "definition": {
        "name": "getChatMember",
        "id": 677085892,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMember"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for a specified query in the first name, last name and username of the members of a specified chat. Requires administrator rights in channels"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "limit",
          "value": "The maximum number of users to be returned"
        },
        {
          "name": "filter",
          "value": "The type of users to return. By default, chatMembersFilterMembers"
        }
      ],
      "definition": {
        "name": "searchChatMembers",
        "id": 3849144005,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "ChatMembersFilter"
            }
          }
        ],
        "type": {
          "name": "ChatMembers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of administrators of the chat with their custom titles"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "getChatAdministrators",
        "id": 1544468155,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatAdministrators"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Clears draft messages in all chats"
        },
        {
          "name": "exclude_secret_chats",
          "value": "If true, local draft messages in secret chats will not be cleared"
        }
      ],
      "definition": {
        "name": "clearAllDraftMessages",
        "id": 4248597723,
        "params": [
          {
            "name": "exclude_secret_chats",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns list of chats with non-default notification settings"
        },
        {
          "name": "scope",
          "value": "If specified, only chats from the specified scope will be returned"
        },
        {
          "name": "compare_sound",
          "value": "If true, also chats with non-default sound will be returned"
        }
      ],
      "definition": {
        "name": "getChatNotificationSettingsExceptions",
        "id": 201199121,
        "params": [
          {
            "name": "scope",
            "type": {
              "name": "NotificationSettingsScope"
            }
          },
          {
            "name": "compare_sound",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Chats"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the notification settings for chats of a given type"
        },
        {
          "name": "scope",
          "value": "Types of chats for which to return the notification settings information"
        }
      ],
      "definition": {
        "name": "getScopeNotificationSettings",
        "id": 3299353935,
        "params": [
          {
            "name": "scope",
            "type": {
              "name": "NotificationSettingsScope"
            }
          }
        ],
        "type": {
          "name": "ScopeNotificationSettings"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes notification settings for chats of a given type"
        },
        {
          "name": "scope",
          "value": "Types of chats for which to change the notification settings"
        },
        {
          "name": "notification_settings",
          "value": "The new notification settings for the given scope"
        }
      ],
      "definition": {
        "name": "setScopeNotificationSettings",
        "id": 2244982330,
        "params": [
          {
            "name": "scope",
            "type": {
              "name": "NotificationSettingsScope"
            }
          },
          {
            "name": "notification_settings",
            "type": {
              "name": "scopeNotificationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resets all notification settings to their default values. By default, all chats are unmuted, the sound is set to \"default\" and message previews are shown"
        }
      ],
      "definition": {
        "name": "resetAllNotificationSettings",
        "id": 4120946937,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the pinned state of a chat. There can be up to GetOption(\"pinned_chat_count_max\")/GetOption(\"pinned_archived_chat_count_max\") pinned non-secret chats and the same number of secret chats in the main/arhive chat list"
        },
        {
          "name": "chat_list",
          "value": "Chat list in which to change the pinned state of the chat"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "is_pinned",
          "value": "True, if the chat is pinned"
        }
      ],
      "definition": {
        "name": "toggleChatIsPinned",
        "id": 2809538110,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_pinned",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the order of pinned chats"
        },
        {
          "name": "chat_list",
          "value": "Chat list in which to change the order of pinned chats"
        },
        {
          "name": "chat_ids",
          "value": "The new list of pinned chats"
        }
      ],
      "definition": {
        "name": "setPinnedChats",
        "id": 3334925809,
        "params": [
          {
            "name": "chat_list",
            "type": {
              "name": "ChatList"
            }
          },
          {
            "name": "chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Downloads a file from the cloud. Download progress and completion of the download will be notified through updateFile updates"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file to download"
        },
        {
          "name": "priority",
          "value": "Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which downloadFile was called will be downloaded first"
        },
        {
          "name": "offset",
          "value": "The starting position from which the file should be downloaded"
        },
        {
          "name": "limit",
          "value": "Number of bytes which should be downloaded starting from the \"offset\" position before the download will be automatically cancelled; use 0 to download without a limit"
        },
        {
          "name": "synchronous",
          "value": "If false, this request returns file state just after the download has been started. If true, this request returns file state only after"
        }
      ],
      "definition": {
        "name": "downloadFile",
        "id": 3192940634,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "priority",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "synchronous",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns file downloaded prefix size from a given offset"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file"
        },
        {
          "name": "offset",
          "value": "Offset from which downloaded prefix size should be calculated"
        }
      ],
      "definition": {
        "name": "getFileDownloadedPrefixSize",
        "id": 2626102432,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Count"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Stops the downloading of a file. If a file has already been downloaded, does nothing"
        },
        {
          "name": "file_id",
          "value": "Identifier of a file to stop downloading"
        },
        {
          "name": "only_if_pending",
          "value": "Pass true to stop downloading only if it hasn't been started, i.e. request hasn't been sent to server"
        }
      ],
      "definition": {
        "name": "cancelDownloadFile",
        "id": 2340442846,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "only_if_pending",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Asynchronously uploads a file to the cloud without sending it in a message. updateFile will be used to notify about upload progress and successful completion of the upload. The file will not have a persistent remote identifier until it will be sent in a message"
        },
        {
          "name": "file",
          "value": "File to upload"
        },
        {
          "name": "file_type",
          "value": "File type"
        },
        {
          "name": "priority",
          "value": "Priority of the upload (1-32). The higher the priority, the earlier the file will be uploaded. If the priorities of two files are equal, then the first one for which uploadFile was called will be uploaded first"
        }
      ],
      "definition": {
        "name": "uploadFile",
        "id": 3549369510,
        "params": [
          {
            "name": "file",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "file_type",
            "type": {
              "name": "FileType"
            }
          },
          {
            "name": "priority",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Stops the uploading of a file. Supported only for files uploaded by using uploadFile. For other files the behavior is undefined"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file to stop uploading"
        }
      ],
      "definition": {
        "name": "cancelUploadFile",
        "id": 1623539600,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Writes a part of a generated file. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct write to the destination file"
        },
        {
          "name": "generation_id",
          "value": "The identifier of the generation process"
        },
        {
          "name": "offset",
          "value": "The offset from which to write the data to the file"
        },
        {
          "name": "data",
          "value": "The data to write"
        }
      ],
      "definition": {
        "name": "writeGeneratedFilePart",
        "id": 2232609107,
        "params": [
          {
            "name": "generation_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs TDLib on a file generation progress"
        },
        {
          "name": "generation_id",
          "value": "The identifier of the generation process"
        },
        {
          "name": "expected_size",
          "value": "Expected size of the generated file, in bytes; 0 if unknown"
        },
        {
          "name": "local_prefix_size",
          "value": "The number of bytes already generated"
        }
      ],
      "definition": {
        "name": "setFileGenerationProgress",
        "id": 3754507343,
        "params": [
          {
            "name": "generation_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "expected_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "local_prefix_size",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Finishes the file generation"
        },
        {
          "name": "generation_id",
          "value": "The identifier of the generation process"
        },
        {
          "name": "error",
          "value": "If set, means that file generation has failed and should be terminated"
        }
      ],
      "definition": {
        "name": "finishFileGeneration",
        "id": 3239906461,
        "params": [
          {
            "name": "generation_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "error",
            "type": {
              "name": "error",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Reads a part of a file from the TDLib file cache and returns read bytes. This method is intended to be used only if the application has no direct access to TDLib's file system, because it is usually slower than a direct read from the file"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file. The file must be located in the TDLib file cache"
        },
        {
          "name": "offset",
          "value": "The offset from which to read the file"
        },
        {
          "name": "count",
          "value": "Number of bytes to read. An error will be returned if there are not enough bytes available in the file from the specified position. Pass 0 to read all available data from the specified position"
        }
      ],
      "definition": {
        "name": "readFilePart",
        "id": 3887217982,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "FilePart"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes a file from the TDLib file cache"
        },
        {
          "name": "file_id",
          "value": "Identifier of the file to delete"
        }
      ],
      "definition": {
        "name": "deleteFile",
        "id": 1807653676,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Generates a new invite link for a chat; the previously generated link is revoked. Available for basic groups, supergroups, and channels. Requires administrator privileges and can_invite_users right"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "generateChatInviteLink",
        "id": 1945532500,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatInviteLink"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the validity of an invite link for a chat and returns information about the corresponding chat"
        },
        {
          "name": "invite_link",
          "value": "Invite link to be checked; should begin with \"https://t.me/joinchat/\", \"https://telegram.me/joinchat/\", or \"https://telegram.dog/joinchat/\""
        }
      ],
      "definition": {
        "name": "checkChatInviteLink",
        "id": 3798026299,
        "params": [
          {
            "name": "invite_link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatInviteLinkInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Uses an invite link to add the current user to the chat if possible. The new member will not be added until the chat state has been synchronized with the server"
        },
        {
          "name": "invite_link",
          "value": "Invite link to import; should begin with \"https://t.me/joinchat/\", \"https://telegram.me/joinchat/\", or \"https://telegram.dog/joinchat/\""
        }
      ],
      "definition": {
        "name": "joinChatByInviteLink",
        "id": 3244993414,
        "params": [
          {
            "name": "invite_link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Chat"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new call"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user to be called"
        },
        {
          "name": "protocol",
          "value": "Description of the call protocols supported by the application"
        },
        {
          "name": "is_video",
          "value": "True, if a video call needs to be created"
        }
      ],
      "definition": {
        "name": "createCall",
        "id": 1837533340,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "protocol",
            "type": {
              "name": "callProtocol",
              "bare": true
            }
          },
          {
            "name": "is_video",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "CallId"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Accepts an incoming call"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        },
        {
          "name": "protocol",
          "value": "Description of the call protocols supported by the application"
        }
      ],
      "definition": {
        "name": "acceptCall",
        "id": 3648348880,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "protocol",
            "type": {
              "name": "callProtocol",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends call signaling data"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        },
        {
          "name": "data",
          "value": "The data"
        }
      ],
      "definition": {
        "name": "sendCallSignalingData",
        "id": 1412280732,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Discards a call"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        },
        {
          "name": "is_disconnected",
          "value": "True, if the user was disconnected"
        },
        {
          "name": "duration",
          "value": "The call duration, in seconds"
        },
        {
          "name": "is_video",
          "value": "True, if the call was a video call"
        },
        {
          "name": "connection_id",
          "value": "Identifier of the connection used during the call"
        }
      ],
      "definition": {
        "name": "discardCall",
        "id": 2510923134,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_disconnected",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_video",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "connection_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a call rating"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        },
        {
          "name": "rating",
          "value": "Call rating; 1-5"
        },
        {
          "name": "comment",
          "value": "An optional user comment if the rating is less than 5"
        },
        {
          "name": "problems",
          "value": "List of the exact types of problems with the call, specified by the user"
        }
      ],
      "definition": {
        "name": "sendCallRating",
        "id": 3634059116,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "rating",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "comment",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "problems",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "CallProblem"
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends debug information for a call"
        },
        {
          "name": "call_id",
          "value": "Call identifier"
        },
        {
          "name": "debug_information",
          "value": "Debug information in application-specific format"
        }
      ],
      "definition": {
        "name": "sendCallDebugInformation",
        "id": 2019243839,
        "params": [
          {
            "name": "call_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "debug_information",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the block state of a message sender. Currently, only users and supergroup chats can be blocked"
        },
        {
          "name": "sender",
          "value": "Message Sender"
        },
        {
          "name": "is_blocked",
          "value": "New value of is_blocked"
        }
      ],
      "definition": {
        "name": "toggleMessageSenderIsBlocked",
        "id": 3534834591,
        "params": [
          {
            "name": "sender",
            "type": {
              "name": "MessageSender"
            }
          },
          {
            "name": "is_blocked",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Blocks an original sender of a message in the Replies chat"
        },
        {
          "name": "message_id",
          "value": "The identifier of an incoming message in the Replies chat"
        },
        {
          "name": "delete_message",
          "value": "Pass true if the message must be deleted"
        },
        {
          "name": "delete_all_messages",
          "value": "Pass true if all messages from the same sender must be deleted"
        },
        {
          "name": "report_spam",
          "value": "Pass true if the sender must be reported to the Telegram moderators"
        }
      ],
      "definition": {
        "name": "blockMessageSenderFromReplies",
        "id": 3080582539,
        "params": [
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "delete_message",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "delete_all_messages",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "report_spam",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns users and chats that were blocked by the current user"
        },
        {
          "name": "offset",
          "value": "Number of users and chats to skip in the result; must be non-negative"
        },
        {
          "name": "limit",
          "value": "The maximum number of users and chats to return; up to 100"
        }
      ],
      "definition": {
        "name": "getBlockedMessageSenders",
        "id": 1947079776,
        "params": [
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "MessageSenders"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a user to the contact list or edits an existing contact by their user identifier"
        },
        {
          "name": "contact",
          "value": "The contact to add or edit; phone number can be empty and needs to be specified only if known, vCard is ignored"
        },
        {
          "name": "share_phone_number",
          "value": "True, if the new contact needs to be allowed to see current user's phone number. A corresponding rule to userPrivacySettingShowPhoneNumber will be added if needed. Use the field UserFullInfo.need_phone_number_privacy_exception to check whether the current user needs to be asked to share their phone number"
        }
      ],
      "definition": {
        "name": "addContact",
        "id": 1869640000,
        "params": [
          {
            "name": "contact",
            "type": {
              "name": "contact",
              "bare": true
            }
          },
          {
            "name": "share_phone_number",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds new contacts or edits existing contacts by their phone numbers; contacts' user identifiers are ignored"
        },
        {
          "name": "contacts",
          "value": "The list of contacts to import or edit; contacts' vCard are ignored and are not imported"
        }
      ],
      "definition": {
        "name": "importContacts",
        "id": 2008921880,
        "params": [
          {
            "name": "contacts",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "contact",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ImportedContacts"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all user contacts"
        }
      ],
      "definition": {
        "name": "getContacts",
        "id": 2877244528,
        "type": {
          "name": "Users"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for the specified query in the first names, last names and usernames of the known user contacts"
        },
        {
          "name": "query",
          "value": "Query to search for; may be empty to return all contacts"
        },
        {
          "name": "limit",
          "value": "The maximum number of users to be returned"
        }
      ],
      "definition": {
        "name": "searchContacts",
        "id": 2500276581,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Users"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes users from the contact list"
        },
        {
          "name": "user_ids",
          "value": "Identifiers of users to be deleted"
        }
      ],
      "definition": {
        "name": "removeContacts",
        "id": 3564953036,
        "params": [
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the total number of imported contacts"
        }
      ],
      "definition": {
        "name": "getImportedContactCount",
        "id": 3638630950,
        "type": {
          "name": "Count"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes imported contacts using the list of current user contacts saved on the device. Imports newly added contacts and, if at least the file database is enabled, deletes recently deleted contacts."
        }
      ],
      "definition": {
        "name": "changeImportedContacts",
        "id": 612915461,
        "params": [
          {
            "name": "contacts",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "contact",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ImportedContacts"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Clears all imported contacts, contact list remains unchanged"
        }
      ],
      "definition": {
        "name": "clearImportedContacts",
        "id": 869503298,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Shares the phone number of the current user with a mutual contact. Supposed to be called when the user clicks on chatActionBarSharePhoneNumber"
        },
        {
          "name": "user_id",
          "value": "Identifier of the user with whom to share the phone number. The user must be a mutual contact"
        }
      ],
      "definition": {
        "name": "sharePhoneNumber",
        "id": 3924297418,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the profile photos of a user. The result of this query may be outdated: some photos might have been deleted already"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "offset",
          "value": "The number of photos to skip; must be non-negative"
        },
        {
          "name": "limit",
          "value": "The maximum number of photos to be returned; up to 100"
        }
      ],
      "definition": {
        "name": "getUserProfilePhotos",
        "id": 3526268155,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatPhotos"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns stickers from the installed sticker sets that correspond to a given emoji. If the emoji is not empty, favorite and recently used stickers may also be returned"
        },
        {
          "name": "emoji",
          "value": "String representation of emoji. If empty, returns all known installed stickers"
        },
        {
          "name": "limit",
          "value": "The maximum number of stickers to be returned"
        }
      ],
      "definition": {
        "name": "getStickers",
        "id": 2700047740,
        "params": [
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Stickers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for stickers from public sticker sets that correspond to a given emoji"
        },
        {
          "name": "emoji",
          "value": "String representation of emoji; must be non-empty"
        },
        {
          "name": "limit",
          "value": "The maximum number of stickers to be returned"
        }
      ],
      "definition": {
        "name": "searchStickers",
        "id": 1555771203,
        "params": [
          {
            "name": "emoji",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Stickers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of installed sticker sets"
        },
        {
          "name": "is_masks",
          "value": "Pass true to return mask sticker sets; pass false to return ordinary sticker sets"
        }
      ],
      "definition": {
        "name": "getInstalledStickerSets",
        "id": 1214523749,
        "params": [
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of archived sticker sets"
        },
        {
          "name": "is_masks",
          "value": "Pass true to return mask stickers sets; pass false to return ordinary sticker sets"
        },
        {
          "name": "offset_sticker_set_id",
          "value": "Identifier of the sticker set from which to return the result"
        },
        {
          "name": "limit",
          "value": "The maximum number of sticker sets to return"
        }
      ],
      "definition": {
        "name": "getArchivedStickerSets",
        "id": 1996943238,
        "params": [
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "offset_sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of trending sticker sets. For the optimal performance the number of returned sticker sets is chosen by the library"
        },
        {
          "name": "offset",
          "value": "The offset from which to return the sticker sets; must be non-negative"
        },
        {
          "name": "limit",
          "value": "The maximum number of sticker sets to be returned; must be non-negative. Fewer sticker sets may be returned than specified by the limit, even if the end of the list has not been reached"
        }
      ],
      "definition": {
        "name": "getTrendingStickerSets",
        "id": 2800385348,
        "params": [
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of sticker sets attached to a file. Currently only photos and videos can have attached sticker sets"
        },
        {
          "name": "file_id",
          "value": "File identifier"
        }
      ],
      "definition": {
        "name": "getAttachedStickerSets",
        "id": 1302172429,
        "params": [
          {
            "name": "file_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a sticker set by its identifier"
        },
        {
          "name": "set_id",
          "value": "Identifier of the sticker set"
        }
      ],
      "definition": {
        "name": "getStickerSet",
        "id": 1052318659,
        "params": [
          {
            "name": "set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for a sticker set by its name"
        },
        {
          "name": "name",
          "value": "Name of the sticker set"
        }
      ],
      "definition": {
        "name": "searchStickerSet",
        "id": 1157930222,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for installed sticker sets by looking for specified query in their title and name"
        },
        {
          "name": "is_masks",
          "value": "Pass true to return mask sticker sets; pass false to return ordinary sticker sets"
        },
        {
          "name": "query",
          "value": "Query to search for"
        },
        {
          "name": "limit",
          "value": "The maximum number of sticker sets to return"
        }
      ],
      "definition": {
        "name": "searchInstalledStickerSets",
        "id": 681171344,
        "params": [
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for ordinary sticker sets by looking for specified query in their title and name. Excludes installed sticker sets from the results"
        },
        {
          "name": "query",
          "value": "Query to search for"
        }
      ],
      "definition": {
        "name": "searchStickerSets",
        "id": 3212652667,
        "params": [
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StickerSets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Installs/uninstalls or activates/archives a sticker set"
        },
        {
          "name": "set_id",
          "value": "Identifier of the sticker set"
        },
        {
          "name": "is_installed",
          "value": "The new value of is_installed"
        },
        {
          "name": "is_archived",
          "value": "The new value of is_archived. A sticker set can't be installed and archived simultaneously"
        }
      ],
      "definition": {
        "name": "changeStickerSet",
        "id": 449357293,
        "params": [
          {
            "name": "set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "is_installed",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "is_archived",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs the server that some trending sticker sets have been viewed by the user"
        },
        {
          "name": "sticker_set_ids",
          "value": "Identifiers of viewed trending sticker sets"
        }
      ],
      "definition": {
        "name": "viewTrendingStickerSets",
        "id": 57500777,
        "params": [
          {
            "name": "sticker_set_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int64",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the order of installed sticker sets"
        },
        {
          "name": "is_masks",
          "value": "Pass true to change the order of mask sticker sets; pass false to change the order of ordinary sticker sets"
        },
        {
          "name": "sticker_set_ids",
          "value": "Identifiers of installed sticker sets in the new correct order"
        }
      ],
      "definition": {
        "name": "reorderInstalledStickerSets",
        "id": 1278722819,
        "params": [
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker_set_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int64",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of recently used stickers"
        },
        {
          "name": "is_attached",
          "value": "Pass true to return stickers and masks that were recently attached to photos or video files; pass false to return recently sent stickers"
        }
      ],
      "definition": {
        "name": "getRecentStickers",
        "id": 3715345055,
        "params": [
          {
            "name": "is_attached",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Stickers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Manually adds a new sticker to the list of recently used stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first. Only stickers belonging to a sticker set can be added to this list"
        },
        {
          "name": "is_attached",
          "value": "Pass true to add the sticker to the list of stickers recently attached to photo or video files; pass false to add the sticker to the list of recently sent stickers"
        },
        {
          "name": "sticker",
          "value": "Sticker file to add"
        }
      ],
      "definition": {
        "name": "addRecentSticker",
        "id": 2816858270,
        "params": [
          {
            "name": "is_attached",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Stickers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a sticker from the list of recently used stickers"
        },
        {
          "name": "is_attached",
          "value": "Pass true to remove the sticker from the list of stickers recently attached to photo or video files; pass false to remove the sticker from the list of recently sent stickers"
        },
        {
          "name": "sticker",
          "value": "Sticker file to delete"
        }
      ],
      "definition": {
        "name": "removeRecentSticker",
        "id": 1246577677,
        "params": [
          {
            "name": "is_attached",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Clears the list of recently used stickers"
        },
        {
          "name": "is_attached",
          "value": "Pass true to clear the list of stickers recently attached to photo or video files; pass false to clear the list of recently sent stickers"
        }
      ],
      "definition": {
        "name": "clearRecentStickers",
        "id": 3973724612,
        "params": [
          {
            "name": "is_attached",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns favorite stickers"
        }
      ],
      "definition": {
        "name": "getFavoriteStickers",
        "id": 3956002624,
        "type": {
          "name": "Stickers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a new sticker to the list of favorite stickers. The new sticker is added to the top of the list. If the sticker was already in the list, it is removed from the list first. Only stickers belonging to a sticker set can be added to this list"
        },
        {
          "name": "sticker",
          "value": "Sticker file to add"
        }
      ],
      "definition": {
        "name": "addFavoriteSticker",
        "id": 324504799,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a sticker from the list of favorite stickers"
        },
        {
          "name": "sticker",
          "value": "Sticker file to delete from the list"
        }
      ],
      "definition": {
        "name": "removeFavoriteSticker",
        "id": 1152945264,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns emoji corresponding to a sticker. The list is only for informational purposes, because a sticker is always sent with a fixed emoji from the corresponding Sticker object"
        },
        {
          "name": "sticker",
          "value": "Sticker file identifier"
        }
      ],
      "definition": {
        "name": "getStickerEmojis",
        "id": 2399458631,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Emojis"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for emojis by keywords. Supported only if the file database is enabled"
        },
        {
          "name": "text",
          "value": "Text to search for"
        },
        {
          "name": "exact_match",
          "value": "True, if only emojis, which exactly match text needs to be returned"
        },
        {
          "name": "input_language_codes",
          "value": "List of possible IETF language tags of the user's input language; may be empty if unknown"
        }
      ],
      "definition": {
        "name": "searchEmojis",
        "id": 2679176938,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "exact_match",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "input_language_codes",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Emojis"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTTP URL which can be used to automatically log in to the translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation"
        },
        {
          "name": "language_code",
          "value": "Language code for which the emoji replacements will be suggested"
        }
      ],
      "definition": {
        "name": "getEmojiSuggestionsUrl",
        "id": 2890865455,
        "params": [
          {
            "name": "language_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "HttpUrl"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns saved animations"
        }
      ],
      "definition": {
        "name": "getSavedAnimations",
        "id": 7051032,
        "type": {
          "name": "Animations"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Manually adds a new animation to the list of saved animations. The new animation is added to the beginning of the list. If the animation was already in the list, it is removed first. Only non-secret video animations with MIME type \"video/mp4\" can be added to the list"
        },
        {
          "name": "animation",
          "value": "The animation file to be added. Only animations known to the server (i.e. successfully sent via a message) can be added to the list"
        }
      ],
      "definition": {
        "name": "addSavedAnimation",
        "id": 2756442208,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes an animation from the list of saved animations"
        },
        {
          "name": "animation",
          "value": "Animation file to be removed"
        }
      ],
      "definition": {
        "name": "removeSavedAnimation",
        "id": 3799361817,
        "params": [
          {
            "name": "animation",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns up to 20 recently used inline bots in the order of their last usage"
        }
      ],
      "definition": {
        "name": "getRecentInlineBots",
        "id": 1437823548,
        "type": {
          "name": "Users"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for recently used hashtags by their prefix"
        },
        {
          "name": "prefix",
          "value": "Hashtag prefix to search for"
        },
        {
          "name": "limit",
          "value": "The maximum number of hashtags to be returned"
        }
      ],
      "definition": {
        "name": "searchHashtags",
        "id": 1043637617,
        "params": [
          {
            "name": "prefix",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Hashtags"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a hashtag from the list of recently used hashtags"
        },
        {
          "name": "hashtag",
          "value": "Hashtag to delete"
        }
      ],
      "definition": {
        "name": "removeRecentHashtag",
        "id": 3281232036,
        "params": [
          {
            "name": "hashtag",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a web page preview by the text of the message. Do not call this function too often. Returns a 404 error if the web page has no preview"
        },
        {
          "name": "text",
          "value": "Message text with formatting"
        }
      ],
      "definition": {
        "name": "getWebPagePreview",
        "id": 573441580,
        "params": [
          {
            "name": "text",
            "type": {
              "name": "formattedText",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "WebPage"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an instant view version of a web page if available. Returns a 404 error if the web page has no instant view page"
        },
        {
          "name": "url",
          "value": "The web page URL"
        },
        {
          "name": "force_full",
          "value": "If true, the full instant view for the web page will be returned"
        }
      ],
      "definition": {
        "name": "getWebPageInstantView",
        "id": 2332317321,
        "params": [
          {
            "name": "url",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "force_full",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "WebPageInstantView"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes a profile photo for the current user"
        },
        {
          "name": "photo",
          "value": "Profile photo to set"
        }
      ],
      "definition": {
        "name": "setProfilePhoto",
        "id": 2225288414,
        "params": [
          {
            "name": "photo",
            "type": {
              "name": "InputChatPhoto"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes a profile photo"
        },
        {
          "name": "profile_photo_id",
          "value": "Identifier of the profile photo to delete"
        }
      ],
      "definition": {
        "name": "deleteProfilePhoto",
        "id": 1319794625,
        "params": [
          {
            "name": "profile_photo_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the first and last name of the current user"
        },
        {
          "name": "first_name",
          "value": "The new value of the first name for the user; 1-64 characters"
        },
        {
          "name": "last_name",
          "value": "The new value of the optional last name for the user; 0-64 characters"
        }
      ],
      "definition": {
        "name": "setName",
        "id": 1711693584,
        "params": [
          {
            "name": "first_name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "last_name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the bio of the current user"
        },
        {
          "name": "bio",
          "value": "The new value of the user bio; 0-70 characters without line feeds"
        }
      ],
      "definition": {
        "name": "setBio",
        "id": 2675385172,
        "params": [
          {
            "name": "bio",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the username of the current user"
        },
        {
          "name": "username",
          "value": "The new value of the username. Use an empty string to remove the username"
        }
      ],
      "definition": {
        "name": "setUsername",
        "id": 439901214,
        "params": [
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the location of the current user. Needs to be called if GetOption(\"is_location_visible\") is true and location changes for more than 1 kilometer"
        },
        {
          "name": "location",
          "value": "The new location of the user"
        }
      ],
      "definition": {
        "name": "setLocation",
        "id": 93926257,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the phone number of the user and sends an authentication code to the user's new phone number. On success, returns information about the sent code"
        },
        {
          "name": "phone_number",
          "value": "The new phone number of the user in international format"
        },
        {
          "name": "settings",
          "value": "Settings for the authentication of the user's phone number"
        }
      ],
      "definition": {
        "name": "changePhoneNumber",
        "id": 4170300323,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "settings",
            "type": {
              "name": "phoneNumberAuthenticationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Re-sends the authentication code sent to confirm a new phone number for the user. Works only if the previously received authenticationCodeInfo next_code_type was not null"
        }
      ],
      "definition": {
        "name": "resendChangePhoneNumberCode",
        "id": 3508195236,
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the authentication code sent to confirm a new phone number of the user"
        },
        {
          "name": "code",
          "value": "Verification code received by SMS, phone call or flash call"
        }
      ],
      "definition": {
        "name": "checkChangePhoneNumberCode",
        "id": 2574688867,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the list of commands supported by the bot; for bots only"
        },
        {
          "name": "commands",
          "value": "List of the bot's commands"
        }
      ],
      "definition": {
        "name": "setCommands",
        "id": 2554223906,
        "params": [
          {
            "name": "commands",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "botCommand",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all active sessions of the current user"
        }
      ],
      "definition": {
        "name": "getActiveSessions",
        "id": 1119710526,
        "type": {
          "name": "Sessions"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Terminates a session of the current user"
        },
        {
          "name": "session_id",
          "value": "Session identifier"
        }
      ],
      "definition": {
        "name": "terminateSession",
        "id": 3887581484,
        "params": [
          {
            "name": "session_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Terminates all other sessions of the current user"
        }
      ],
      "definition": {
        "name": "terminateAllOtherSessions",
        "id": 1874485523,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all website where the current user used Telegram to log in"
        }
      ],
      "definition": {
        "name": "getConnectedWebsites",
        "id": 4124431186,
        "type": {
          "name": "ConnectedWebsites"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Disconnects website from the current user's Telegram account"
        },
        {
          "name": "website_id",
          "value": "Website identifier"
        }
      ],
      "definition": {
        "name": "disconnectWebsite",
        "id": 3516199901,
        "params": [
          {
            "name": "website_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Disconnects all websites from the current user's Telegram account"
        }
      ],
      "definition": {
        "name": "disconnectAllWebsites",
        "id": 3211981315,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the username of a supergroup or channel, requires owner privileges in the supergroup or channel"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup or channel"
        },
        {
          "name": "username",
          "value": "New value of the username. Use an empty string to remove the username"
        }
      ],
      "definition": {
        "name": "setSupergroupUsername",
        "id": 2866634174,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "username",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the sticker set of a supergroup; requires can_change_info rights"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup"
        },
        {
          "name": "sticker_set_id",
          "value": "New value of the supergroup sticker set identifier. Use 0 to remove the supergroup sticker set"
        }
      ],
      "definition": {
        "name": "setSupergroupStickerSet",
        "id": 3999184998,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sticker_set_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Toggles sender signatures messages sent in a channel; requires can_change_info rights"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the channel"
        },
        {
          "name": "sign_messages",
          "value": "New value of sign_messages"
        }
      ],
      "definition": {
        "name": "toggleSupergroupSignMessages",
        "id": 3736770715,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "sign_messages",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Toggles whether the message history of a supergroup is available to new members; requires can_change_info rights"
        },
        {
          "name": "supergroup_id",
          "value": "The identifier of the supergroup"
        },
        {
          "name": "is_all_history_available",
          "value": "The new value of is_all_history_available"
        }
      ],
      "definition": {
        "name": "toggleSupergroupIsAllHistoryAvailable",
        "id": 1701526555,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "is_all_history_available",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Reports some messages from a user in a supergroup as spam; requires administrator rights in the supergroup"
        },
        {
          "name": "supergroup_id",
          "value": "Supergroup identifier"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of messages sent in the supergroup by the user. This list must be non-empty"
        }
      ],
      "definition": {
        "name": "reportSupergroupSpam",
        "id": 1150926975,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about members or banned users in a supergroup or channel. Can be used only if SupergroupFullInfo.can_get_members == true; additionally, administrator privileges may be required for some filters"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup or channel"
        },
        {
          "name": "filter",
          "value": "The type of users to return. By default, supergroupMembersRecent"
        },
        {
          "name": "offset",
          "value": "Number of users to skip"
        },
        {
          "name": "limit",
          "value": "The maximum number of users be returned; up to 200"
        }
      ],
      "definition": {
        "name": "getSupergroupMembers",
        "id": 1427643098,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filter",
            "type": {
              "name": "SupergroupMembersFilter"
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "ChatMembers"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes a supergroup or channel along with all messages in the corresponding chat. This will release the supergroup or channel username and remove all members; requires owner privileges in the supergroup or channel. Chats with more than 1000 members can't be deleted using this method"
        },
        {
          "name": "supergroup_id",
          "value": "Identifier of the supergroup or channel"
        }
      ],
      "definition": {
        "name": "deleteSupergroup",
        "id": 2295111331,
        "params": [
          {
            "name": "supergroup_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Closes a secret chat, effectively transferring its state to secretChatStateClosed"
        },
        {
          "name": "secret_chat_id",
          "value": "Secret chat identifier"
        }
      ],
      "definition": {
        "name": "closeSecretChat",
        "id": 3823961163,
        "params": [
          {
            "name": "secret_chat_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a list of service actions taken by chat members and administrators in the last 48 hours. Available only for supergroups and channels. Requires administrator rights. Returns results in reverse chronological order (i. e., in order of decreasing event_id)"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "query",
          "value": "Search query by which to filter events"
        },
        {
          "name": "from_event_id",
          "value": "Identifier of an event from which to return results. Use 0 to get results from the latest events"
        },
        {
          "name": "limit",
          "value": "The maximum number of events to return; up to 100"
        },
        {
          "name": "filters",
          "value": "The types of events to return. By default, all types will be returned"
        },
        {
          "name": "user_ids",
          "value": "User identifiers by which to filter events. By default, events relating to all users will be returned"
        }
      ],
      "definition": {
        "name": "getChatEventLog",
        "id": 504477847,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "query",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "from_event_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "filters",
            "type": {
              "name": "chatEventLogFilters",
              "bare": true
            }
          },
          {
            "name": "user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "ChatEvents"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an invoice payment form. This method should be called when the user presses inlineKeyboardButtonBuy"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the Invoice message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        }
      ],
      "definition": {
        "name": "getPaymentForm",
        "id": 2148016414,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PaymentForm"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Validates the order information provided by a user and returns the available shipping options for a flexible invoice"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the Invoice message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "order_info",
          "value": "The order information, provided by the user"
        },
        {
          "name": "allow_save",
          "value": "True, if the order information can be saved"
        }
      ],
      "definition": {
        "name": "validateOrderInfo",
        "id": 9480644,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "order_info",
            "type": {
              "name": "orderInfo",
              "bare": true
            }
          },
          {
            "name": "allow_save",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ValidatedOrderInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a filled-out payment form to the bot for final verification"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the Invoice message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "order_info_id",
          "value": "Identifier returned by ValidateOrderInfo, or an empty string"
        },
        {
          "name": "shipping_option_id",
          "value": "Identifier of a chosen shipping option, if applicable"
        },
        {
          "name": "credentials",
          "value": "The credentials chosen by user for payment"
        }
      ],
      "definition": {
        "name": "sendPaymentForm",
        "id": 591581572,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "order_info_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "shipping_option_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "credentials",
            "type": {
              "name": "InputCredentials"
            }
          }
        ],
        "type": {
          "name": "PaymentResult"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a successful payment"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier of the PaymentSuccessful message"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        }
      ],
      "definition": {
        "name": "getPaymentReceipt",
        "id": 1013758294,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PaymentReceipt"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns saved order info, if any"
        }
      ],
      "definition": {
        "name": "getSavedOrderInfo",
        "id": 3142950621,
        "type": {
          "name": "OrderInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes saved order info"
        }
      ],
      "definition": {
        "name": "deleteSavedOrderInfo",
        "id": 1629058164,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes saved credentials for all payment provider bots"
        }
      ],
      "definition": {
        "name": "deleteSavedCredentials",
        "id": 826300114,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a user that can be contacted to get support"
        }
      ],
      "definition": {
        "name": "getSupportUser",
        "id": 2561469596,
        "type": {
          "name": "User"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns backgrounds installed by the user"
        },
        {
          "name": "for_dark_theme",
          "value": "True, if the backgrounds must be ordered for dark theme"
        }
      ],
      "definition": {
        "name": "getBackgrounds",
        "id": 249072633,
        "params": [
          {
            "name": "for_dark_theme",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Backgrounds"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Constructs a persistent HTTP URL for a background"
        },
        {
          "name": "name",
          "value": "Background name"
        },
        {
          "name": "type",
          "value": "Background type"
        }
      ],
      "definition": {
        "name": "getBackgroundUrl",
        "id": 733769682,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "BackgroundType"
            }
          }
        ],
        "type": {
          "name": "HttpUrl"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Searches for a background by its name"
        },
        {
          "name": "name",
          "value": "The name of the background"
        }
      ],
      "definition": {
        "name": "searchBackground",
        "id": 2163970337,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Background"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the background selected by the user; adds background to the list of installed backgrounds"
        },
        {
          "name": "background",
          "value": "The input background to use, null for filled backgrounds"
        },
        {
          "name": "type",
          "value": "Background type; null for default background. The method will return error 404 if type is null"
        },
        {
          "name": "for_dark_theme",
          "value": "True, if the background is chosen for dark theme"
        }
      ],
      "definition": {
        "name": "setBackground",
        "id": 3259528071,
        "params": [
          {
            "name": "background",
            "type": {
              "name": "InputBackground"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "BackgroundType"
            }
          },
          {
            "name": "for_dark_theme",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "Background"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes background from the list of installed backgrounds"
        },
        {
          "name": "background_id",
          "value": "The background identifier"
        }
      ],
      "definition": {
        "name": "removeBackground",
        "id": 2810421654,
        "params": [
          {
            "name": "background_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resets list of installed backgrounds to its default value"
        }
      ],
      "definition": {
        "name": "resetBackgrounds",
        "id": 204852088,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about the current localization target. This is an offline request if only_local is true. Can be called before authorization"
        },
        {
          "name": "only_local",
          "value": "If true, returns only locally available information without sending network requests"
        }
      ],
      "definition": {
        "name": "getLocalizationTargetInfo",
        "id": 1849499526,
        "params": [
          {
            "name": "only_local",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "LocalizationTargetInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a language pack. Returned language pack identifier may be different from a provided one. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Language pack identifier"
        }
      ],
      "definition": {
        "name": "getLanguagePackInfo",
        "id": 2077809320,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LanguagePackInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns strings from a language pack in the current localization target by their keys. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Language pack identifier of the strings to be returned"
        },
        {
          "name": "keys",
          "value": "Language pack keys of the strings to be returned; leave empty to request all available strings"
        }
      ],
      "definition": {
        "name": "getLanguagePackStrings",
        "id": 2964875195,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "keys",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "LanguagePackStrings"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Fetches the latest versions of all strings from a language pack in the current localization target from the server. This method shouldn't be called explicitly for the current used/base language packs. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Language pack identifier"
        }
      ],
      "definition": {
        "name": "synchronizeLanguagePack",
        "id": 2229659438,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a custom server language pack to the list of installed language packs in current localization target. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Identifier of a language pack to be added; may be different from a name that is used in an \"https://t.me/setlanguage/\" link"
        }
      ],
      "definition": {
        "name": "addCustomServerLanguagePack",
        "id": 4492771,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds or changes a custom local language pack to the current localization target"
        },
        {
          "name": "info",
          "value": "Information about the language pack. Language pack ID must start with 'X', consist only of English letters, digits and hyphens, and must not exceed 64 characters. Can be called before authorization"
        },
        {
          "name": "strings",
          "value": "Strings of the new language pack"
        }
      ],
      "definition": {
        "name": "setCustomLanguagePack",
        "id": 592119303,
        "params": [
          {
            "name": "info",
            "type": {
              "name": "languagePackInfo",
              "bare": true
            }
          },
          {
            "name": "strings",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "languagePackString",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits information about a custom local language pack in the current localization target. Can be called before authorization"
        },
        {
          "name": "info",
          "value": "New information about the custom local language pack"
        }
      ],
      "definition": {
        "name": "editCustomLanguagePackInfo",
        "id": 1320751257,
        "params": [
          {
            "name": "info",
            "type": {
              "name": "languagePackInfo",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds, edits or deletes a string in a custom local language pack. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Identifier of a previously added custom local language pack in the current localization target"
        },
        {
          "name": "new_string",
          "value": "New language pack string"
        }
      ],
      "definition": {
        "name": "setCustomLanguagePackString",
        "id": 1316365592,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_string",
            "type": {
              "name": "languagePackString",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes all information about a language pack in the current localization target. The language pack which is currently in use (including base language pack) or is being synchronized can't be deleted. Can be called before authorization"
        },
        {
          "name": "language_pack_id",
          "value": "Identifier of the language pack to delete"
        }
      ],
      "definition": {
        "name": "deleteLanguagePack",
        "id": 2186206270,
        "params": [
          {
            "name": "language_pack_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Registers the currently used device for receiving push notifications. Returns a globally unique identifier of the push notification subscription"
        },
        {
          "name": "device_token",
          "value": "Device token"
        },
        {
          "name": "other_user_ids",
          "value": "List of user identifiers of other users currently using the application"
        }
      ],
      "definition": {
        "name": "registerDevice",
        "id": 2899647515,
        "params": [
          {
            "name": "device_token",
            "type": {
              "name": "DeviceToken"
            }
          },
          {
            "name": "other_user_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "PushReceiverId"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Handles a push notification. Returns error with code 406 if the push notification is not supported and connection to the server is required to fetch new data. Can be called before authorization"
        },
        {
          "name": "payload",
          "value": "JSON-encoded push notification payload with all fields sent by the server, and \"google.sent_time\" and \"google.notification.sound\" fields added"
        }
      ],
      "definition": {
        "name": "processPushNotification",
        "id": 786679952,
        "params": [
          {
            "name": "payload",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a globally unique push notification subscription identifier for identification of an account, which has received a push notification. Can be called synchronously"
        },
        {
          "name": "payload",
          "value": "JSON-encoded push notification payload"
        }
      ],
      "definition": {
        "name": "getPushReceiverId",
        "id": 4008462002,
        "params": [
          {
            "name": "payload",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PushReceiverId"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns t.me URLs recently visited by a newly registered user"
        },
        {
          "name": "referrer",
          "value": "Google Play referrer to identify the user"
        }
      ],
      "definition": {
        "name": "getRecentlyVisitedTMeUrls",
        "id": 806754961,
        "params": [
          {
            "name": "referrer",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TMeUrls"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes user privacy settings"
        },
        {
          "name": "setting",
          "value": "The privacy setting"
        },
        {
          "name": "rules",
          "value": "The new privacy rules"
        }
      ],
      "definition": {
        "name": "setUserPrivacySettingRules",
        "id": 3821154555,
        "params": [
          {
            "name": "setting",
            "type": {
              "name": "UserPrivacySetting"
            }
          },
          {
            "name": "rules",
            "type": {
              "name": "userPrivacySettingRules",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the current privacy settings"
        },
        {
          "name": "setting",
          "value": "The privacy setting"
        }
      ],
      "definition": {
        "name": "getUserPrivacySettingRules",
        "id": 2217743985,
        "params": [
          {
            "name": "setting",
            "type": {
              "name": "UserPrivacySetting"
            }
          }
        ],
        "type": {
          "name": "UserPrivacySettingRules"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the value of an option by its name. (Check the list of available options on https://core.telegram.org/tdlib/options.) Can be called before authorization"
        },
        {
          "name": "name",
          "value": "The name of the option"
        }
      ],
      "definition": {
        "name": "getOption",
        "id": 2722471550,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "OptionValue"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the value of an option. (Check the list of available options on https://core.telegram.org/tdlib/options.) Only writable options can be set. Can be called before authorization"
        },
        {
          "name": "name",
          "value": "The name of the option"
        },
        {
          "name": "value",
          "value": "The new value of the option"
        }
      ],
      "definition": {
        "name": "setOption",
        "id": 2114670322,
        "params": [
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "value",
            "type": {
              "name": "OptionValue"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the period of inactivity after which the account of the current user will automatically be deleted"
        },
        {
          "name": "ttl",
          "value": "New account TTL"
        }
      ],
      "definition": {
        "name": "setAccountTtl",
        "id": 701389032,
        "params": [
          {
            "name": "ttl",
            "type": {
              "name": "accountTtl",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the period of inactivity after which the account of the current user will automatically be deleted"
        }
      ],
      "definition": {
        "name": "getAccountTtl",
        "id": 3851062135,
        "type": {
          "name": "AccountTtl"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes the account of the current user, deleting all information associated with the user from the server. The phone number of the account can be used to create a new account. Can be called before authorization when the current authorization state is authorizationStateWaitPassword"
        },
        {
          "name": "reason",
          "value": "The reason why the account was deleted; optional"
        }
      ],
      "definition": {
        "name": "deleteAccount",
        "id": 3091910788,
        "params": [
          {
            "name": "reason",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a chat action bar without any other action"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        }
      ],
      "definition": {
        "name": "removeChatActionBar",
        "id": 2643999226,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Reports a chat to the Telegram moderators. A chat can be reported only from the chat action bar, or if this is a private chats with a bot, a private chat with a user sharing their location, a supergroup, or a channel, since other chats can't be checked by moderators"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "reason",
          "value": "The reason for reporting the chat"
        },
        {
          "name": "message_ids",
          "value": "Identifiers of reported messages, if any"
        }
      ],
      "definition": {
        "name": "reportChat",
        "id": 3247505121,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "reason",
            "type": {
              "name": "ChatReportReason"
            }
          },
          {
            "name": "message_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTTP URL with the chat statistics. Currently this method of getting the statistics are disabled and can be deleted in the future"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "parameters",
          "value": "Parameters from \"tg://statsrefresh?params=******\" link"
        },
        {
          "name": "is_dark",
          "value": "Pass true if a URL with the dark theme must be returned"
        }
      ],
      "definition": {
        "name": "getChatStatisticsUrl",
        "id": 1114621183,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "parameters",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_dark",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "HttpUrl"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns detailed statistics about a chat. Currently this method can be used only for supergroups and channels. Can be used only if SupergroupFullInfo.can_get_statistics == true"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "is_dark",
          "value": "Pass true if a dark theme is used by the application"
        }
      ],
      "definition": {
        "name": "getChatStatistics",
        "id": 327057816,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_dark",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "ChatStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns detailed statistics about a message. Can be used only if Message.can_get_statistics == true"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "message_id",
          "value": "Message identifier"
        },
        {
          "name": "is_dark",
          "value": "Pass true if a dark theme is used by the application"
        }
      ],
      "definition": {
        "name": "getMessageStatistics",
        "id": 1270194648,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "message_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "is_dark",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "MessageStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Loads asynchronous or zoomed in chat or message statistics graph"
        },
        {
          "name": "chat_id",
          "value": "Chat identifier"
        },
        {
          "name": "token",
          "value": "The token for graph loading"
        },
        {
          "name": "x",
          "value": "X-value for zoomed in graph or 0 otherwise"
        }
      ],
      "definition": {
        "name": "getStatisticsGraph",
        "id": 687537922,
        "params": [
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "token",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "x",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StatisticsGraph"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns storage usage statistics. Can be called before authorization"
        },
        {
          "name": "chat_limit",
          "value": "The maximum number of chats with the largest storage usage for which separate statistics should be returned. All other chats will be grouped in entries with chat_id == 0. If the chat info database is not used, the chat_limit is ignored and is always set to 0"
        }
      ],
      "definition": {
        "name": "getStorageStatistics",
        "id": 3441773367,
        "params": [
          {
            "name": "chat_limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StorageStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Quickly returns approximate storage usage statistics. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "getStorageStatisticsFast",
        "id": 61368066,
        "type": {
          "name": "StorageStatisticsFast"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns database statistics"
        }
      ],
      "definition": {
        "name": "getDatabaseStatistics",
        "id": 2352207033,
        "type": {
          "name": "DatabaseStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Optimizes storage usage, i.e. deletes some files and returns new storage usage statistics. Secret thumbnails can't be deleted"
        },
        {
          "name": "size",
          "value": "Limit on the total size of files after deletion. Pass -1 to use the default limit"
        },
        {
          "name": "ttl",
          "value": "Limit on the time that has passed since the last time a file was accessed (or creation time for some filesystems). Pass -1 to use the default limit"
        },
        {
          "name": "count",
          "value": "Limit on the total count of files after deletion. Pass -1 to use the default limit"
        },
        {
          "name": "immunity_delay",
          "value": "The amount of time after the creation of a file during which it can't be deleted, in seconds. Pass -1 to use the default value"
        },
        {
          "name": "file_types",
          "value": "If not empty, only files with the given type(s) are considered. By default, all types except thumbnails, profile photos, stickers and wallpapers are deleted"
        },
        {
          "name": "chat_ids",
          "value": "If not empty, only files from the given chats are considered. Use 0 as chat identifier to delete files not belonging to any chat (e.g., profile photos)"
        },
        {
          "name": "exclude_chat_ids",
          "value": "If not empty, files from the given chats are excluded. Use 0 as chat identifier to exclude all files not belonging to any chat (e.g., profile photos)"
        },
        {
          "name": "return_deleted_file_statistics",
          "value": "Pass true if deleted file statistics must be returned instead of the whole storage usage statistics. Affects only returned statistics"
        },
        {
          "name": "chat_limit",
          "value": "Same as in getStorageStatistics. Affects only returned statistics"
        }
      ],
      "definition": {
        "name": "optimizeStorage",
        "id": 4017342661,
        "params": [
          {
            "name": "size",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "ttl",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "immunity_delay",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "file_types",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "FileType"
              }
            }
          },
          {
            "name": "chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "exclude_chat_ids",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int53",
                "bare": true
              }
            }
          },
          {
            "name": "return_deleted_file_statistics",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "chat_limit",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "StorageStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the current network type. Can be called before authorization. Calling this method forces all network connections to reopen, mitigating the delay in switching between different networks, so it should be called whenever the network is changed, even if the network type remains the same."
        }
      ],
      "definition": {
        "name": "setNetworkType",
        "id": 3593332062,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "NetworkType"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns network data usage statistics. Can be called before authorization"
        },
        {
          "name": "only_current",
          "value": "If true, returns only data for the current library launch"
        }
      ],
      "definition": {
        "name": "getNetworkStatistics",
        "id": 3308738590,
        "params": [
          {
            "name": "only_current",
            "type": {
              "name": "Bool"
            }
          }
        ],
        "type": {
          "name": "NetworkStatistics"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds the specified data to data usage statistics. Can be called before authorization"
        },
        {
          "name": "entry",
          "value": "The network statistics entry with the data to be added to statistics"
        }
      ],
      "definition": {
        "name": "addNetworkStatistics",
        "id": 1264825305,
        "params": [
          {
            "name": "entry",
            "type": {
              "name": "NetworkStatisticsEntry"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resets all network data usage statistics to zero. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "resetNetworkStatistics",
        "id": 1646452102,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns auto-download settings presets for the current user"
        }
      ],
      "definition": {
        "name": "getAutoDownloadSettingsPresets",
        "id": 2573879095,
        "type": {
          "name": "AutoDownloadSettingsPresets"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets auto-download settings"
        },
        {
          "name": "settings",
          "value": "New user auto-download settings"
        },
        {
          "name": "type",
          "value": "Type of the network for which the new settings are applied"
        }
      ],
      "definition": {
        "name": "setAutoDownloadSettings",
        "id": 3941295348,
        "params": [
          {
            "name": "settings",
            "type": {
              "name": "autoDownloadSettings",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "NetworkType"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a bank card"
        },
        {
          "name": "bank_card_number",
          "value": "The bank card number"
        }
      ],
      "definition": {
        "name": "getBankCardInfo",
        "id": 2984451504,
        "params": [
          {
            "name": "bank_card_number",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "BankCardInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns one of the available Telegram Passport elements"
        },
        {
          "name": "type",
          "value": "Telegram Passport element type"
        },
        {
          "name": "password",
          "value": "Password of the current user"
        }
      ],
      "definition": {
        "name": "getPassportElement",
        "id": 2412568954,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns all available Telegram Passport elements"
        },
        {
          "name": "password",
          "value": "Password of the current user"
        }
      ],
      "definition": {
        "name": "getAllPassportElements",
        "id": 2256022251,
        "params": [
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElements"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds an element to the user's Telegram Passport. May return an error with a message \"PHONE_VERIFICATION_NEEDED\" or \"EMAIL_VERIFICATION_NEEDED\" if the chosen phone number or the chosen email address must be verified first"
        },
        {
          "name": "element",
          "value": "Input Telegram Passport element"
        },
        {
          "name": "password",
          "value": "Password of the current user"
        }
      ],
      "definition": {
        "name": "setPassportElement",
        "id": 2068173212,
        "params": [
          {
            "name": "element",
            "type": {
              "name": "InputPassportElement"
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElement"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Deletes a Telegram Passport element"
        },
        {
          "name": "type",
          "value": "Element type"
        }
      ],
      "definition": {
        "name": "deletePassportElement",
        "id": 2575411828,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "PassportElementType"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs the user that some of the elements in their Telegram Passport contain errors; for bots only. The user will not be able to resend the elements, until the errors are fixed"
        },
        {
          "name": "user_id",
          "value": "User identifier"
        },
        {
          "name": "errors",
          "value": "The errors"
        }
      ],
      "definition": {
        "name": "setPassportElementErrors",
        "id": 1680335122,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "errors",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "inputPassportElementError",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an IETF language tag of the language preferred in the country, which should be used to fill native fields in Telegram Passport personal details. Returns a 404 error if unknown"
        },
        {
          "name": "country_code",
          "value": "A two-letter ISO 3166-1 alpha-2 country code"
        }
      ],
      "definition": {
        "name": "getPreferredCountryLanguage",
        "id": 3361917910,
        "params": [
          {
            "name": "country_code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a code to verify a phone number to be added to a user's Telegram Passport"
        },
        {
          "name": "phone_number",
          "value": "The phone number of the user, in international format"
        },
        {
          "name": "settings",
          "value": "Settings for the authentication of the user's phone number"
        }
      ],
      "definition": {
        "name": "sendPhoneNumberVerificationCode",
        "id": 2081689035,
        "params": [
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "settings",
            "type": {
              "name": "phoneNumberAuthenticationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Re-sends the code to verify a phone number to be added to a user's Telegram Passport"
        }
      ],
      "definition": {
        "name": "resendPhoneNumberVerificationCode",
        "id": 1367629820,
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the phone number verification code for Telegram Passport"
        },
        {
          "name": "code",
          "value": "Verification code"
        }
      ],
      "definition": {
        "name": "checkPhoneNumberVerificationCode",
        "id": 1497462718,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a code to verify an email address to be added to a user's Telegram Passport"
        },
        {
          "name": "email_address",
          "value": "Email address"
        }
      ],
      "definition": {
        "name": "sendEmailAddressVerificationCode",
        "id": 4073345917,
        "params": [
          {
            "name": "email_address",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "EmailAddressAuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Re-sends the code to verify an email address to be added to a user's Telegram Passport"
        }
      ],
      "definition": {
        "name": "resendEmailAddressVerificationCode",
        "id": 2422550564,
        "type": {
          "name": "EmailAddressAuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks the email address verification code for Telegram Passport"
        },
        {
          "name": "code",
          "value": "Verification code"
        }
      ],
      "definition": {
        "name": "checkEmailAddressVerificationCode",
        "id": 3868580611,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns a Telegram Passport authorization form for sharing data with a service"
        },
        {
          "name": "bot_user_id",
          "value": "User identifier of the service's bot"
        },
        {
          "name": "scope",
          "value": "Telegram Passport element types requested by the service"
        },
        {
          "name": "public_key",
          "value": "Service's public_key"
        },
        {
          "name": "nonce",
          "value": "Authorization form nonce provided by the service"
        }
      ],
      "definition": {
        "name": "getPassportAuthorizationForm",
        "id": 2826573201,
        "params": [
          {
            "name": "bot_user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "scope",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "public_key",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "nonce",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportAuthorizationForm"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns already available Telegram Passport elements suitable for completing a Telegram Passport authorization form. Result can be received only once for each authorization form"
        },
        {
          "name": "autorization_form_id",
          "value": "Authorization form identifier"
        },
        {
          "name": "password",
          "value": "Password of the current user"
        }
      ],
      "definition": {
        "name": "getPassportAuthorizationFormAvailableElements",
        "id": 1738134754,
        "params": [
          {
            "name": "autorization_form_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "password",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PassportElementsWithErrors"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a Telegram Passport authorization form, effectively sharing data with the service. This method must be called after getPassportAuthorizationFormAvailableElements if some previously available elements are going to be reused"
        },
        {
          "name": "autorization_form_id",
          "value": "Authorization form identifier"
        },
        {
          "name": "types",
          "value": "Types of Telegram Passport elements chosen by user to complete the authorization form"
        }
      ],
      "definition": {
        "name": "sendPassportAuthorizationForm",
        "id": 4008020405,
        "params": [
          {
            "name": "autorization_form_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "types",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "PassportElementType"
              }
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends phone number confirmation code. Should be called when user presses \"https://t.me/confirmphone?phone=*******\u0026hash=**********\" or \"tg://confirmphone?phone=*******\u0026hash=**********\" link"
        },
        {
          "name": "hash",
          "value": "Value of the \"hash\" parameter from the link"
        },
        {
          "name": "phone_number",
          "value": "Value of the \"phone\" parameter from the link"
        },
        {
          "name": "settings",
          "value": "Settings for the authentication of the user's phone number"
        }
      ],
      "definition": {
        "name": "sendPhoneNumberConfirmationCode",
        "id": 2393795801,
        "params": [
          {
            "name": "hash",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "phone_number",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "settings",
            "type": {
              "name": "phoneNumberAuthenticationSettings",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Resends phone number confirmation code"
        }
      ],
      "definition": {
        "name": "resendPhoneNumberConfirmationCode",
        "id": 2069068522,
        "type": {
          "name": "AuthenticationCodeInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Checks phone number confirmation code"
        },
        {
          "name": "code",
          "value": "The phone number confirmation code"
        }
      ],
      "definition": {
        "name": "checkPhoneNumberConfirmationCode",
        "id": 2946906330,
        "params": [
          {
            "name": "code",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only"
        },
        {
          "name": "pending_update_count",
          "value": "The number of pending updates"
        },
        {
          "name": "error_message",
          "value": "The last error message"
        }
      ],
      "definition": {
        "name": "setBotUpdatesStatus",
        "id": 3140041105,
        "params": [
          {
            "name": "pending_update_count",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "error_message",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Uploads a PNG image with a sticker; for bots only; returns the uploaded file"
        },
        {
          "name": "user_id",
          "value": "Sticker file owner"
        },
        {
          "name": "png_sticker",
          "value": "PNG image with the sticker; must be up to 512 KB in size and fit in 512x512 square"
        }
      ],
      "definition": {
        "name": "uploadStickerFile",
        "id": 1134087551,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "png_sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Creates a new sticker set; for bots only. Returns the newly created sticker set"
        },
        {
          "name": "user_id",
          "value": "Sticker set owner"
        },
        {
          "name": "title",
          "value": "Sticker set title; 1-64 characters"
        },
        {
          "name": "name",
          "value": "Sticker set name. Can contain only English letters, digits and underscores. Must end with *\"_by_\u003cbot username\u003e\"* (*\u003cbot_username\u003e* is case insensitive); 1-64 characters"
        },
        {
          "name": "is_masks",
          "value": "True, if stickers are masks. Animated stickers can't be masks"
        },
        {
          "name": "stickers",
          "value": "List of stickers to be added to the set; must be non-empty. All stickers must be of the same type"
        }
      ],
      "definition": {
        "name": "createNewStickerSet",
        "id": 4165052004,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "title",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "is_masks",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "stickers",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "InputSticker"
              }
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a new sticker to a set; for bots only. Returns the sticker set"
        },
        {
          "name": "user_id",
          "value": "Sticker set owner"
        },
        {
          "name": "name",
          "value": "Sticker set name"
        },
        {
          "name": "sticker",
          "value": "Sticker to add to the set"
        }
      ],
      "definition": {
        "name": "addStickerToSet",
        "id": 3840305708,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "sticker",
            "type": {
              "name": "InputSticker"
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets a sticker set thumbnail; for bots only. Returns the sticker set"
        },
        {
          "name": "user_id",
          "value": "Sticker set owner"
        },
        {
          "name": "name",
          "value": "Sticker set name"
        },
        {
          "name": "thumbnail",
          "value": "Thumbnail to set in PNG or TGS format. Animated thumbnail must be set for animated sticker sets and only for them. Pass a zero InputFileId to delete the thumbnail"
        }
      ],
      "definition": {
        "name": "setStickerSetThumbnail",
        "id": 2600229892,
        "params": [
          {
            "name": "user_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "name",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "thumbnail",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "StickerSet"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Changes the position of a sticker in the set to which it belongs; for bots only. The sticker set must have been created by the bot"
        },
        {
          "name": "sticker",
          "value": "Sticker"
        },
        {
          "name": "position",
          "value": "New position of the sticker in the set, zero-based"
        }
      ],
      "definition": {
        "name": "setStickerPositionInSet",
        "id": 2075281185,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          },
          {
            "name": "position",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a sticker from the set to which it belongs; for bots only. The sticker set must have been created by the bot"
        },
        {
          "name": "sticker",
          "value": "Sticker"
        }
      ],
      "definition": {
        "name": "removeStickerFromSet",
        "id": 1642196644,
        "params": [
          {
            "name": "sticker",
            "type": {
              "name": "InputFile"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a file with a map thumbnail in PNG format. Only map thumbnail files with size less than 1MB can be downloaded"
        },
        {
          "name": "location",
          "value": "Location of the map center"
        },
        {
          "name": "zoom",
          "value": "Map zoom level; 13-20"
        },
        {
          "name": "width",
          "value": "Map width in pixels before applying scale; 16-1024"
        },
        {
          "name": "height",
          "value": "Map height in pixels before applying scale; 16-1024"
        },
        {
          "name": "scale",
          "value": "Map scale; 1-3"
        },
        {
          "name": "chat_id",
          "value": "Identifier of a chat, in which the thumbnail will be shown. Use 0 if unknown"
        }
      ],
      "definition": {
        "name": "getMapThumbnailFile",
        "id": 4142307226,
        "params": [
          {
            "name": "location",
            "type": {
              "name": "location",
              "bare": true
            }
          },
          {
            "name": "zoom",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "width",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "height",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "scale",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "File"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Accepts Telegram terms of services"
        },
        {
          "name": "terms_of_service_id",
          "value": "Terms of service identifier"
        }
      ],
      "definition": {
        "name": "acceptTermsOfService",
        "id": 2130576356,
        "params": [
          {
            "name": "terms_of_service_id",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a custom request; for bots only"
        },
        {
          "name": "method",
          "value": "The method name"
        },
        {
          "name": "parameters",
          "value": "JSON-serialized method parameters"
        }
      ],
      "definition": {
        "name": "sendCustomRequest",
        "id": 285045153,
        "params": [
          {
            "name": "method",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "parameters",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "CustomRequestResult"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Answers a custom query; for bots only"
        },
        {
          "name": "custom_query_id",
          "value": "Identifier of a custom query"
        },
        {
          "name": "data",
          "value": "JSON-serialized answer to the query"
        }
      ],
      "definition": {
        "name": "answerCustomQuery",
        "id": 3001363775,
        "params": [
          {
            "name": "custom_query_id",
            "type": {
              "name": "int64",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Succeeds after a specified amount of time has passed. Can be called before initialization"
        },
        {
          "name": "seconds",
          "value": "Number of seconds before the function returns"
        }
      ],
      "definition": {
        "name": "setAlarm",
        "id": 3421470229,
        "params": [
          {
            "name": "seconds",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about existing countries. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "getCountries",
        "id": 4243065246,
        "type": {
          "name": "Countries"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Uses current user IP address to find their country. Returns two-letter ISO 3166-1 alpha-2 country code. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "getCountryCode",
        "id": 1540593906,
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a phone number by its prefix. Can be called before authorization"
        },
        {
          "name": "phone_number_prefix",
          "value": "The phone number prefix"
        }
      ],
      "definition": {
        "name": "getPhoneNumberInfo",
        "id": 2686622713,
        "params": [
          {
            "name": "phone_number_prefix",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "PhoneNumberInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the default text for invitation messages to be used as a placeholder when the current user invites friends to Telegram"
        }
      ],
      "definition": {
        "name": "getInviteText",
        "id": 794573512,
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about a tg:// deep link. Use \"tg://need_update_for_some_feature\" or \"tg:some_unsupported_feature\" for testing. Returns a 404 error for unknown links. Can be called before authorization"
        },
        {
          "name": "link",
          "value": "The link"
        }
      ],
      "definition": {
        "name": "getDeepLinkInfo",
        "id": 680673150,
        "params": [
          {
            "name": "link",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "DeepLinkInfo"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns application config, provided by the server. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "getApplicationConfig",
        "id": 2471822978,
        "type": {
          "name": "JsonValue"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Saves application log event on the server. Can be called before authorization"
        },
        {
          "name": "type",
          "value": "Event type"
        },
        {
          "name": "chat_id",
          "value": "Optional chat identifier, associated with the event"
        },
        {
          "name": "data",
          "value": "The log event data"
        }
      ],
      "definition": {
        "name": "saveApplicationLogEvent",
        "id": 3483812366,
        "params": [
          {
            "name": "type",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "chat_id",
            "type": {
              "name": "int53",
              "bare": true
            }
          },
          {
            "name": "data",
            "type": {
              "name": "JsonValue"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a proxy server for network requests. Can be called before authorization"
        },
        {
          "name": "server",
          "value": "Proxy server IP address"
        },
        {
          "name": "port",
          "value": "Proxy server port"
        },
        {
          "name": "enable",
          "value": "True, if the proxy should be enabled"
        },
        {
          "name": "type",
          "value": "Proxy type"
        }
      ],
      "definition": {
        "name": "addProxy",
        "id": 331529432,
        "params": [
          {
            "name": "server",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "port",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "enable",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ProxyType"
            }
          }
        ],
        "type": {
          "name": "Proxy"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Edits an existing proxy server for network requests. Can be called before authorization"
        },
        {
          "name": "proxy_id",
          "value": "Proxy identifier"
        },
        {
          "name": "server",
          "value": "Proxy server IP address"
        },
        {
          "name": "port",
          "value": "Proxy server port"
        },
        {
          "name": "enable",
          "value": "True, if the proxy should be enabled"
        },
        {
          "name": "type",
          "value": "Proxy type"
        }
      ],
      "definition": {
        "name": "editProxy",
        "id": 2689083475,
        "params": [
          {
            "name": "proxy_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "server",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "port",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "enable",
            "type": {
              "name": "Bool"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ProxyType"
            }
          }
        ],
        "type": {
          "name": "Proxy"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Enables a proxy. Only one proxy can be enabled at a time. Can be called before authorization"
        },
        {
          "name": "proxy_id",
          "value": "Proxy identifier"
        }
      ],
      "definition": {
        "name": "enableProxy",
        "id": 1494450838,
        "params": [
          {
            "name": "proxy_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Disables the currently enabled proxy. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "disableProxy",
        "id": 2194872194,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Removes a proxy server. Can be called before authorization"
        },
        {
          "name": "proxy_id",
          "value": "Proxy identifier"
        }
      ],
      "definition": {
        "name": "removeProxy",
        "id": 1369219847,
        "params": [
          {
            "name": "proxy_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns list of proxies that are currently set up. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "getProxies",
        "id": 4199940915,
        "type": {
          "name": "Proxies"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns an HTTPS link, which can be used to add a proxy. Available only for SOCKS5 and MTProto proxies. Can be called before authorization"
        },
        {
          "name": "proxy_id",
          "value": "Proxy identifier"
        }
      ],
      "definition": {
        "name": "getProxyLink",
        "id": 3009369632,
        "params": [
          {
            "name": "proxy_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Text"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Computes time needed to receive a response from a Telegram server through a proxy. Can be called before authorization"
        },
        {
          "name": "proxy_id",
          "value": "Proxy identifier. Use 0 to ping a Telegram server without a proxy"
        }
      ],
      "definition": {
        "name": "pingProxy",
        "id": 3315286193,
        "params": [
          {
            "name": "proxy_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Seconds"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets new log stream for internal logging of TDLib. Can be called synchronously"
        },
        {
          "name": "log_stream",
          "value": "New log stream"
        }
      ],
      "definition": {
        "name": "setLogStream",
        "id": 2930767761,
        "params": [
          {
            "name": "log_stream",
            "type": {
              "name": "LogStream"
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns information about currently used log stream for internal logging of TDLib. Can be called synchronously"
        }
      ],
      "definition": {
        "name": "getLogStream",
        "id": 1167608667,
        "type": {
          "name": "LogStream"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the verbosity level of the internal logging of TDLib. Can be called synchronously"
        },
        {
          "name": "new_verbosity_level",
          "value": "New value of the verbosity level for logging. Value 0 corresponds to fatal errors, value 1 corresponds to errors, value 2 corresponds to warnings and debug warnings, value 3 corresponds to informational, value 4 corresponds to debug, value 5 corresponds to verbose debug, value greater than 5 and up to 1023 can be used to enable even more logging"
        }
      ],
      "definition": {
        "name": "setLogVerbosityLevel",
        "id": 3991537618,
        "params": [
          {
            "name": "new_verbosity_level",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns current verbosity level of the internal logging of TDLib. Can be called synchronously"
        }
      ],
      "definition": {
        "name": "getLogVerbosityLevel",
        "id": 594057956,
        "type": {
          "name": "LogVerbosityLevel"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns list of available TDLib internal log tags, for example, [\"actor\", \"binlog\", \"connections\", \"notifications\", \"proxy\"]. Can be called synchronously"
        }
      ],
      "definition": {
        "name": "getLogTags",
        "id": 4040518106,
        "type": {
          "name": "LogTags"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sets the verbosity level for a specified TDLib internal log tag. Can be called synchronously"
        },
        {
          "name": "tag",
          "value": "Logging tag to change verbosity level"
        },
        {
          "name": "new_verbosity_level",
          "value": "New verbosity level; 1-1024"
        }
      ],
      "definition": {
        "name": "setLogTagVerbosityLevel",
        "id": 2199377558,
        "params": [
          {
            "name": "tag",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "new_verbosity_level",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns current verbosity level for a specified TDLib internal log tag. Can be called synchronously"
        },
        {
          "name": "tag",
          "value": "Logging tag to change verbosity level"
        }
      ],
      "definition": {
        "name": "getLogTagVerbosityLevel",
        "id": 951004547,
        "params": [
          {
            "name": "tag",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "LogVerbosityLevel"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Adds a message to TDLib internal log. Can be called synchronously"
        },
        {
          "name": "verbosity_level",
          "value": "The minimum verbosity level needed for the message to be logged, 0-1023"
        },
        {
          "name": "text",
          "value": "Text of a message to log"
        }
      ],
      "definition": {
        "name": "addLogMessage",
        "id": 1597427692,
        "params": [
          {
            "name": "verbosity_level",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "text",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Does nothing; for testing only. This is an offline method. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "testCallEmpty",
        "id": 3667675670,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received string; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "String to return"
        }
      ],
      "definition": {
        "name": "testCallString",
        "id": 2562148911,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "string",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestString"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received bytes; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Bytes to return"
        }
      ],
      "definition": {
        "name": "testCallBytes",
        "id": 3558955689,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "bytes",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestBytes"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received vector of numbers; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Vector of numbers to return"
        }
      ],
      "definition": {
        "name": "testCallVectorInt",
        "id": 1710063218,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "int32",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorInt"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received vector of objects containing a number; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Vector of objects to return"
        }
      ],
      "definition": {
        "name": "testCallVectorIntObject",
        "id": 3394761842,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "testInt",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorIntObject"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received vector of strings; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Vector of strings to return"
        }
      ],
      "definition": {
        "name": "testCallVectorString",
        "id": 2388291288,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "string",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorString"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the received vector of objects containing a string; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Vector of objects to return"
        }
      ],
      "definition": {
        "name": "testCallVectorStringObject",
        "id": 158127838,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "vector",
              "bare": true,
              "generic_arg": {
                "name": "testString",
                "bare": true
              }
            }
          }
        ],
        "type": {
          "name": "TestVectorStringObject"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the squared received number; for testing only. This is an offline method. Can be called before authorization"
        },
        {
          "name": "x",
          "value": "Number to square"
        }
      ],
      "definition": {
        "name": "testSquareInt",
        "id": 4234832272,
        "params": [
          {
            "name": "x",
            "type": {
              "name": "int32",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "TestInt"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a simple network request to the Telegram servers; for testing only. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "testNetwork",
        "id": 2950968395,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Sends a simple network request to the Telegram servers via proxy; for testing only. Can be called before authorization"
        },
        {
          "name": "server",
          "value": "Proxy server IP address"
        },
        {
          "name": "port",
          "value": "Proxy server port"
        },
        {
          "name": "type",
          "value": "Proxy type"
        },
        {
          "name": "dc_id",
          "value": "Identifier of a datacenter, with which to test connection"
        },
        {
          "name": "timeout",
          "value": "The maximum overall timeout for the request"
        }
      ],
      "definition": {
        "name": "testProxy",
        "id": 3097600670,
        "params": [
          {
            "name": "server",
            "type": {
              "name": "string",
              "bare": true
            }
          },
          {
            "name": "port",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "type",
            "type": {
              "name": "ProxyType"
            }
          },
          {
            "name": "dc_id",
            "type": {
              "name": "int32",
              "bare": true
            }
          },
          {
            "name": "timeout",
            "type": {
              "name": "double",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Forces an updates.getDifference call to the Telegram servers; for testing only"
        }
      ],
      "definition": {
        "name": "testGetDifference",
        "id": 1747084069,
        "type": {
          "name": "Ok"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Does nothing and ensures that the Update object is used; for testing only. This is an offline method. Can be called before authorization"
        }
      ],
      "definition": {
        "name": "testUseUpdate",
        "id": 717094686,
        "type": {
          "name": "Update"
        }
      },
      "category": "function"
    },
    {
      "annotations": [
        {
          "name": "description",
          "value": "Returns the specified error and ensures that the Error object is used; for testing only. Can be called synchronously"
        },
        {
          "name": "error",
          "value": "The error to be returned"
        }
      ],
      "definition": {
        "name": "testReturnError",
        "id": 455179506,
        "params": [
          {
            "name": "error",
            "type": {
              "name": "error",
              "bare": true
            }
          }
        ],
        "type": {
          "name": "Error"
        }
      },
      "category": "function"
    }
  ],
  "classes": [
    {
      "Name": "AuthenticationCodeType",
      "Description": "Provides information about the method by which an authentication code is delivered to the user"
    },
    {
      "Name": "AuthorizationState",
      "Description": "Represents the current authorization state of the TDLib client"
    },
    {
      "Name": "InputFile",
      "Description": "Points to a file"
    },
    {
      "Name": "ThumbnailFormat",
      "Description": "Describes format of the thumbnail"
    },
    {
      "Name": "MaskPoint",
      "Description": "Part of the face, relative to which a mask should be placed"
    },
    {
      "Name": "PollType",
      "Description": "Describes the type of a poll"
    },
    {
      "Name": "UserType",
      "Description": "Represents the type of a user. The following types are possible: regular users, deleted users and bots"
    },
    {
      "Name": "InputChatPhoto",
      "Description": "Describes a photo to be set as a user profile or chat photo"
    },
    {
      "Name": "ChatMemberStatus",
      "Description": "Provides information about the status of a member in a chat"
    },
    {
      "Name": "ChatMembersFilter",
      "Description": "Specifies the kind of chat members to return in searchChatMembers"
    },
    {
      "Name": "SupergroupMembersFilter",
      "Description": "Specifies the kind of chat members to return in getSupergroupMembers"
    },
    {
      "Name": "SecretChatState",
      "Description": "Describes the current secret chat state"
    },
    {
      "Name": "MessageSender",
      "Description": "Contains information about the sender of a message"
    },
    {
      "Name": "MessageForwardOrigin",
      "Description": "Contains information about the origin of a forwarded message"
    },
    {
      "Name": "MessageSendingState",
      "Description": "Contains information about the sending state of the message"
    },
    {
      "Name": "NotificationSettingsScope",
      "Description": "Describes the types of chats to which notification settings are applied"
    },
    {
      "Name": "ChatType",
      "Description": "Describes the type of a chat"
    },
    {
      "Name": "ChatList",
      "Description": "Describes a list of chats"
    },
    {
      "Name": "ChatSource",
      "Description": "Describes a reason why an external chat is shown in a chat list"
    },
    {
      "Name": "PublicChatType",
      "Description": "Describes a type of public chats"
    },
    {
      "Name": "ChatActionBar",
      "Description": "Describes actions which should be possible to do through a chat action bar"
    },
    {
      "Name": "KeyboardButtonType",
      "Description": "Describes a keyboard button type"
    },
    {
      "Name": "InlineKeyboardButtonType",
      "Description": "Describes the type of an inline keyboard button"
    },
    {
      "Name": "ReplyMarkup",
      "Description": "Contains a description of a custom keyboard and actions that can be done with it to quickly reply to bots"
    },
    {
      "Name": "LoginUrlInfo",
      "Description": "Contains information about an inline button of type inlineKeyboardButtonTypeLoginUrl"
    },
    {
      "Name": "RichText",
      "Description": "Describes a text object inside an instant-view web page"
    },
    {
      "Name": "PageBlockHorizontalAlignment",
      "Description": "Describes a horizontal alignment of a table cell content"
    },
    {
      "Name": "PageBlockVerticalAlignment",
      "Description": "Describes a Vertical alignment of a table cell content"
    },
    {
      "Name": "PageBlock",
      "Description": "Describes a block of an instant view web page"
    },
    {
      "Name": "InputCredentials",
      "Description": "Contains information about the payment method chosen by the user"
    },
    {
      "Name": "PassportElementType",
      "Description": "Contains the type of a Telegram Passport element"
    },
    {
      "Name": "PassportElement",
      "Description": "Contains information about a Telegram Passport element"
    },
    {
      "Name": "InputPassportElement",
      "Description": "Contains information about a Telegram Passport element to be saved"
    },
    {
      "Name": "PassportElementErrorSource",
      "Description": "Contains the description of an error in a Telegram Passport element"
    },
    {
      "Name": "InputPassportElementErrorSource",
      "Description": "Contains the description of an error in a Telegram Passport element; for bots only"
    },
    {
      "Name": "MessageContent",
      "Description": "Contains the content of a message"
    },
    {
      "Name": "TextEntityType",
      "Description": "Represents a part of the text which must be formatted differently"
    },
    {
      "Name": "MessageSchedulingState",
      "Description": "Contains information about the time when a scheduled message will be sent"
    },
    {
      "Name": "InputMessageContent",
      "Description": "The content of a message to send"
    },
    {
      "Name": "SearchMessagesFilter",
      "Description": "Represents a filter for message search results"
    },
    {
      "Name": "ChatAction",
      "Description": "Describes the different types of activity in a chat"
    },
    {
      "Name": "UserStatus",
      "Description": "Describes the last time the user was online"
    },
    {
      "Name": "CallDiscardReason",
      "Description": "Describes the reason why a call was discarded"
    },
    {
      "Name": "CallServerType",
      "Description": "Describes the type of a call server"
    },
    {
      "Name": "CallState",
      "Description": "Describes the current call state"
    },
    {
      "Name": "CallProblem",
      "Description": "Describes the exact type of a problem with a call"
    },
    {
      "Name": "DiceStickers",
      "Description": "Contains animated stickers which should be used for dice animation rendering"
    },
    {
      "Name": "InputInlineQueryResult",
      "Description": "Represents a single result of an inline query; for bots only"
    },
    {
      "Name": "InlineQueryResult",
      "Description": "Represents a single result of an inline query"
    },
    {
      "Name": "CallbackQueryPayload",
      "Description": "Represents a payload of a callback query"
    },
    {
      "Name": "ChatEventAction",
      "Description": "Represents a chat event"
    },
    {
      "Name": "LanguagePackStringValue",
      "Description": "Represents the value of a string in a language pack"
    },
    {
      "Name": "DeviceToken",
      "Description": "Represents a data needed to subscribe for push notifications through registerDevice method. To use specific push notification service, the correct application platform must be specified and a valid server authentication data must be uploaded at https://my.telegram.org"
    },
    {
      "Name": "BackgroundFill",
      "Description": "Describes a fill of a background"
    },
    {
      "Name": "BackgroundType",
      "Description": "Describes the type of a background"
    },
    {
      "Name": "InputBackground",
      "Description": "Contains information about background to set"
    },
    {
      "Name": "CanTransferOwnershipResult",
      "Description": "Represents result of checking whether the current session can be used to transfer a chat ownership to another user"
    },
    {
      "Name": "CheckChatUsernameResult",
      "Description": "Represents result of checking whether a username can be set for a chat"
    },
    {
      "Name": "PushMessageContent",
      "Description": "Contains content of a push message notification"
    },
    {
      "Name": "NotificationType",
      "Description": "Contains detailed information about a notification"
    },
    {
      "Name": "NotificationGroupType",
      "Description": "Describes the type of notifications in a notification group"
    },
    {
      "Name": "OptionValue",
      "Description": "Represents the value of an option"
    },
    {
      "Name": "JsonValue",
      "Description": "Represents a JSON value"
    },
    {
      "Name": "UserPrivacySettingRule",
      "Description": "Represents a single rule for managing privacy settings"
    },
    {
      "Name": "UserPrivacySetting",
      "Description": "Describes available user privacy settings"
    },
    {
      "Name": "ChatReportReason",
      "Description": "Describes the reason why a chat is reported"
    },
    {
      "Name": "FileType",
      "Description": "Represents the type of a file"
    },
    {
      "Name": "NetworkType",
      "Description": "Represents the type of a network"
    },
    {
      "Name": "NetworkStatisticsEntry",
      "Description": "Contains statistics about network usage"
    },
    {
      "Name": "ConnectionState",
      "Description": "Describes the current state of the connection to Telegram servers"
    },
    {
      "Name": "TopChatCategory",
      "Description": "Represents the categories of chats for which a list of frequently used chats can be retrieved"
    },
    {
      "Name": "TMeUrlType",
      "Description": "Describes the type of a URL linking to an internal Telegram entity"
    },
    {
      "Name": "SuggestedAction",
      "Description": "Describes an action suggested to the current user"
    },
    {
      "Name": "TextParseMode",
      "Description": "Describes the way the text should be parsed for TextEntities"
    },
    {
      "Name": "ProxyType",
      "Description": "Describes the type of a proxy server"
    },
    {
      "Name": "InputSticker",
      "Description": "Describes a sticker that needs to be added to a sticker set"
    },
    {
      "Name": "StatisticsGraph",
      "Description": "Describes a statistics graph"
    },
    {
      "Name": "ChatStatistics",
      "Description": "Contains a detailed statistics about a chat"
    },
    {
      "Name": "Update",
      "Description": "Contains notifications about data changes"
    },
    {
      "Name": "LogStream",
      "Description": "Describes a stream to which TDLib internal log is written"
    }
  ]
}